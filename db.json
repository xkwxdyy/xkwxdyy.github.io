{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":1,"renderable":1},{"_id":"themes/fluid/source/css/macpanel.styl","path":"css/macpanel.styl","modified":1,"renderable":1},{"_id":"themes/fluid/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/fluid/source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"themes/fluid/source/img/default.png","path":"img/default.png","modified":1,"renderable":1},{"_id":"themes/fluid/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/fluid/source/img/loading.gif","path":"img/loading.gif","modified":1,"renderable":1},{"_id":"themes/fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":1,"renderable":1},{"_id":"themes/fluid/source/img/self-photo.png","path":"img/self-photo.png","modified":1,"renderable":1},{"_id":"themes/fluid/source/img/xdyylogo-image.png","path":"img/xdyylogo-image.png","modified":1,"renderable":1},{"_id":"themes/fluid/source/img/xdyylogo-real.png","path":"img/xdyylogo-real.png","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/boot.js","path":"js/boot.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/events.js","path":"js/events.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/plugins.js","path":"js/plugins.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":1,"renderable":1}],"Cache":[{"_id":"source/about/index.md","hash":"81206923edfe782d43328c91d11d62607fdd740c","modified":1641488549000},{"_id":"source/.DS_Store","hash":"cb8d94f3f053cf6d4c80860a326c24fdffb7632b","modified":1646013525680},{"_id":"source/_posts/.DS_Store","hash":"475cb8f645bda9238f8e67feb786d2aa234b5756","modified":1646013525680},{"_id":"source/_posts/LaTeX-learning.md","hash":"27381f823026c092adfc367d653ac72ef7312f0f","modified":1642782757769},{"_id":"source/_posts/LaTeX3-learning.md","hash":"1242ce4dba700cc6def0ace96f96e8efdc86aefd","modified":1642657236758},{"_id":"source/_posts/blog-outline.md","hash":"2082d8911766ccd140f2e07da2ff5b9e0879c9e5","modified":1641694373000},{"_id":"source/_posts/choices-sty.md","hash":"564264c7656e2f0e01b02fa86ce5692618603d73","modified":1641707723000},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1641437618000},{"_id":"source/_posts/enumerate-continume-numbering-within-chapter.md","hash":"e369c4d9cd5079634f06b5a02fa3a184ae4e21c9","modified":1642229447327},{"_id":"source/_posts/hexo-learning.md","hash":"c87a0a911da556128094ec4db29fd006769f70cc","modified":1645881596776},{"_id":"source/_posts/markdown-learning.md","hash":"bfff0e2c7f1e42f8b7d0875177f3e7f3cc4f4993","modified":1641694155000},{"_id":"themes/fluid/source/css/_pages/_category/category.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1640938356000},{"_id":"themes/fluid/README_en.md","hash":"ca8fd19a4948de1f253616a62c0e8a7d81f692f5","modified":1640938356000},{"_id":"themes/fluid/README.md","hash":"03cfa8e5f149514b57ef80dcb84eb7fea261370d","modified":1640938356000},{"_id":"themes/fluid/LICENSE","hash":"df5b54be535593d5442cebafbea34eb9bd69b987","modified":1640938356000},{"_id":"themes/fluid/languages/eo.yml","hash":"a0c7984495d4f2d33b64adfa33adebbf768a5ac3","modified":1640938356000},{"_id":"themes/fluid/.DS_Store","hash":"cfe07857af0fac0e2368ecc93e24496c6f6eff3f","modified":1645065440294},{"_id":"themes/fluid/languages/en.yml","hash":"a85dcc5cc21f9cab50df31e5001b8818ee62d1e2","modified":1640938356000},{"_id":"themes/fluid/package.json","hash":"4e3992cacd64c6888218b0346283258e8f82a27d","modified":1640938356000},{"_id":"themes/fluid/languages/zh-TW.yml","hash":"1a6d415446da11dee5c5f400e7d67544fbe743ea","modified":1640938356000},{"_id":"themes/fluid/languages/ja.yml","hash":"91020031a847c0361a6fd7ab990c7be4bf17529b","modified":1640938356000},{"_id":"themes/fluid/_config.yml","hash":"071824eb1abeb385bab058969a2c091911b948e3","modified":1645063400358},{"_id":"themes/fluid/languages/zh-CN.yml","hash":"21307b4137c3d9b04bb58243747e75af0abc5a71","modified":1640938356000},{"_id":"themes/fluid/layout/404.ejs","hash":"689d9f4efd2a7f5edfd9b24561a7ade69d46617c","modified":1640938356000},{"_id":"themes/fluid/layout/archive.ejs","hash":"472d0813ca5b88000a7bc6039f33b7e27b5a3216","modified":1640938356000},{"_id":"themes/fluid/layout/about.ejs","hash":"ad6fed7b646d3ca961db83db0fbe020e3a5d42ad","modified":1640938356000},{"_id":"themes/fluid/layout/index.ejs","hash":"f3ae4395e751c4a02d5895e07856b1e8edfdda08","modified":1640938356000},{"_id":"themes/fluid/layout/categories.ejs","hash":"20c2a195a109d2a263b5fa6e79cbcc62932508ad","modified":1640938356000},{"_id":"themes/fluid/languages/de.yml","hash":"13a6a799415fc2f6f69ebd1a399fb44426a5d641","modified":1640938356000},{"_id":"themes/fluid/layout/layout.ejs","hash":"7f566edf750241e62d7c54abfbb0c504fdab850a","modified":1640938356000},{"_id":"themes/fluid/layout/tag.ejs","hash":"0ad89eb7c92a822980fa9a85285e6d94ad845d1d","modified":1640938356000},{"_id":"themes/fluid/layout/page.ejs","hash":"1014b901d396f4fc445cb1ffc938d5380d894d71","modified":1640938356000},{"_id":"themes/fluid/layout/links.ejs","hash":"2a7b49f0f9aecf07550b5a0b99242aab5654cf2b","modified":1640938356000},{"_id":"themes/fluid/layout/post.ejs","hash":"79e3679a7069351a6172c281b9d09f59d7580484","modified":1640938356000},{"_id":"themes/fluid/layout/category.ejs","hash":"58291dfec65c36889dfce0ddc603540b67e4c598","modified":1640938356000},{"_id":"themes/fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1640938356000},{"_id":"themes/fluid/source/.DS_Store","hash":"df054f63d3a1b43138c0a85b1da52d3541064005","modified":1645065390972},{"_id":"themes/fluid/layout/_partial/beian.ejs","hash":"58b4bbe36386de4305a8da5ffd7d56802df23049","modified":1640938356000},{"_id":"themes/fluid/layout/.DS_Store","hash":"639c1fca68a0f9bf8c3a17b38e1381493eddd21e","modified":1645065501424},{"_id":"themes/fluid/layout/_partial/footer.ejs","hash":"a62278c38a310da495d96c39abacacef266945cb","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/css.ejs","hash":"c363829a4b80f74fc1c565e41f6dab41c95006ea","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/archive-list.ejs","hash":"53a4f6029373a40394a87aba9284696a71610f90","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/scripts.ejs","hash":"0ee838b6fcd895d21a29d9d67dbb99b752d623d1","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/nav.ejs","hash":"e71b3c4aa263163597d31b1f91e5a1a877084cfd","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1640938356000},{"_id":"themes/fluid/scripts/events/index.js","hash":"44faef3e77ab08b91e4c5c6f1cd9087a9faff443","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/head.ejs","hash":"f7f3494ed001e8cdcdc3e8a1d2cd1195cff2ded5","modified":1640938356000},{"_id":"themes/fluid/scripts/filters/post-filter.js","hash":"6c37e9f1ac1d6d00b3c32794e02e244dba942cd9","modified":1640938356000},{"_id":"themes/fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1640938356000},{"_id":"themes/fluid/scripts/generators/local-search.js","hash":"fc2c50405b771b06b7f6cfc4e9de97b992691555","modified":1640938356000},{"_id":"themes/fluid/scripts/generators/pages.js","hash":"d9971f15fbb6b775e3d31a1b9b45011959395010","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/statistics.ejs","hash":"920bc618d357d48d2b96f8758f6ae8f9488fc4d8","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/toc.ejs","hash":"3d2fb5552f373e5a0c56bc356702d807bcbcb411","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/search.ejs","hash":"cdd7919fa01f6ef7ccc09938d662ff3d77f5d999","modified":1640938356000},{"_id":"themes/fluid/scripts/helpers/export-config.js","hash":"cde964c8cd3217268a231de5e018a62c53c2e047","modified":1640938356000},{"_id":"themes/fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1640938356000},{"_id":"themes/fluid/scripts/helpers/wordcount.js","hash":"b917b893b1777e6ffcb53188f9f5644510e5f20d","modified":1640938356000},{"_id":"themes/fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1640938356000},{"_id":"themes/fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1640938356000},{"_id":"themes/fluid/scripts/tags/checkbox.js","hash":"63468f7875c09d9557fe8315afc97175745d9087","modified":1640938356000},{"_id":"themes/fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1640938356000},{"_id":"themes/fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1640938356000},{"_id":"themes/fluid/scripts/helpers/utils.js","hash":"3aa5b4ea879cd34d3a32468d88da18d72cbcc8e0","modified":1640938356000},{"_id":"themes/fluid/scripts/tags/note.js","hash":"f52f3a005b41f48b4da274ac64710177c8d4502f","modified":1640938356000},{"_id":"themes/fluid/scripts/utils/object.js","hash":"649457796374c79e49a19bd541e4ad8e78fe8995","modified":1640938356000},{"_id":"themes/fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1640938356000},{"_id":"themes/fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/post-meta.ejs","hash":"32a17edadeed40da6db21d2d8031bd47d2fc9bf4","modified":1640938356000},{"_id":"themes/fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1640938356000},{"_id":"themes/fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1640938356000},{"_id":"themes/fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1640938356000},{"_id":"themes/fluid/source/css/macpanel.styl","hash":"6de066cea14acc806f3a5b4e95dd66f3d328f3fb","modified":1641572932000},{"_id":"themes/fluid/source/img/favicon.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1640938356000},{"_id":"themes/fluid/source/img/default.png","hash":"7bb2b8ee07db305bcadee2985b81b942027ae940","modified":1640938356000},{"_id":"themes/fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1640938356000},{"_id":"themes/fluid/source/js/color-schema.js","hash":"f1fdd512f3ef92ff5db4a49f5a3143d5ddea9858","modified":1640938356000},{"_id":"themes/fluid/source/js/boot.js","hash":"3de344ee619da989f6dccf7c2ae459fe91075983","modified":1640938356000},{"_id":"themes/fluid/source/js/events.js","hash":"4b9d2676c9544db9cc40a8c7d18456792299ba86","modified":1640938356000},{"_id":"themes/fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1640938356000},{"_id":"themes/fluid/source/js/leancloud.js","hash":"53987b7a668ea0623370eb83ed5311766221b557","modified":1640938356000},{"_id":"themes/fluid/source/css/main.styl","hash":"d5a8a59c8d1fd17d699a951e59c4ce9ae44c419d","modified":1640938356000},{"_id":"themes/fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1640938356000},{"_id":"themes/fluid/source/js/local-search.js","hash":"633f0142c657805359b0197f287e12ae4bcde731","modified":1640938356000},{"_id":"themes/fluid/source/js/utils.js","hash":"4a43f2700e91937650bef511fd438825b001c4c6","modified":1640938356000},{"_id":"themes/fluid/source/js/plugins.js","hash":"d058f30bd09b28769c4d8313428ff23dfc8d52dd","modified":1640938356000},{"_id":"themes/fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1640938356000},{"_id":"themes/fluid/source/img/.DS_Store","hash":"020a8c1bce1ddf03d9e095ed84d136eebb6f119b","modified":1642174850861},{"_id":"themes/fluid/layout/_partial/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1640938356000},{"_id":"themes/fluid/source/css/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1641572893704},{"_id":"themes/fluid/layout/_partial/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/comments/twikoo.ejs","hash":"1af53bc0be642610a3a4d4e7c05287854a821508","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/comments/utterances.ejs","hash":"e1ed6530dfd7310f91060a75766a93ac3c39be3a","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/comments/valine.ejs","hash":"4052ab2a8f78efa92f0fe17abe8f66135943390a","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/comments/waline.ejs","hash":"21e00443054802e893aac1f668b69d5bb4b39b3a","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/plugins/math.ejs","hash":"df6941bd3b860180d01fd39ee859ed2d42f4d1f0","modified":1640938356000},{"_id":"themes/fluid/scripts/events/lib/compatible-configs.js","hash":"b5fd5a2d9c463eb59318af0f47c591c485b6ad27","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/plugins/mermaid.ejs","hash":"10ed1f9a611449d37736e17c4e251127b38b3772","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/plugins/analytics.ejs","hash":"557077a8825fffc0a2c7fe2b29f319287950244f","modified":1640938356000},{"_id":"themes/fluid/scripts/events/lib/footnote.js","hash":"3b2abc5f5e3b681874637e98e047dc4969eb1983","modified":1640938356000},{"_id":"themes/fluid/scripts/events/lib/highlight.js","hash":"fd5fcb6a61ad865197a778eeae889b80484227dd","modified":1640938356000},{"_id":"themes/fluid/scripts/events/lib/hello.js","hash":"28e186c32576eb3d5d923273471a001c47fe8071","modified":1640938356000},{"_id":"themes/fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1640938356000},{"_id":"themes/fluid/scripts/events/lib/merge-configs.js","hash":"c1db1a4f9eca6e36b660530641e3a4fb6a30c8d8","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/plugins/typed.ejs","hash":"e8e01c5db46b383748855452aecd70fcda99f598","modified":1640938356000},{"_id":"themes/fluid/source/css/_variables/base.styl","hash":"08b455b848b21d57e0563b87071c4bae2b63bafe","modified":1640938356000},{"_id":"themes/fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1640938356000},{"_id":"themes/fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/base.styl","hash":"c2d8bfd04bf0734b387c049402b46a06a05fc582","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/color-schema.styl","hash":"80098e8354069631bde8edcd1181a53091a92949","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_archive/archive.styl","hash":"6e6f22b664199772370b59ce1678b0c148b5849f","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/inline.styl","hash":"d547ab0b91f84eb0acd0bc0c5d716ce17c30361a","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/rewrite.styl","hash":"a2993f23701de9a83e3f428300e62c5c52b4ff4b","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_category/categories.styl","hash":"1ab7db37c2f7dc7ccdb994dcb41c16a4c8920397","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_links/links.styl","hash":"7e32a3268accf3d524209c213e15e2d5d5e2e1a6","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_index/index.styl","hash":"616c1f7147078c3d532dd1cfd2af09c0c3a816f0","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_post/tag_plugin.styl","hash":"b89b96c8a6a433a6f372b42710554b05cab85a24","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_post/post.styl","hash":"5e86487de0f16c30ca3e16460ab94b57620e31c5","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/banner.styl","hash":"30f8fab95a5214d79df0ccc02b937df8bd885676","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/board.styl","hash":"32d90bcc8bf2fd5d8d78e86a567973d4b69bcfa1","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/copy-btn.styl","hash":"9f932ca3f9625c13aa5353f58319881e62c0c653","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footer.styl","hash":"0ce7552dc4993926426019398d73e817cfd841a1","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/header.styl","hash":"d8011325756eb6e4ce619b3e7b4d6d80c2de8a57","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"55e10a6965462f8f62f85e75fd5e143af02a4b44","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1640938356000},{"_id":"themes/fluid/layout/_partial/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1640938356000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1640938356000},{"_id":"themes/fluid/source/img/xdyylogo-image.png","hash":"5cd494ad8927a1517c6a3119ed7ff678cd0f3d91","modified":1611112428000},{"_id":"themes/fluid/source/img/xdyylogo-real.png","hash":"fbc1e79ac04d886ce6cde1e02fc7428f6f8765c3","modified":1594117081000},{"_id":"themes/fluid/source/img/self-photo.png","hash":"5e9da682c7871bf52ff0a2d2cf2973eddd0fe91e","modified":1641490055000},{"_id":"public/local-search.xml","hash":"bc0d4de6c1b80b63244d379d085ba116b13186cc","modified":1646441671553},{"_id":"public/atom.xml","hash":"21e095eac148cd8e6d904404896dcd6cb54eee62","modified":1646441671553},{"_id":"public/about/index.html","hash":"ff7a71dea6adcc6d1a795e1a0dd506bebe3dbf54","modified":1646441671553},{"_id":"public/2022/01/08/blog-outline/index.html","hash":"cd0ee6c9fa9b30d75a42425453394f97ca7eee98","modified":1646441671553},{"_id":"public/2022/01/08/markdown-learning/index.html","hash":"2dbe328c514ef53f6bbcc5c731f44d11886cb4c9","modified":1646441671553},{"_id":"public/archives/index.html","hash":"ff5647eb234635a01a98101718a449ae7cbba5b9","modified":1646441671553},{"_id":"public/archives/2022/01/index.html","hash":"de36212cd529abcad4eaa66a66d6a42a7d9d6313","modified":1646441671553},{"_id":"public/archives/2022/index.html","hash":"526202237de6714f7f8e5569cf2afe38041bc858","modified":1646441671553},{"_id":"public/categories/LaTeX杂谈/index.html","hash":"897cba076ae4f1a872c83fdea8b4a696f5e6205c","modified":1646441671553},{"_id":"public/categories/杂谈/index.html","hash":"ffa56d2a99092c8b17e69ef491aa1556dec6ebcf","modified":1646441671553},{"_id":"public/categories/LaTeX3杂谈/index.html","hash":"d0401a9d0dfe41206c49fb8e43e91c4b41107e5a","modified":1646441671553},{"_id":"public/categories/个人作品/index.html","hash":"b54b4d7d91770debbc1ab18743d044c3405a13a0","modified":1646441671553},{"_id":"public/categories/LaTeX/index.html","hash":"efd710663496d21748728a88307ebcb038292e66","modified":1646441671553},{"_id":"public/categories/LaTeX3实例分析/index.html","hash":"bc383dad96f08385e84bfc199ccbfcdf2f45cc30","modified":1646441671553},{"_id":"public/categories/LaTeX问题解决/index.html","hash":"03effc6139b2c7879d954c3b81762fdba0fb13b3","modified":1646441671553},{"_id":"public/tags/LaTeX杂谈/index.html","hash":"965216e6bc344b98298b983b15c2ed6a8ef4c2dd","modified":1646441671553},{"_id":"public/tags/杂谈/index.html","hash":"48ee77b3b9265c1de3ef315f634228710c0bda62","modified":1646441671553},{"_id":"public/tags/LaTeX3杂谈/index.html","hash":"9df5b6d735de7f742abe1c44f8208ef66d700fce","modified":1646441671553},{"_id":"public/tags/LaTeX3/index.html","hash":"c7ac18d42e4f5a41ca35727284a42c9a4b8110cf","modified":1646441671553},{"_id":"public/tags/实例分析/index.html","hash":"41082f4a3c464a8c7c0480ff2b9bd5a9746712bb","modified":1646441671553},{"_id":"public/tags/LaTeX/index.html","hash":"ef46689297f3b37a3161846dd6c27bf0b02ade64","modified":1646441671553},{"_id":"public/tags/宏包/index.html","hash":"af8fe9f0e448307ccd5836d2c4535e287bc297c4","modified":1646441671553},{"_id":"public/tags/enumerate/index.html","hash":"2343cfef039fd5dfb663aaa75c9435aa2f6e5345","modified":1646441671553},{"_id":"public/tags/Hexo/index.html","hash":"b97348aa63a658bb8bddbd355cb24384c8a2730d","modified":1646441671553},{"_id":"public/tags/问题解决/index.html","hash":"d6b404e6a69df6b55fd4a99481b1963ff9f8db80","modified":1646441671553},{"_id":"public/tags/Fluid/index.html","hash":"8516b1699de637cd7d80eb538f4f01e3878acbdc","modified":1646441671553},{"_id":"public/tags/markdown/index.html","hash":"d36cff65dad5d2749fde96d48628f07a370ad3fe","modified":1646441671553},{"_id":"public/404.html","hash":"50e17b58f2a86649fc5ac3e367da05699da5ea65","modified":1646441671553},{"_id":"public/tags/index.html","hash":"f3236cb463a453cbd91918256a0e6b4e68988c38","modified":1646441671553},{"_id":"public/2022/01/09/choices-sty/index.html","hash":"8cb808441da3136270d7a34a0d501f89d0ccee16","modified":1646441671553},{"_id":"public/2022/01/08/LaTeX-learning/index.html","hash":"e942b257b70575b6852e6927f896a7c2cf09ad92","modified":1646441671553},{"_id":"public/2022/01/08/LaTeX3-learning/index.html","hash":"c2bc6196a01d2cece54c3776a6d257daa78257ab","modified":1646441671553},{"_id":"public/2022/01/14/enumerate-continume-numbering-within-chapter/index.html","hash":"879f80000f1b54b2ae2ae46743f1a6184c1c51da","modified":1646441671553},{"_id":"public/2022/01/08/hexo-learning/index.html","hash":"f329165abac638e47d0729cb518a6014ebb40300","modified":1646441671553},{"_id":"public/2022/01/06/hello-world/index.html","hash":"0014c8e94d8573c357af271dfd10278c2c8cc2cd","modified":1646441671553},{"_id":"public/categories/index.html","hash":"2bac9a413a1368ebf1bcaf760f7ff3f461d8af51","modified":1646441671553},{"_id":"public/index.html","hash":"89ea3d42fc40a9439a5abbe8ede468e529ee4b9c","modified":1646441671553},{"_id":"public/links/index.html","hash":"2d637f9249a8724c479122c1d69346482ea26a57","modified":1646441671553},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1646441671553},{"_id":"public/img/default.png","hash":"7bb2b8ee07db305bcadee2985b81b942027ae940","modified":1646441671553},{"_id":"public/img/favicon.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1646441671553},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1646441671553},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1646441671553},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1646441671553},{"_id":"public/css/macpanel.css","hash":"3c0f23296d469f017698d12f0096489057b6cca3","modified":1646441671553},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1646441671553},{"_id":"public/js/events.js","hash":"4b9d2676c9544db9cc40a8c7d18456792299ba86","modified":1646441671553},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1646441671553},{"_id":"public/js/local-search.js","hash":"633f0142c657805359b0197f287e12ae4bcde731","modified":1646441671553},{"_id":"public/js/color-schema.js","hash":"f1fdd512f3ef92ff5db4a49f5a3143d5ddea9858","modified":1646441671553},{"_id":"public/js/utils.js","hash":"4a43f2700e91937650bef511fd438825b001c4c6","modified":1646441671553},{"_id":"public/js/plugins.js","hash":"d058f30bd09b28769c4d8313428ff23dfc8d52dd","modified":1646441671553},{"_id":"public/js/leancloud.js","hash":"53987b7a668ea0623370eb83ed5311766221b557","modified":1646441671553},{"_id":"public/js/boot.js","hash":"3de344ee619da989f6dccf7c2ae459fe91075983","modified":1646441671553},{"_id":"public/css/main.css","hash":"63bc59b8ca4b03afa2b93883143c349d461b1052","modified":1646441671553},{"_id":"public/img/xdyylogo-real.png","hash":"fbc1e79ac04d886ce6cde1e02fc7428f6f8765c3","modified":1646441671553},{"_id":"public/img/xdyylogo-image.png","hash":"5cd494ad8927a1517c6a3119ed7ff678cd0f3d91","modified":1646441671553},{"_id":"public/img/self-photo.png","hash":"5e9da682c7871bf52ff0a2d2cf2973eddd0fe91e","modified":1646441671553}],"Category":[{"name":"LaTeX杂谈","_id":"cl0d4v0ft0003g491674f8ejc"},{"name":"LaTeX3杂谈","_id":"cl0d4v0fv0008g4916rz86ee5"},{"name":"杂谈","_id":"cl0d4v0fw000eg491eh1h6lp8"},{"name":"个人作品","_id":"cl0d4v0fw000jg491epj8491w"},{"name":"LaTeX","_id":"cl0d4v0fx000ng4912st4au8a"},{"name":"LaTeX3实例分析","_id":"cl0d4v0fx000pg491auxq2gye"},{"name":"LaTeX问题解决","_id":"cl0d4v0fx000rg4917nf34o6l"}],"Data":[],"Page":[{"title":"关于夏大鱼羊","date":"2022-01-06T16:00:00.000Z","layout":"about","_content":"\n武汉大学在读基础数学研究生，爱好羽毛球，LaTeX初学者。\n\n此博客主要用于\n\n- 记录LaTeX、Python、命令行等软件学习的学习体会、经验分享以及代码总结等\n- 学习数学的一些心得体会或学习记录等\n","source":"about/index.md","raw":"---\ntitle: 关于夏大鱼羊\ndate: 2022-01-07\nlayout: about\n---\n\n武汉大学在读基础数学研究生，爱好羽毛球，LaTeX初学者。\n\n此博客主要用于\n\n- 记录LaTeX、Python、命令行等软件学习的学习体会、经验分享以及代码总结等\n- 学习数学的一些心得体会或学习记录等\n","updated":"2022-01-06T16:00:00.000Z","path":"about/index.html","comments":1,"_id":"cl0d4v0fp0000g491c3fneiud","content":"<p>武汉大学在读基础数学研究生，爱好羽毛球，LaTeX初学者。</p>\n<p>此博客主要用于</p>\n<ul>\n<li>记录LaTeX、Python、命令行等软件学习的学习体会、经验分享以及代码总结等</li>\n<li>学习数学的一些心得体会或学习记录等</li>\n</ul>\n","site":{"data":{}},"wordcount":93,"excerpt":"","more":"<p>武汉大学在读基础数学研究生，爱好羽毛球，LaTeX初学者。</p>\n<p>此博客主要用于</p>\n<ul>\n<li>记录LaTeX、Python、命令行等软件学习的学习体会、经验分享以及代码总结等</li>\n<li>学习数学的一些心得体会或学习记录等</li>\n</ul>\n"}],"Post":[{"title":"我的LaTeX学习历程","date":"2022-01-08T13:22:51.000Z","updated":"2022-01-21T10:54:00.000Z","excerpt":"主要介绍个人的LaTeX学习的几个阶段。","_content":"\n## LaTeX-TODO\n\n用于记录我想编写解决的代码问题\n\n- 选择题或解答题和图在一起的时候的排版\n  - coffin\n- 选择题的末行括号自动出现\n- choices命令结合答案\n\n## 自己的LaTeX经历杂谈\n\n最开始是大二第一次接触，具体怎么知道的LaTeX我已经忘记，但是当时主要是被LaTeX的数学公式排版所吸引，我还记得当时在图书馆看刘海洋的书，一边看一边在TeXShop里看例题的编译效果，这种反馈虽然比word的所见即所得要略慢一丢丢，但也没差到哪里，而且精致的数学排版让我一下就喜欢上了LaTeX。\n\n应该就是在大二大三那个时候，自己也偶尔瞎研究，当时什么LaTeX工作室，论坛，tex.se都不知道，自己搞beamer、笔记模版啥的，遇到问题直接百度，CSDN，东拼西凑，我还深刻记得当时去弄水印背景，还是查到用box的方式结合`fancyhdr`宏包来处理（其实就是把图片放在了页眉或者页脚的方式）那个水平垂直距离都是一点点手动去调整尝试，现在想想都有点莫名的辛酸hhh。\n\n然后就因为平常没什么需求用到，就搁置了LaTeX很久都没动，一直到了大三的那个暑假夏令营要弄简历，我就想着要不用LaTeX弄一个简历出来，然后很自然地就去网上找模版（其实都不太满意，这也是为什么我现在都不太用别人的模版的原因之一），好不容易找到一个整体还算满意的，但是编译起来就是出bug（这是我不用别人模版的原因之二，别人的较为成熟的模版一般都有较强的一致性，比如一些自定义的命令之类的，自己如果功力不够在那瞎改那就很容易报错），时间又很紧，于是去网上找人代排，好像是花了50元改了一小个地方。\n\n正好那个时候我想到了我本科的毕业论文模版是CTEX套装写的（现在基本已经被淘汰了），就想着要不也让人重写一个，结果我一问价格，800起步，我直接一个震惊给到！\n\n莫名的我就很气，气我自己的LaTeX怎么这么菜，就是那一次我就下定决心一定要学好LaTeX。\n\n然后大四搞毕业论文，上课什么的也没搞，就想着毕业的暑假搞。在学校的时候机缘巧合下知道了万述波老师的书，然后买了一本发现还不错，然后在万老师的群里又看到陈晓老师也要出一本书，而且是更多应用之类的，我个人对LaTeX的应用和实现效果是很感兴趣的，所以也在刚发行的时候果断也买了一本。\n\n在暑假主要的时间就是在跟着陈晓老师的书一点点码，有的时候还出了很多的bug，书上也会有点小错误，就这里问，那里查，不过在群里我也认识了很多LaTeX水平很高的老师，比如耿楠教授、李泽平老师，乙醇哥等等，也有和我一样也是在学习LaTeX的同学，比如郭李军学弟（现在也变得水平很高了），他们在我的LaTeX学习过程中提供了莫大的帮助，在这里要表示衷心的感谢！\n\n我现在重新看自己的暑假的学习，我印象最深的应该就是三个：`tabularray`宏包、TikZ和LaTeX3：\n\n- `tabularray`宏包\n  - 其实我在码书上的表格部分的时候群里的老师就推荐我用这个宏包了，我当时的想法是基础的还是要掌握的，所以一直拖到一本书搞完才接触了这个宏包，然后...真香，这个宏包简直太厉害，对表格的处理非常的人性化，和原来的普通表格处理简直是天差地别\n- TikZ\n  - TikZ的`node`当时真是让我觉得很震惊，因为我发现我以前辛苦研究的那个水印的问题，用`node`可以轻松完成，而且相对距离这个是我非常喜欢的，因为在原来的某个参数变了之后，其它的可以“牵一发而动全身”，不需要自己再去手动调整，这才是符合我预期的计算机的功能，\n  - TikZ学完之后其实很少有绘图的需求，但是偶尔会用来画个小玩意，比如用`node`搞了个命令实现overlay的效果，主要在逻辑推导过程中，实现箭头（也可以变成其它的）上面可以有问号或是其它任何字符，灵活度更高\n- LaTeX3\n  - 这应该是我现阶段用的最多的代码\n  - 我本身是对TeX的底层实现挺感兴趣的，但是一些相关的书却有点让我不太容易读懂，因为我本身没有计算机的基础，读起来有些头疼（orz）。但是刚好那个时候LaTeX工作室发了项子越老师录制的LaTeX3讲解视频，然后一下子打开了新世界\n  - 统一格式、优化宏展开等等有点让我入了LaTeX3的坑，而且用它也某种程度上弥补了我本来想学习TeX的想法（虽然LaTeX3的一些命令没有TeX的基础还是读不了，但是对于大部分的内容是可以且容易理解接受和应用的），因为我最根本还是想能够自己实现一些功能，设计一些小东西。\n  - 但是目前（即使是现在）关于LaTeX3的**教程**其实还是没有很多。为什么我要强调“教程”呢？因为LaTeX3的官方文档`interface3.pdf`或`source3.pdf`是API性质的文档，个人理解是可以看作是一本字典，它会把变量函数的功能很客观地告诉你，虽然对于大部分来说，看了之后基本是知道怎么用的，但是也有相当一部分读完后还是一脸懵逼，如果类比一下高中学习的话，就会感觉例题太少了，如果学生的能力还不到位的话，只讲概念定理，学生对于其的把握还不到位，遇到问题也不知道如何去解决。而从我个人的LaTeX3学习经验来看，我觉得读别人写好的作品是一个很好的学习方式，其实这些就相当于是一个个例题，如果能够读懂，并明白其中的使用方式的话对于学好LaTeX3也是有非常大的帮助的。所以我的博客的有一个模块就是LaTeX3实例分析，只能以我浅薄的知识尝试去理解去读懂这些代码的逻辑等等，希望能够帮到有需要的人。\n\n目前基本是主要用LaTeX3写一些小玩意，LaTeX3甚至超过了TikZ对我的吸引力hhh，但是TikZ用好也很厉害，还是都要好好学一下。\n","source":"_posts/LaTeX-learning.md","raw":"---\ntitle: 我的LaTeX学习历程\ndate: 2022-01-08 21:22:51\nupdated: 2022-01-21 18:54\ncategory: [LaTeX杂谈]\ntag: [LaTeX杂谈]\nexcerpt: 主要介绍个人的LaTeX学习的几个阶段。\n---\n\n## LaTeX-TODO\n\n用于记录我想编写解决的代码问题\n\n- 选择题或解答题和图在一起的时候的排版\n  - coffin\n- 选择题的末行括号自动出现\n- choices命令结合答案\n\n## 自己的LaTeX经历杂谈\n\n最开始是大二第一次接触，具体怎么知道的LaTeX我已经忘记，但是当时主要是被LaTeX的数学公式排版所吸引，我还记得当时在图书馆看刘海洋的书，一边看一边在TeXShop里看例题的编译效果，这种反馈虽然比word的所见即所得要略慢一丢丢，但也没差到哪里，而且精致的数学排版让我一下就喜欢上了LaTeX。\n\n应该就是在大二大三那个时候，自己也偶尔瞎研究，当时什么LaTeX工作室，论坛，tex.se都不知道，自己搞beamer、笔记模版啥的，遇到问题直接百度，CSDN，东拼西凑，我还深刻记得当时去弄水印背景，还是查到用box的方式结合`fancyhdr`宏包来处理（其实就是把图片放在了页眉或者页脚的方式）那个水平垂直距离都是一点点手动去调整尝试，现在想想都有点莫名的辛酸hhh。\n\n然后就因为平常没什么需求用到，就搁置了LaTeX很久都没动，一直到了大三的那个暑假夏令营要弄简历，我就想着要不用LaTeX弄一个简历出来，然后很自然地就去网上找模版（其实都不太满意，这也是为什么我现在都不太用别人的模版的原因之一），好不容易找到一个整体还算满意的，但是编译起来就是出bug（这是我不用别人模版的原因之二，别人的较为成熟的模版一般都有较强的一致性，比如一些自定义的命令之类的，自己如果功力不够在那瞎改那就很容易报错），时间又很紧，于是去网上找人代排，好像是花了50元改了一小个地方。\n\n正好那个时候我想到了我本科的毕业论文模版是CTEX套装写的（现在基本已经被淘汰了），就想着要不也让人重写一个，结果我一问价格，800起步，我直接一个震惊给到！\n\n莫名的我就很气，气我自己的LaTeX怎么这么菜，就是那一次我就下定决心一定要学好LaTeX。\n\n然后大四搞毕业论文，上课什么的也没搞，就想着毕业的暑假搞。在学校的时候机缘巧合下知道了万述波老师的书，然后买了一本发现还不错，然后在万老师的群里又看到陈晓老师也要出一本书，而且是更多应用之类的，我个人对LaTeX的应用和实现效果是很感兴趣的，所以也在刚发行的时候果断也买了一本。\n\n在暑假主要的时间就是在跟着陈晓老师的书一点点码，有的时候还出了很多的bug，书上也会有点小错误，就这里问，那里查，不过在群里我也认识了很多LaTeX水平很高的老师，比如耿楠教授、李泽平老师，乙醇哥等等，也有和我一样也是在学习LaTeX的同学，比如郭李军学弟（现在也变得水平很高了），他们在我的LaTeX学习过程中提供了莫大的帮助，在这里要表示衷心的感谢！\n\n我现在重新看自己的暑假的学习，我印象最深的应该就是三个：`tabularray`宏包、TikZ和LaTeX3：\n\n- `tabularray`宏包\n  - 其实我在码书上的表格部分的时候群里的老师就推荐我用这个宏包了，我当时的想法是基础的还是要掌握的，所以一直拖到一本书搞完才接触了这个宏包，然后...真香，这个宏包简直太厉害，对表格的处理非常的人性化，和原来的普通表格处理简直是天差地别\n- TikZ\n  - TikZ的`node`当时真是让我觉得很震惊，因为我发现我以前辛苦研究的那个水印的问题，用`node`可以轻松完成，而且相对距离这个是我非常喜欢的，因为在原来的某个参数变了之后，其它的可以“牵一发而动全身”，不需要自己再去手动调整，这才是符合我预期的计算机的功能，\n  - TikZ学完之后其实很少有绘图的需求，但是偶尔会用来画个小玩意，比如用`node`搞了个命令实现overlay的效果，主要在逻辑推导过程中，实现箭头（也可以变成其它的）上面可以有问号或是其它任何字符，灵活度更高\n- LaTeX3\n  - 这应该是我现阶段用的最多的代码\n  - 我本身是对TeX的底层实现挺感兴趣的，但是一些相关的书却有点让我不太容易读懂，因为我本身没有计算机的基础，读起来有些头疼（orz）。但是刚好那个时候LaTeX工作室发了项子越老师录制的LaTeX3讲解视频，然后一下子打开了新世界\n  - 统一格式、优化宏展开等等有点让我入了LaTeX3的坑，而且用它也某种程度上弥补了我本来想学习TeX的想法（虽然LaTeX3的一些命令没有TeX的基础还是读不了，但是对于大部分的内容是可以且容易理解接受和应用的），因为我最根本还是想能够自己实现一些功能，设计一些小东西。\n  - 但是目前（即使是现在）关于LaTeX3的**教程**其实还是没有很多。为什么我要强调“教程”呢？因为LaTeX3的官方文档`interface3.pdf`或`source3.pdf`是API性质的文档，个人理解是可以看作是一本字典，它会把变量函数的功能很客观地告诉你，虽然对于大部分来说，看了之后基本是知道怎么用的，但是也有相当一部分读完后还是一脸懵逼，如果类比一下高中学习的话，就会感觉例题太少了，如果学生的能力还不到位的话，只讲概念定理，学生对于其的把握还不到位，遇到问题也不知道如何去解决。而从我个人的LaTeX3学习经验来看，我觉得读别人写好的作品是一个很好的学习方式，其实这些就相当于是一个个例题，如果能够读懂，并明白其中的使用方式的话对于学好LaTeX3也是有非常大的帮助的。所以我的博客的有一个模块就是LaTeX3实例分析，只能以我浅薄的知识尝试去理解去读懂这些代码的逻辑等等，希望能够帮到有需要的人。\n\n目前基本是主要用LaTeX3写一些小玩意，LaTeX3甚至超过了TikZ对我的吸引力hhh，但是TikZ用好也很厉害，还是都要好好学一下。\n","slug":"LaTeX-learning","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cl0d4v0fr0001g49128eqhg0i","content":"<h2 id=\"latex-todo\">LaTeX-TODO</h2>\n<p>用于记录我想编写解决的代码问题</p>\n<ul>\n<li>选择题或解答题和图在一起的时候的排版\n<ul>\n<li>coffin</li>\n</ul></li>\n<li>选择题的末行括号自动出现</li>\n<li>choices命令结合答案</li>\n</ul>\n<h2 id=\"自己的latex经历杂谈\">自己的LaTeX经历杂谈</h2>\n<p>最开始是大二第一次接触，具体怎么知道的LaTeX我已经忘记，但是当时主要是被LaTeX的数学公式排版所吸引，我还记得当时在图书馆看刘海洋的书，一边看一边在TeXShop里看例题的编译效果，这种反馈虽然比word的所见即所得要略慢一丢丢，但也没差到哪里，而且精致的数学排版让我一下就喜欢上了LaTeX。</p>\n<p>应该就是在大二大三那个时候，自己也偶尔瞎研究，当时什么LaTeX工作室，论坛，tex.se都不知道，自己搞beamer、笔记模版啥的，遇到问题直接百度，CSDN，东拼西凑，我还深刻记得当时去弄水印背景，还是查到用box的方式结合<code>fancyhdr</code>宏包来处理（其实就是把图片放在了页眉或者页脚的方式）那个水平垂直距离都是一点点手动去调整尝试，现在想想都有点莫名的辛酸hhh。</p>\n<p>然后就因为平常没什么需求用到，就搁置了LaTeX很久都没动，一直到了大三的那个暑假夏令营要弄简历，我就想着要不用LaTeX弄一个简历出来，然后很自然地就去网上找模版（其实都不太满意，这也是为什么我现在都不太用别人的模版的原因之一），好不容易找到一个整体还算满意的，但是编译起来就是出bug（这是我不用别人模版的原因之二，别人的较为成熟的模版一般都有较强的一致性，比如一些自定义的命令之类的，自己如果功力不够在那瞎改那就很容易报错），时间又很紧，于是去网上找人代排，好像是花了50元改了一小个地方。</p>\n<p>正好那个时候我想到了我本科的毕业论文模版是CTEX套装写的（现在基本已经被淘汰了），就想着要不也让人重写一个，结果我一问价格，800起步，我直接一个震惊给到！</p>\n<p>莫名的我就很气，气我自己的LaTeX怎么这么菜，就是那一次我就下定决心一定要学好LaTeX。</p>\n<p>然后大四搞毕业论文，上课什么的也没搞，就想着毕业的暑假搞。在学校的时候机缘巧合下知道了万述波老师的书，然后买了一本发现还不错，然后在万老师的群里又看到陈晓老师也要出一本书，而且是更多应用之类的，我个人对LaTeX的应用和实现效果是很感兴趣的，所以也在刚发行的时候果断也买了一本。</p>\n<p>在暑假主要的时间就是在跟着陈晓老师的书一点点码，有的时候还出了很多的bug，书上也会有点小错误，就这里问，那里查，不过在群里我也认识了很多LaTeX水平很高的老师，比如耿楠教授、李泽平老师，乙醇哥等等，也有和我一样也是在学习LaTeX的同学，比如郭李军学弟（现在也变得水平很高了），他们在我的LaTeX学习过程中提供了莫大的帮助，在这里要表示衷心的感谢！</p>\n<p>我现在重新看自己的暑假的学习，我印象最深的应该就是三个：<code>tabularray</code>宏包、TikZ和LaTeX3：</p>\n<ul>\n<li><code>tabularray</code>宏包\n<ul>\n<li>其实我在码书上的表格部分的时候群里的老师就推荐我用这个宏包了，我当时的想法是基础的还是要掌握的，所以一直拖到一本书搞完才接触了这个宏包，然后...真香，这个宏包简直太厉害，对表格的处理非常的人性化，和原来的普通表格处理简直是天差地别</li>\n</ul></li>\n<li>TikZ\n<ul>\n<li>TikZ的<code>node</code>当时真是让我觉得很震惊，因为我发现我以前辛苦研究的那个水印的问题，用<code>node</code>可以轻松完成，而且相对距离这个是我非常喜欢的，因为在原来的某个参数变了之后，其它的可以“牵一发而动全身”，不需要自己再去手动调整，这才是符合我预期的计算机的功能，</li>\n<li>TikZ学完之后其实很少有绘图的需求，但是偶尔会用来画个小玩意，比如用<code>node</code>搞了个命令实现overlay的效果，主要在逻辑推导过程中，实现箭头（也可以变成其它的）上面可以有问号或是其它任何字符，灵活度更高</li>\n</ul></li>\n<li>LaTeX3\n<ul>\n<li>这应该是我现阶段用的最多的代码</li>\n<li>我本身是对TeX的底层实现挺感兴趣的，但是一些相关的书却有点让我不太容易读懂，因为我本身没有计算机的基础，读起来有些头疼（orz）。但是刚好那个时候LaTeX工作室发了项子越老师录制的LaTeX3讲解视频，然后一下子打开了新世界</li>\n<li>统一格式、优化宏展开等等有点让我入了LaTeX3的坑，而且用它也某种程度上弥补了我本来想学习TeX的想法（虽然LaTeX3的一些命令没有TeX的基础还是读不了，但是对于大部分的内容是可以且容易理解接受和应用的），因为我最根本还是想能够自己实现一些功能，设计一些小东西。</li>\n<li>但是目前（即使是现在）关于LaTeX3的<strong>教程</strong>其实还是没有很多。为什么我要强调“教程”呢？因为LaTeX3的官方文档<code>interface3.pdf</code>或<code>source3.pdf</code>是API性质的文档，个人理解是可以看作是一本字典，它会把变量函数的功能很客观地告诉你，虽然对于大部分来说，看了之后基本是知道怎么用的，但是也有相当一部分读完后还是一脸懵逼，如果类比一下高中学习的话，就会感觉例题太少了，如果学生的能力还不到位的话，只讲概念定理，学生对于其的把握还不到位，遇到问题也不知道如何去解决。而从我个人的LaTeX3学习经验来看，我觉得读别人写好的作品是一个很好的学习方式，其实这些就相当于是一个个例题，如果能够读懂，并明白其中的使用方式的话对于学好LaTeX3也是有非常大的帮助的。所以我的博客的有一个模块就是LaTeX3实例分析，只能以我浅薄的知识尝试去理解去读懂这些代码的逻辑等等，希望能够帮到有需要的人。</li>\n</ul></li>\n</ul>\n<p>目前基本是主要用LaTeX3写一些小玩意，LaTeX3甚至超过了TikZ对我的吸引力hhh，但是TikZ用好也很厉害，还是都要好好学一下。</p>\n","site":{"data":{}},"wordcount":2264,"more":"<h2 id=\"latex-todo\">LaTeX-TODO</h2>\n<p>用于记录我想编写解决的代码问题</p>\n<ul>\n<li>选择题或解答题和图在一起的时候的排版\n<ul>\n<li>coffin</li>\n</ul></li>\n<li>选择题的末行括号自动出现</li>\n<li>choices命令结合答案</li>\n</ul>\n<h2 id=\"自己的latex经历杂谈\">自己的LaTeX经历杂谈</h2>\n<p>最开始是大二第一次接触，具体怎么知道的LaTeX我已经忘记，但是当时主要是被LaTeX的数学公式排版所吸引，我还记得当时在图书馆看刘海洋的书，一边看一边在TeXShop里看例题的编译效果，这种反馈虽然比word的所见即所得要略慢一丢丢，但也没差到哪里，而且精致的数学排版让我一下就喜欢上了LaTeX。</p>\n<p>应该就是在大二大三那个时候，自己也偶尔瞎研究，当时什么LaTeX工作室，论坛，tex.se都不知道，自己搞beamer、笔记模版啥的，遇到问题直接百度，CSDN，东拼西凑，我还深刻记得当时去弄水印背景，还是查到用box的方式结合<code>fancyhdr</code>宏包来处理（其实就是把图片放在了页眉或者页脚的方式）那个水平垂直距离都是一点点手动去调整尝试，现在想想都有点莫名的辛酸hhh。</p>\n<p>然后就因为平常没什么需求用到，就搁置了LaTeX很久都没动，一直到了大三的那个暑假夏令营要弄简历，我就想着要不用LaTeX弄一个简历出来，然后很自然地就去网上找模版（其实都不太满意，这也是为什么我现在都不太用别人的模版的原因之一），好不容易找到一个整体还算满意的，但是编译起来就是出bug（这是我不用别人模版的原因之二，别人的较为成熟的模版一般都有较强的一致性，比如一些自定义的命令之类的，自己如果功力不够在那瞎改那就很容易报错），时间又很紧，于是去网上找人代排，好像是花了50元改了一小个地方。</p>\n<p>正好那个时候我想到了我本科的毕业论文模版是CTEX套装写的（现在基本已经被淘汰了），就想着要不也让人重写一个，结果我一问价格，800起步，我直接一个震惊给到！</p>\n<p>莫名的我就很气，气我自己的LaTeX怎么这么菜，就是那一次我就下定决心一定要学好LaTeX。</p>\n<p>然后大四搞毕业论文，上课什么的也没搞，就想着毕业的暑假搞。在学校的时候机缘巧合下知道了万述波老师的书，然后买了一本发现还不错，然后在万老师的群里又看到陈晓老师也要出一本书，而且是更多应用之类的，我个人对LaTeX的应用和实现效果是很感兴趣的，所以也在刚发行的时候果断也买了一本。</p>\n<p>在暑假主要的时间就是在跟着陈晓老师的书一点点码，有的时候还出了很多的bug，书上也会有点小错误，就这里问，那里查，不过在群里我也认识了很多LaTeX水平很高的老师，比如耿楠教授、李泽平老师，乙醇哥等等，也有和我一样也是在学习LaTeX的同学，比如郭李军学弟（现在也变得水平很高了），他们在我的LaTeX学习过程中提供了莫大的帮助，在这里要表示衷心的感谢！</p>\n<p>我现在重新看自己的暑假的学习，我印象最深的应该就是三个：<code>tabularray</code>宏包、TikZ和LaTeX3：</p>\n<ul>\n<li><code>tabularray</code>宏包\n<ul>\n<li>其实我在码书上的表格部分的时候群里的老师就推荐我用这个宏包了，我当时的想法是基础的还是要掌握的，所以一直拖到一本书搞完才接触了这个宏包，然后...真香，这个宏包简直太厉害，对表格的处理非常的人性化，和原来的普通表格处理简直是天差地别</li>\n</ul></li>\n<li>TikZ\n<ul>\n<li>TikZ的<code>node</code>当时真是让我觉得很震惊，因为我发现我以前辛苦研究的那个水印的问题，用<code>node</code>可以轻松完成，而且相对距离这个是我非常喜欢的，因为在原来的某个参数变了之后，其它的可以“牵一发而动全身”，不需要自己再去手动调整，这才是符合我预期的计算机的功能，</li>\n<li>TikZ学完之后其实很少有绘图的需求，但是偶尔会用来画个小玩意，比如用<code>node</code>搞了个命令实现overlay的效果，主要在逻辑推导过程中，实现箭头（也可以变成其它的）上面可以有问号或是其它任何字符，灵活度更高</li>\n</ul></li>\n<li>LaTeX3\n<ul>\n<li>这应该是我现阶段用的最多的代码</li>\n<li>我本身是对TeX的底层实现挺感兴趣的，但是一些相关的书却有点让我不太容易读懂，因为我本身没有计算机的基础，读起来有些头疼（orz）。但是刚好那个时候LaTeX工作室发了项子越老师录制的LaTeX3讲解视频，然后一下子打开了新世界</li>\n<li>统一格式、优化宏展开等等有点让我入了LaTeX3的坑，而且用它也某种程度上弥补了我本来想学习TeX的想法（虽然LaTeX3的一些命令没有TeX的基础还是读不了，但是对于大部分的内容是可以且容易理解接受和应用的），因为我最根本还是想能够自己实现一些功能，设计一些小东西。</li>\n<li>但是目前（即使是现在）关于LaTeX3的<strong>教程</strong>其实还是没有很多。为什么我要强调“教程”呢？因为LaTeX3的官方文档<code>interface3.pdf</code>或<code>source3.pdf</code>是API性质的文档，个人理解是可以看作是一本字典，它会把变量函数的功能很客观地告诉你，虽然对于大部分来说，看了之后基本是知道怎么用的，但是也有相当一部分读完后还是一脸懵逼，如果类比一下高中学习的话，就会感觉例题太少了，如果学生的能力还不到位的话，只讲概念定理，学生对于其的把握还不到位，遇到问题也不知道如何去解决。而从我个人的LaTeX3学习经验来看，我觉得读别人写好的作品是一个很好的学习方式，其实这些就相当于是一个个例题，如果能够读懂，并明白其中的使用方式的话对于学好LaTeX3也是有非常大的帮助的。所以我的博客的有一个模块就是LaTeX3实例分析，只能以我浅薄的知识尝试去理解去读懂这些代码的逻辑等等，希望能够帮到有需要的人。</li>\n</ul></li>\n</ul>\n<p>目前基本是主要用LaTeX3写一些小玩意，LaTeX3甚至超过了TikZ对我的吸引力hhh，但是TikZ用好也很厉害，还是都要好好学一下。</p>\n"},{"title":"LaTeX3个人学习经验","date":"2022-01-08T13:22:38.000Z","updated":"2022-01-20T05:40:00.000Z","excerpt":"本文主要介绍个人学习LaTeX3过程中的一些心得体会。","_content":"\n## 前言\n\n我在很久之前自己写过一个LaTeX3学习个人经验，整理了自己学习过程中的学习资料，并写了一些学习心得，只分享给了两位老师，一个原因是这两个老师当时就想学习LaTeX3，第二个原因是时间有点匆忙，我的文字叙述并不流畅和简洁（虽然口语化容易读懂，但是感觉写成书面文章还是需要适当的言简意赅）\n\n后来郭李军学弟在LaTeX工作室发了一个[LaTeX3学习资料](https://www.latexstudio.net/index/details/index/mid/2280) ，我发现整理的和我差不多，但是多了两三个（然后我马上就码住了hhh）。其实现在市面上能找到的LaTeX3资料其实还是有不少的，对于LaTeX3入门应该是足够的，但是如果想要LaTeX3能更深入地学习下去（比如学习`interface3.pdf`介绍的一些LaTeX2e中不常见（对于一般用户来说比较少用）的模块，如regex、prg、msg、file等等）现在已有的资料某种意义上是不够的。\n\n但是其实已经有很多优秀的宏包文类是用LaTeX3编写的，比如`ctex`宏集,`tabularray.sty`,`fduthesis.cls`等，但是这些都是一些大佬编写，本身并不是为了告诉你怎么使用LaTeX3而编写的，所以读起来会有一定难度，但是如果细品的话能够发现里面有很多细节和变量函数的使用是值得我们学习的，所以需要一个“引路人”能够带我们读懂这些代码，或是分析一些其中的细节。\n\n而我的博客想做的主要就是这个事，我的代码水平其实非常的一般，但是我想把我能读懂的，我的一些体会分享出来，大家一起讨论学习，这样对我来说也是有很大的提高。\n\n目前关于LaTeX3想做的主要但不限于下面几个：\n\n- 分析一些LaTeX3实例，LaTeX3应用的代码\n- 讲述、记录或分析我自己用LaTeX3写命令的想法和思路（也能够帮助我进一步优化）\n- 一些LaTeX3的常用方法和技巧\n\n\n\n## 个人推荐的LaTeX3学习顺序\n\n### 了解背景和LaTeX3基础\n\n#### 背景\n\n- 曾祥东老师的知乎文章：[LaTeX3 教程（一）——背景知识](https://zhuanlan.zhihu.com/p/92851140)\n- LaTeX工作室发布，项子越老师录制的b站视频：[LaTeX3 教程一：简介](https://www.bilibili.com/video/BV1L44y1676h?from=search&seid=14283996233698968390&spm_id_from=333.337.0.0)\n\n#### 基本语法和知识\n\n- 曾祥东老师的知乎文章：[LaTeX3 教程（二）——语法概要](https://zhuanlan.zhihu.com/p/92853481)\n- LaTeX工作室发布，项子越老师录制的b站视频：[LaTeX3 教程二：变量，函数及基本程序结构](https://www.bilibili.com/video/BV1g5411u7wg?spm_id_from=333.999.0.0)\n\n#### 宏展开\n\n- LaTeX工作室发布，项子越老师录制的b站视频：[LaTeX3 教程三：宏展开](https://www.bilibili.com/video/BV1HP4y1s7CR?spm_id_from=333.999.0.0)\n\n#### 一些示例的应用\n\n- 曾祥东老师的知乎文章：[LaTeX3 教程（三）——从一个例子说起](https://zhuanlan.zhihu.com/p/92854940)\n\n- LaTeX工作室发布，项子越老师录制的b站视频：[LaTeX3 编程 终章 - 教程四：常用库](https://www.bilibili.com/video/BV18Z4y1X7vK?spm_id_from=333.999.0.0)\n- 项子越老师的个人博客中有一个[`latex3-tutorial` ](https://www.alanshawn.com/latex3-tutorial/)中有视频中没提到的一些内容，绝大部分函数模块都给了个例子，大致告诉你LaTeX3能够实现一些什么样的效果\n\n#### 细节补充\n\n- 知乎一位大佬写了一篇文章：[一份勉强简短的LaTeX3编程介绍](https://zhuanlan.zhihu.com/p/408331900)，如果完成上面部分学习的读者阅读这篇文章，就会发现这篇文章是对上面内容的一个“总结体”，并且补充了一些小细节，即使学完了上面的内容也推荐学习一下\n- LaTeX3团队成员Joseph Wright写的[一些文章](https://www.texdev.net/tags/#programming-latex3)（不止LaTeX3），很多内容比如`xparse`宏包的声明命令和其它宏包的区别，[关于LaTeX3的宏展开的`f`,`o`,`x` 有什么区别](https://www.texdev.net/2012/04/29/programming-latex3-more-on-expansion/)等文章都非常值得一看\n\n### 自己动手写小玩意\n\n- 在学习了上面的内容后，读者已经完全能够自己动手写一点小玩意了\n\n### 分析他人的作品、应用\n\n- LaTeX工作室里也有一些用户上传的[作品](https://www.latexstudio.net/index/lists/barSearch/text/LaTeX3) ，可以自己尝试阅读一下代码看看\n- 慢慢地可以开始读一些LaTeX3编写的宏包或文类了，看看大佬们是怎么用这些变量函数的，比如用`clist` 模块的函数来批量处理（比如批量声明新变量）等等\n\n## 希望掌握的“技能”\n\n### 养成良好的代码规范\n\n- LaTeX3有自己的一套[代码规范](https://ctan.math.illinois.edu/macros/latex/contrib/l3kernel/l3styleguide.pdf) ，和[LaTeX2e的代码规范](https://gitee.com/zepinglee/latex2e-style-guide)有一定的区别，不管是为了自己写、修改方便还是为了代码分享的时候他人阅读方便，都希望读者养成良好的代码规范习惯\n\n### 学习`xparse`宏包\n\n- `xparse`宏包提供的命令不仅能够封装LaTeX3的代码，在LaTeX2e的使用过程中体验会更好\n- `lshort-zh-cn.pdf`中有部分介绍，但是还是希望直接读`xparse`的官方文档\n\n### 学会到论坛提问\n\n- [tex.se](https://tex.stackexchange.com/) 国外的网站，大佬很多，只要你的问题描述清楚，基本都会有大佬反馈\n- [LaTeX工作室提问](https://ask.latexstudio.net/) 国内的网站，也有很多大佬，听说雾月大佬回答非常详细，而且LaTeX3功力也极强\n\n","source":"_posts/LaTeX3-learning.md","raw":"---\ntitle: LaTeX3个人学习经验\ndate: 2022-01-08 21:22:38\nupdated: 2022-01-20 13:40\ntags: [LaTeX3杂谈]\ncategory: [LaTeX3杂谈]\nexcerpt: 本文主要介绍个人学习LaTeX3过程中的一些心得体会。\n---\n\n## 前言\n\n我在很久之前自己写过一个LaTeX3学习个人经验，整理了自己学习过程中的学习资料，并写了一些学习心得，只分享给了两位老师，一个原因是这两个老师当时就想学习LaTeX3，第二个原因是时间有点匆忙，我的文字叙述并不流畅和简洁（虽然口语化容易读懂，但是感觉写成书面文章还是需要适当的言简意赅）\n\n后来郭李军学弟在LaTeX工作室发了一个[LaTeX3学习资料](https://www.latexstudio.net/index/details/index/mid/2280) ，我发现整理的和我差不多，但是多了两三个（然后我马上就码住了hhh）。其实现在市面上能找到的LaTeX3资料其实还是有不少的，对于LaTeX3入门应该是足够的，但是如果想要LaTeX3能更深入地学习下去（比如学习`interface3.pdf`介绍的一些LaTeX2e中不常见（对于一般用户来说比较少用）的模块，如regex、prg、msg、file等等）现在已有的资料某种意义上是不够的。\n\n但是其实已经有很多优秀的宏包文类是用LaTeX3编写的，比如`ctex`宏集,`tabularray.sty`,`fduthesis.cls`等，但是这些都是一些大佬编写，本身并不是为了告诉你怎么使用LaTeX3而编写的，所以读起来会有一定难度，但是如果细品的话能够发现里面有很多细节和变量函数的使用是值得我们学习的，所以需要一个“引路人”能够带我们读懂这些代码，或是分析一些其中的细节。\n\n而我的博客想做的主要就是这个事，我的代码水平其实非常的一般，但是我想把我能读懂的，我的一些体会分享出来，大家一起讨论学习，这样对我来说也是有很大的提高。\n\n目前关于LaTeX3想做的主要但不限于下面几个：\n\n- 分析一些LaTeX3实例，LaTeX3应用的代码\n- 讲述、记录或分析我自己用LaTeX3写命令的想法和思路（也能够帮助我进一步优化）\n- 一些LaTeX3的常用方法和技巧\n\n\n\n## 个人推荐的LaTeX3学习顺序\n\n### 了解背景和LaTeX3基础\n\n#### 背景\n\n- 曾祥东老师的知乎文章：[LaTeX3 教程（一）——背景知识](https://zhuanlan.zhihu.com/p/92851140)\n- LaTeX工作室发布，项子越老师录制的b站视频：[LaTeX3 教程一：简介](https://www.bilibili.com/video/BV1L44y1676h?from=search&seid=14283996233698968390&spm_id_from=333.337.0.0)\n\n#### 基本语法和知识\n\n- 曾祥东老师的知乎文章：[LaTeX3 教程（二）——语法概要](https://zhuanlan.zhihu.com/p/92853481)\n- LaTeX工作室发布，项子越老师录制的b站视频：[LaTeX3 教程二：变量，函数及基本程序结构](https://www.bilibili.com/video/BV1g5411u7wg?spm_id_from=333.999.0.0)\n\n#### 宏展开\n\n- LaTeX工作室发布，项子越老师录制的b站视频：[LaTeX3 教程三：宏展开](https://www.bilibili.com/video/BV1HP4y1s7CR?spm_id_from=333.999.0.0)\n\n#### 一些示例的应用\n\n- 曾祥东老师的知乎文章：[LaTeX3 教程（三）——从一个例子说起](https://zhuanlan.zhihu.com/p/92854940)\n\n- LaTeX工作室发布，项子越老师录制的b站视频：[LaTeX3 编程 终章 - 教程四：常用库](https://www.bilibili.com/video/BV18Z4y1X7vK?spm_id_from=333.999.0.0)\n- 项子越老师的个人博客中有一个[`latex3-tutorial` ](https://www.alanshawn.com/latex3-tutorial/)中有视频中没提到的一些内容，绝大部分函数模块都给了个例子，大致告诉你LaTeX3能够实现一些什么样的效果\n\n#### 细节补充\n\n- 知乎一位大佬写了一篇文章：[一份勉强简短的LaTeX3编程介绍](https://zhuanlan.zhihu.com/p/408331900)，如果完成上面部分学习的读者阅读这篇文章，就会发现这篇文章是对上面内容的一个“总结体”，并且补充了一些小细节，即使学完了上面的内容也推荐学习一下\n- LaTeX3团队成员Joseph Wright写的[一些文章](https://www.texdev.net/tags/#programming-latex3)（不止LaTeX3），很多内容比如`xparse`宏包的声明命令和其它宏包的区别，[关于LaTeX3的宏展开的`f`,`o`,`x` 有什么区别](https://www.texdev.net/2012/04/29/programming-latex3-more-on-expansion/)等文章都非常值得一看\n\n### 自己动手写小玩意\n\n- 在学习了上面的内容后，读者已经完全能够自己动手写一点小玩意了\n\n### 分析他人的作品、应用\n\n- LaTeX工作室里也有一些用户上传的[作品](https://www.latexstudio.net/index/lists/barSearch/text/LaTeX3) ，可以自己尝试阅读一下代码看看\n- 慢慢地可以开始读一些LaTeX3编写的宏包或文类了，看看大佬们是怎么用这些变量函数的，比如用`clist` 模块的函数来批量处理（比如批量声明新变量）等等\n\n## 希望掌握的“技能”\n\n### 养成良好的代码规范\n\n- LaTeX3有自己的一套[代码规范](https://ctan.math.illinois.edu/macros/latex/contrib/l3kernel/l3styleguide.pdf) ，和[LaTeX2e的代码规范](https://gitee.com/zepinglee/latex2e-style-guide)有一定的区别，不管是为了自己写、修改方便还是为了代码分享的时候他人阅读方便，都希望读者养成良好的代码规范习惯\n\n### 学习`xparse`宏包\n\n- `xparse`宏包提供的命令不仅能够封装LaTeX3的代码，在LaTeX2e的使用过程中体验会更好\n- `lshort-zh-cn.pdf`中有部分介绍，但是还是希望直接读`xparse`的官方文档\n\n### 学会到论坛提问\n\n- [tex.se](https://tex.stackexchange.com/) 国外的网站，大佬很多，只要你的问题描述清楚，基本都会有大佬反馈\n- [LaTeX工作室提问](https://ask.latexstudio.net/) 国内的网站，也有很多大佬，听说雾月大佬回答非常详细，而且LaTeX3功力也极强\n\n","slug":"LaTeX3-learning","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cl0d4v0fs0002g4916vk01ieq","content":"<h2 id=\"前言\">前言</h2>\n<p>我在很久之前自己写过一个LaTeX3学习个人经验，整理了自己学习过程中的学习资料，并写了一些学习心得，只分享给了两位老师，一个原因是这两个老师当时就想学习LaTeX3，第二个原因是时间有点匆忙，我的文字叙述并不流畅和简洁（虽然口语化容易读懂，但是感觉写成书面文章还是需要适当的言简意赅）</p>\n<p>后来郭李军学弟在LaTeX工作室发了一个<a href=\"https://www.latexstudio.net/index/details/index/mid/2280\">LaTeX3学习资料</a> ，我发现整理的和我差不多，但是多了两三个（然后我马上就码住了hhh）。其实现在市面上能找到的LaTeX3资料其实还是有不少的，对于LaTeX3入门应该是足够的，但是如果想要LaTeX3能更深入地学习下去（比如学习<code>interface3.pdf</code>介绍的一些LaTeX2e中不常见（对于一般用户来说比较少用）的模块，如regex、prg、msg、file等等）现在已有的资料某种意义上是不够的。</p>\n<p>但是其实已经有很多优秀的宏包文类是用LaTeX3编写的，比如<code>ctex</code>宏集,<code>tabularray.sty</code>,<code>fduthesis.cls</code>等，但是这些都是一些大佬编写，本身并不是为了告诉你怎么使用LaTeX3而编写的，所以读起来会有一定难度，但是如果细品的话能够发现里面有很多细节和变量函数的使用是值得我们学习的，所以需要一个“引路人”能够带我们读懂这些代码，或是分析一些其中的细节。</p>\n<p>而我的博客想做的主要就是这个事，我的代码水平其实非常的一般，但是我想把我能读懂的，我的一些体会分享出来，大家一起讨论学习，这样对我来说也是有很大的提高。</p>\n<p>目前关于LaTeX3想做的主要但不限于下面几个：</p>\n<ul>\n<li>分析一些LaTeX3实例，LaTeX3应用的代码</li>\n<li>讲述、记录或分析我自己用LaTeX3写命令的想法和思路（也能够帮助我进一步优化）</li>\n<li>一些LaTeX3的常用方法和技巧</li>\n</ul>\n<h2 id=\"个人推荐的latex3学习顺序\">个人推荐的LaTeX3学习顺序</h2>\n<h3 id=\"了解背景和latex3基础\">了解背景和LaTeX3基础</h3>\n<h4 id=\"背景\">背景</h4>\n<ul>\n<li>曾祥东老师的知乎文章：<a href=\"https://zhuanlan.zhihu.com/p/92851140\">LaTeX3 教程（一）——背景知识</a></li>\n<li>LaTeX工作室发布，项子越老师录制的b站视频：<a href=\"https://www.bilibili.com/video/BV1L44y1676h?from=search&amp;seid=14283996233698968390&amp;spm_id_from=333.337.0.0\">LaTeX3 教程一：简介</a></li>\n</ul>\n<h4 id=\"基本语法和知识\">基本语法和知识</h4>\n<ul>\n<li>曾祥东老师的知乎文章：<a href=\"https://zhuanlan.zhihu.com/p/92853481\">LaTeX3 教程（二）——语法概要</a></li>\n<li>LaTeX工作室发布，项子越老师录制的b站视频：<a href=\"https://www.bilibili.com/video/BV1g5411u7wg?spm_id_from=333.999.0.0\">LaTeX3 教程二：变量，函数及基本程序结构</a></li>\n</ul>\n<h4 id=\"宏展开\">宏展开</h4>\n<ul>\n<li>LaTeX工作室发布，项子越老师录制的b站视频：<a href=\"https://www.bilibili.com/video/BV1HP4y1s7CR?spm_id_from=333.999.0.0\">LaTeX3 教程三：宏展开</a></li>\n</ul>\n<h4 id=\"一些示例的应用\">一些示例的应用</h4>\n<ul>\n<li><p>曾祥东老师的知乎文章：<a href=\"https://zhuanlan.zhihu.com/p/92854940\">LaTeX3 教程（三）——从一个例子说起</a></p></li>\n<li><p>LaTeX工作室发布，项子越老师录制的b站视频：<a href=\"https://www.bilibili.com/video/BV18Z4y1X7vK?spm_id_from=333.999.0.0\">LaTeX3 编程 终章 - 教程四：常用库</a></p></li>\n<li><p>项子越老师的个人博客中有一个<a href=\"https://www.alanshawn.com/latex3-tutorial/\"><code>latex3-tutorial</code></a>中有视频中没提到的一些内容，绝大部分函数模块都给了个例子，大致告诉你LaTeX3能够实现一些什么样的效果</p></li>\n</ul>\n<h4 id=\"细节补充\">细节补充</h4>\n<ul>\n<li>知乎一位大佬写了一篇文章：<a href=\"https://zhuanlan.zhihu.com/p/408331900\">一份勉强简短的LaTeX3编程介绍</a>，如果完成上面部分学习的读者阅读这篇文章，就会发现这篇文章是对上面内容的一个“总结体”，并且补充了一些小细节，即使学完了上面的内容也推荐学习一下</li>\n<li>LaTeX3团队成员Joseph Wright写的<a href=\"https://www.texdev.net/tags/#programming-latex3\">一些文章</a>（不止LaTeX3），很多内容比如<code>xparse</code>宏包的声明命令和其它宏包的区别，<a href=\"https://www.texdev.net/2012/04/29/programming-latex3-more-on-expansion/\">关于LaTeX3的宏展开的<code>f</code>,<code>o</code>,<code>x</code> 有什么区别</a>等文章都非常值得一看</li>\n</ul>\n<h3 id=\"自己动手写小玩意\">自己动手写小玩意</h3>\n<ul>\n<li>在学习了上面的内容后，读者已经完全能够自己动手写一点小玩意了</li>\n</ul>\n<h3 id=\"分析他人的作品应用\">分析他人的作品、应用</h3>\n<ul>\n<li>LaTeX工作室里也有一些用户上传的<a href=\"https://www.latexstudio.net/index/lists/barSearch/text/LaTeX3\">作品</a> ，可以自己尝试阅读一下代码看看</li>\n<li>慢慢地可以开始读一些LaTeX3编写的宏包或文类了，看看大佬们是怎么用这些变量函数的，比如用<code>clist</code> 模块的函数来批量处理（比如批量声明新变量）等等</li>\n</ul>\n<h2 id=\"希望掌握的技能\">希望掌握的“技能”</h2>\n<h3 id=\"养成良好的代码规范\">养成良好的代码规范</h3>\n<ul>\n<li>LaTeX3有自己的一套<a href=\"https://ctan.math.illinois.edu/macros/latex/contrib/l3kernel/l3styleguide.pdf\">代码规范</a> ，和<a href=\"https://gitee.com/zepinglee/latex2e-style-guide\">LaTeX2e的代码规范</a>有一定的区别，不管是为了自己写、修改方便还是为了代码分享的时候他人阅读方便，都希望读者养成良好的代码规范习惯</li>\n</ul>\n<h3 id=\"学习xparse宏包\">学习<code>xparse</code>宏包</h3>\n<ul>\n<li><code>xparse</code>宏包提供的命令不仅能够封装LaTeX3的代码，在LaTeX2e的使用过程中体验会更好</li>\n<li><code>lshort-zh-cn.pdf</code>中有部分介绍，但是还是希望直接读<code>xparse</code>的官方文档</li>\n</ul>\n<h3 id=\"学会到论坛提问\">学会到论坛提问</h3>\n<ul>\n<li><a href=\"https://tex.stackexchange.com/\">tex.se</a> 国外的网站，大佬很多，只要你的问题描述清楚，基本都会有大佬反馈</li>\n<li><a href=\"https://ask.latexstudio.net/\">LaTeX工作室提问</a> 国内的网站，也有很多大佬，听说雾月大佬回答非常详细，而且LaTeX3功力也极强</li>\n</ul>\n","site":{"data":{}},"wordcount":1771,"more":"<h2 id=\"前言\">前言</h2>\n<p>我在很久之前自己写过一个LaTeX3学习个人经验，整理了自己学习过程中的学习资料，并写了一些学习心得，只分享给了两位老师，一个原因是这两个老师当时就想学习LaTeX3，第二个原因是时间有点匆忙，我的文字叙述并不流畅和简洁（虽然口语化容易读懂，但是感觉写成书面文章还是需要适当的言简意赅）</p>\n<p>后来郭李军学弟在LaTeX工作室发了一个<a href=\"https://www.latexstudio.net/index/details/index/mid/2280\">LaTeX3学习资料</a> ，我发现整理的和我差不多，但是多了两三个（然后我马上就码住了hhh）。其实现在市面上能找到的LaTeX3资料其实还是有不少的，对于LaTeX3入门应该是足够的，但是如果想要LaTeX3能更深入地学习下去（比如学习<code>interface3.pdf</code>介绍的一些LaTeX2e中不常见（对于一般用户来说比较少用）的模块，如regex、prg、msg、file等等）现在已有的资料某种意义上是不够的。</p>\n<p>但是其实已经有很多优秀的宏包文类是用LaTeX3编写的，比如<code>ctex</code>宏集,<code>tabularray.sty</code>,<code>fduthesis.cls</code>等，但是这些都是一些大佬编写，本身并不是为了告诉你怎么使用LaTeX3而编写的，所以读起来会有一定难度，但是如果细品的话能够发现里面有很多细节和变量函数的使用是值得我们学习的，所以需要一个“引路人”能够带我们读懂这些代码，或是分析一些其中的细节。</p>\n<p>而我的博客想做的主要就是这个事，我的代码水平其实非常的一般，但是我想把我能读懂的，我的一些体会分享出来，大家一起讨论学习，这样对我来说也是有很大的提高。</p>\n<p>目前关于LaTeX3想做的主要但不限于下面几个：</p>\n<ul>\n<li>分析一些LaTeX3实例，LaTeX3应用的代码</li>\n<li>讲述、记录或分析我自己用LaTeX3写命令的想法和思路（也能够帮助我进一步优化）</li>\n<li>一些LaTeX3的常用方法和技巧</li>\n</ul>\n<h2 id=\"个人推荐的latex3学习顺序\">个人推荐的LaTeX3学习顺序</h2>\n<h3 id=\"了解背景和latex3基础\">了解背景和LaTeX3基础</h3>\n<h4 id=\"背景\">背景</h4>\n<ul>\n<li>曾祥东老师的知乎文章：<a href=\"https://zhuanlan.zhihu.com/p/92851140\">LaTeX3 教程（一）——背景知识</a></li>\n<li>LaTeX工作室发布，项子越老师录制的b站视频：<a href=\"https://www.bilibili.com/video/BV1L44y1676h?from=search&amp;seid=14283996233698968390&amp;spm_id_from=333.337.0.0\">LaTeX3 教程一：简介</a></li>\n</ul>\n<h4 id=\"基本语法和知识\">基本语法和知识</h4>\n<ul>\n<li>曾祥东老师的知乎文章：<a href=\"https://zhuanlan.zhihu.com/p/92853481\">LaTeX3 教程（二）——语法概要</a></li>\n<li>LaTeX工作室发布，项子越老师录制的b站视频：<a href=\"https://www.bilibili.com/video/BV1g5411u7wg?spm_id_from=333.999.0.0\">LaTeX3 教程二：变量，函数及基本程序结构</a></li>\n</ul>\n<h4 id=\"宏展开\">宏展开</h4>\n<ul>\n<li>LaTeX工作室发布，项子越老师录制的b站视频：<a href=\"https://www.bilibili.com/video/BV1HP4y1s7CR?spm_id_from=333.999.0.0\">LaTeX3 教程三：宏展开</a></li>\n</ul>\n<h4 id=\"一些示例的应用\">一些示例的应用</h4>\n<ul>\n<li><p>曾祥东老师的知乎文章：<a href=\"https://zhuanlan.zhihu.com/p/92854940\">LaTeX3 教程（三）——从一个例子说起</a></p></li>\n<li><p>LaTeX工作室发布，项子越老师录制的b站视频：<a href=\"https://www.bilibili.com/video/BV18Z4y1X7vK?spm_id_from=333.999.0.0\">LaTeX3 编程 终章 - 教程四：常用库</a></p></li>\n<li><p>项子越老师的个人博客中有一个<a href=\"https://www.alanshawn.com/latex3-tutorial/\"><code>latex3-tutorial</code></a>中有视频中没提到的一些内容，绝大部分函数模块都给了个例子，大致告诉你LaTeX3能够实现一些什么样的效果</p></li>\n</ul>\n<h4 id=\"细节补充\">细节补充</h4>\n<ul>\n<li>知乎一位大佬写了一篇文章：<a href=\"https://zhuanlan.zhihu.com/p/408331900\">一份勉强简短的LaTeX3编程介绍</a>，如果完成上面部分学习的读者阅读这篇文章，就会发现这篇文章是对上面内容的一个“总结体”，并且补充了一些小细节，即使学完了上面的内容也推荐学习一下</li>\n<li>LaTeX3团队成员Joseph Wright写的<a href=\"https://www.texdev.net/tags/#programming-latex3\">一些文章</a>（不止LaTeX3），很多内容比如<code>xparse</code>宏包的声明命令和其它宏包的区别，<a href=\"https://www.texdev.net/2012/04/29/programming-latex3-more-on-expansion/\">关于LaTeX3的宏展开的<code>f</code>,<code>o</code>,<code>x</code> 有什么区别</a>等文章都非常值得一看</li>\n</ul>\n<h3 id=\"自己动手写小玩意\">自己动手写小玩意</h3>\n<ul>\n<li>在学习了上面的内容后，读者已经完全能够自己动手写一点小玩意了</li>\n</ul>\n<h3 id=\"分析他人的作品应用\">分析他人的作品、应用</h3>\n<ul>\n<li>LaTeX工作室里也有一些用户上传的<a href=\"https://www.latexstudio.net/index/lists/barSearch/text/LaTeX3\">作品</a> ，可以自己尝试阅读一下代码看看</li>\n<li>慢慢地可以开始读一些LaTeX3编写的宏包或文类了，看看大佬们是怎么用这些变量函数的，比如用<code>clist</code> 模块的函数来批量处理（比如批量声明新变量）等等</li>\n</ul>\n<h2 id=\"希望掌握的技能\">希望掌握的“技能”</h2>\n<h3 id=\"养成良好的代码规范\">养成良好的代码规范</h3>\n<ul>\n<li>LaTeX3有自己的一套<a href=\"https://ctan.math.illinois.edu/macros/latex/contrib/l3kernel/l3styleguide.pdf\">代码规范</a> ，和<a href=\"https://gitee.com/zepinglee/latex2e-style-guide\">LaTeX2e的代码规范</a>有一定的区别，不管是为了自己写、修改方便还是为了代码分享的时候他人阅读方便，都希望读者养成良好的代码规范习惯</li>\n</ul>\n<h3 id=\"学习xparse宏包\">学习<code>xparse</code>宏包</h3>\n<ul>\n<li><code>xparse</code>宏包提供的命令不仅能够封装LaTeX3的代码，在LaTeX2e的使用过程中体验会更好</li>\n<li><code>lshort-zh-cn.pdf</code>中有部分介绍，但是还是希望直接读<code>xparse</code>的官方文档</li>\n</ul>\n<h3 id=\"学会到论坛提问\">学会到论坛提问</h3>\n<ul>\n<li><a href=\"https://tex.stackexchange.com/\">tex.se</a> 国外的网站，大佬很多，只要你的问题描述清楚，基本都会有大佬反馈</li>\n<li><a href=\"https://ask.latexstudio.net/\">LaTeX工作室提问</a> 国内的网站，也有很多大佬，听说雾月大佬回答非常详细，而且LaTeX3功力也极强</li>\n</ul>\n"},{"title":"个人博客搭建规划","date":"2022-01-08T10:40:17.000Z","excerpt":"主要介绍一下这个博客的整体方向以及分类和标签的大概内容","_content":"\n这个博客主要用于输出与记录，特别是关于LaTeX的部分希望可以对于其他学习者有所帮助与启发。\n\n目前想到的分类和标签有以下这几个，会不断补充与完善：\n\n## 分类\n\n- 杂谈\n- LaTeX杂谈\n- 数学杂谈\n- LaTeX3实例分析\n- LaTeX问题解决\n- LaTeX3应用\n- 个人作品\n\n## 标签\n\n- LaTeX\n- LaTeX3\n- 问题解决\n- 实例分析\n- 杂谈\n- 应用\n- 宏包\n","source":"_posts/blog-outline.md","raw":"---\ntitle: 个人博客搭建规划\ndate: 2022-01-08 18:40:17\ntags: [杂谈]\ncategory: [杂谈]\nexcerpt: 主要介绍一下这个博客的整体方向以及分类和标签的大概内容\n---\n\n这个博客主要用于输出与记录，特别是关于LaTeX的部分希望可以对于其他学习者有所帮助与启发。\n\n目前想到的分类和标签有以下这几个，会不断补充与完善：\n\n## 分类\n\n- 杂谈\n- LaTeX杂谈\n- 数学杂谈\n- LaTeX3实例分析\n- LaTeX问题解决\n- LaTeX3应用\n- 个人作品\n\n## 标签\n\n- LaTeX\n- LaTeX3\n- 问题解决\n- 实例分析\n- 杂谈\n- 应用\n- 宏包\n","slug":"blog-outline","published":1,"updated":"2022-01-08T10:40:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0d4v0fu0005g491a0mi19oi","content":"<p>这个博客主要用于输出与记录，特别是关于LaTeX的部分希望可以对于其他学习者有所帮助与启发。</p>\n<p>目前想到的分类和标签有以下这几个，会不断补充与完善：</p>\n<h2 id=\"分类\">分类</h2>\n<ul>\n<li>杂谈</li>\n<li>LaTeX杂谈</li>\n<li>数学杂谈</li>\n<li>LaTeX3实例分析</li>\n<li>LaTeX问题解决</li>\n<li>LaTeX3应用</li>\n<li>个人作品</li>\n</ul>\n<h2 id=\"标签\">标签</h2>\n<ul>\n<li>LaTeX</li>\n<li>LaTeX3</li>\n<li>问题解决</li>\n<li>实例分析</li>\n<li>杂谈</li>\n<li>应用</li>\n<li>宏包</li>\n</ul>\n","site":{"data":{}},"wordcount":145,"more":"<p>这个博客主要用于输出与记录，特别是关于LaTeX的部分希望可以对于其他学习者有所帮助与启发。</p>\n<p>目前想到的分类和标签有以下这几个，会不断补充与完善：</p>\n<h2 id=\"分类\">分类</h2>\n<ul>\n<li>杂谈</li>\n<li>LaTeX杂谈</li>\n<li>数学杂谈</li>\n<li>LaTeX3实例分析</li>\n<li>LaTeX问题解决</li>\n<li>LaTeX3应用</li>\n<li>个人作品</li>\n</ul>\n<h2 id=\"标签\">标签</h2>\n<ul>\n<li>LaTeX</li>\n<li>LaTeX3</li>\n<li>问题解决</li>\n<li>实例分析</li>\n<li>杂谈</li>\n<li>应用</li>\n<li>宏包</li>\n</ul>\n"},{"title":"个人作品分析：choices宏包","date":"2022-01-09T02:10:03.000Z","updated":"2022-01-09T05:55:00.000Z","excerpt":"主要分析一下编写思路以及思考如何进一步优化","_content":"\n## 宏包介绍\n\n### 宏包基本情况\n\nPackage: LaTeX package for flexibly LaTeXing choice items based on hlist and LaTeX3.\n\nRepository: [Github仓库](https://github.com/xkwxdyy/choices-l3)\n\nRepository: [Gitee仓库](https://gitee.com/xkwxdyy/choices-l3)\n\nAuthor: Kangwei Xia [E-mail](mailto:kangweixia_xdyy@163.com)\n\n### 宏包说明\n\n`choices`宏包是一个用于排版选项的宏包, 包含但不限于以下特点：\n- 可以排版任意数量的选项\n- 可以方便切换标签风格`label-style`\n- 可以更改标签`label`与内容的相对位置\n- 可以调整标签`label`的偏移\n- 自动识别是否使用 `includegraphics` 命令并自行调整 `anchor` 的位置（仅 `choices*` 有此功能,  之所以会有 `choices*` 命令, 就是因为基于 `hlist` 环境的 `choices` 只有一个方位, 无法更改, 所以需要用另外的方法处理（ `choices*` 是用 `coffin` 进行处理））.\n**此功能的实现需要将 `expl3` 宏包更新至最新（至少是2021-11-12后）, 否则可能无法使用且会报错.**\n\n在需要排版选项的情况中（比如试卷、问卷排版等）`choices`宏包可以发挥重要作用, 旨在让用户更多关注在内容本身, 契合LaTeX的内容与样式分离的思想. \n\n`choices`宏包是基于`hlist`环境与LaTeX3开发的LaTeX宏包, 它提供了`choices(*)` 两个主命令与`coffinchoice`、`hlistchoice`和`quan`三个副命令. `choices`和`choices*`是利用了`xparse`宏包对`hlistchoice`与`coffinchoice`命令进行封装. 其中`choices`等效于`hlistchoice`, `choices*`等效于`coffinchoice`. \n\n  通常情况下使用 `choices` 命令就够了, 但是用户如果有排版图片的需求, 可能需要将 `label` 置于内容的上方或下方, 而 `choices` 命令基于 `hlist` 环境编写, 所以`label` 只能置于内容的左侧, 这个时候只需要使用`choices*`, 会自动更改`anchor`为`south`, 如果需要修改自动的`anchor`为其它的方位可以使用`\\choicesetup{autopic = north}` .\n\n更多宏包细节与命令欢迎阅读宏包手册`choices_usrmanual.pdf`（用xelatex编译`choices_usrmanual.tex`即可）\n\n### 如果使用过程中发现了issue或者有什么建议, 欢迎提出\n\n- [Github issues](https://github.com/xkwxdyy/choices-l3/issues)\n- [Gitee issues](https://gitee.com/xkwxdyy/choices-l3/issues)\n\n---\n\n## 宏包设计和构想思路\n\n宏包的产生背景我其实在`choices_usrmanual.pdf`中解释过，在这里简要地再提一下：\n\n- 对于选择题的选项排版\n  - 已有的选项排版命令受限于参数的个数，比如四个参数的命令必须要有四个选项\n  - 对于多选题，问卷的选项排版，选项个数不确定，如果要从1-9个参数都自定义命令那非常麻烦，而且如果按照传统的自定义命令方式最多有9个必选参数，如果有更多的排版需求，那么这些方法已经失效\n  - 已有的命令无法切换label的样式\n\n基于上述的背景，我一开始基于`hlist`环境整合了一些功能，用LaTeX3的`seq`模块来切割选项，解决了参数个数问题，产生了`\\choices`命令（本质是`\\hlistchoice`命令）。\n\n但是`\\choices`命令有一个小问题：label的位置非常局限，即使是上下偏移都无法通过`hlist`宏包本身来实现，而且还遇到一个问题：图片类型的选项排版。\n\n图片排版也是中学老师经常碰到的一种问题，我目前了解的情况来看，大部分都是通过表格来完成的，但是“使用表格”本身有一丢丢违背LaTeX的“内容与样式分离”的想法，因为我的目的还是为了排版选项，而不是表格。\n\n对于图片的排版，label通常情况下更多放置在图片的正上方或正下方。基于上述原因，我就需要开发另一种选项排版的命令`\\choices*`（本质是`\\coffinchoice`）可以方便地切换不同的anchor（借用了TikZ中的术语），满足不同需求。受耿楠教授的[`hanzibox`宏包](https://gitee.com/nwafu_nan/hanzibox-l3)启发，我决定使用LaTeX3的coffin来完成此命令的研发，最后在几天的调试下基本实现了想要的功能。\n\n## 宏包代码优化\n\n李泽平老师当时看了我的代码和我说，一个命令的代码不应该超过一个屏幕，所以我需要对代码进行优化。\n\n其实我最开始设计的时候就是想有优化的：也就是一些算法可以单独抽离出来成为单独的函数，其实很多成熟的宏包都是这么做的，但是我没这么弄过，没有任何经验，最开始弄的时候直接出bug，然后想着“先实现再完美”（因为我一直以来都有点完美主义，导致了不少的拖延hhh），现在功能基本实现，就尝试优化一下代码。\n\n### 键值优化\n\n键值的有一定规范，比如使用`-`来分隔使得更容易阅读，比如`random-items`就是控制`items`的乱序。\n\n","source":"_posts/choices-sty.md","raw":"---\ntitle: 个人作品分析：choices宏包\ndate: 2022-01-09 10:10:03\nupdated: 2022-01-09 13:55\ntags: [LaTeX3, 实例分析, 宏包]\ncategory: \n  - [个人作品]\n  - [LaTeX3实例分析]\nexcerpt: 主要分析一下编写思路以及思考如何进一步优化\n---\n\n## 宏包介绍\n\n### 宏包基本情况\n\nPackage: LaTeX package for flexibly LaTeXing choice items based on hlist and LaTeX3.\n\nRepository: [Github仓库](https://github.com/xkwxdyy/choices-l3)\n\nRepository: [Gitee仓库](https://gitee.com/xkwxdyy/choices-l3)\n\nAuthor: Kangwei Xia [E-mail](mailto:kangweixia_xdyy@163.com)\n\n### 宏包说明\n\n`choices`宏包是一个用于排版选项的宏包, 包含但不限于以下特点：\n- 可以排版任意数量的选项\n- 可以方便切换标签风格`label-style`\n- 可以更改标签`label`与内容的相对位置\n- 可以调整标签`label`的偏移\n- 自动识别是否使用 `includegraphics` 命令并自行调整 `anchor` 的位置（仅 `choices*` 有此功能,  之所以会有 `choices*` 命令, 就是因为基于 `hlist` 环境的 `choices` 只有一个方位, 无法更改, 所以需要用另外的方法处理（ `choices*` 是用 `coffin` 进行处理））.\n**此功能的实现需要将 `expl3` 宏包更新至最新（至少是2021-11-12后）, 否则可能无法使用且会报错.**\n\n在需要排版选项的情况中（比如试卷、问卷排版等）`choices`宏包可以发挥重要作用, 旨在让用户更多关注在内容本身, 契合LaTeX的内容与样式分离的思想. \n\n`choices`宏包是基于`hlist`环境与LaTeX3开发的LaTeX宏包, 它提供了`choices(*)` 两个主命令与`coffinchoice`、`hlistchoice`和`quan`三个副命令. `choices`和`choices*`是利用了`xparse`宏包对`hlistchoice`与`coffinchoice`命令进行封装. 其中`choices`等效于`hlistchoice`, `choices*`等效于`coffinchoice`. \n\n  通常情况下使用 `choices` 命令就够了, 但是用户如果有排版图片的需求, 可能需要将 `label` 置于内容的上方或下方, 而 `choices` 命令基于 `hlist` 环境编写, 所以`label` 只能置于内容的左侧, 这个时候只需要使用`choices*`, 会自动更改`anchor`为`south`, 如果需要修改自动的`anchor`为其它的方位可以使用`\\choicesetup{autopic = north}` .\n\n更多宏包细节与命令欢迎阅读宏包手册`choices_usrmanual.pdf`（用xelatex编译`choices_usrmanual.tex`即可）\n\n### 如果使用过程中发现了issue或者有什么建议, 欢迎提出\n\n- [Github issues](https://github.com/xkwxdyy/choices-l3/issues)\n- [Gitee issues](https://gitee.com/xkwxdyy/choices-l3/issues)\n\n---\n\n## 宏包设计和构想思路\n\n宏包的产生背景我其实在`choices_usrmanual.pdf`中解释过，在这里简要地再提一下：\n\n- 对于选择题的选项排版\n  - 已有的选项排版命令受限于参数的个数，比如四个参数的命令必须要有四个选项\n  - 对于多选题，问卷的选项排版，选项个数不确定，如果要从1-9个参数都自定义命令那非常麻烦，而且如果按照传统的自定义命令方式最多有9个必选参数，如果有更多的排版需求，那么这些方法已经失效\n  - 已有的命令无法切换label的样式\n\n基于上述的背景，我一开始基于`hlist`环境整合了一些功能，用LaTeX3的`seq`模块来切割选项，解决了参数个数问题，产生了`\\choices`命令（本质是`\\hlistchoice`命令）。\n\n但是`\\choices`命令有一个小问题：label的位置非常局限，即使是上下偏移都无法通过`hlist`宏包本身来实现，而且还遇到一个问题：图片类型的选项排版。\n\n图片排版也是中学老师经常碰到的一种问题，我目前了解的情况来看，大部分都是通过表格来完成的，但是“使用表格”本身有一丢丢违背LaTeX的“内容与样式分离”的想法，因为我的目的还是为了排版选项，而不是表格。\n\n对于图片的排版，label通常情况下更多放置在图片的正上方或正下方。基于上述原因，我就需要开发另一种选项排版的命令`\\choices*`（本质是`\\coffinchoice`）可以方便地切换不同的anchor（借用了TikZ中的术语），满足不同需求。受耿楠教授的[`hanzibox`宏包](https://gitee.com/nwafu_nan/hanzibox-l3)启发，我决定使用LaTeX3的coffin来完成此命令的研发，最后在几天的调试下基本实现了想要的功能。\n\n## 宏包代码优化\n\n李泽平老师当时看了我的代码和我说，一个命令的代码不应该超过一个屏幕，所以我需要对代码进行优化。\n\n其实我最开始设计的时候就是想有优化的：也就是一些算法可以单独抽离出来成为单独的函数，其实很多成熟的宏包都是这么做的，但是我没这么弄过，没有任何经验，最开始弄的时候直接出bug，然后想着“先实现再完美”（因为我一直以来都有点完美主义，导致了不少的拖延hhh），现在功能基本实现，就尝试优化一下代码。\n\n### 键值优化\n\n键值的有一定规范，比如使用`-`来分隔使得更容易阅读，比如`random-items`就是控制`items`的乱序。\n\n","slug":"choices-sty","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cl0d4v0fu0006g491fbu8164s","content":"<h2 id=\"宏包介绍\">宏包介绍</h2>\n<h3 id=\"宏包基本情况\">宏包基本情况</h3>\n<p>Package: LaTeX package for flexibly LaTeXing choice items based on hlist and LaTeX3.</p>\n<p>Repository: <a href=\"https://github.com/xkwxdyy/choices-l3\">Github仓库</a></p>\n<p>Repository: <a href=\"https://gitee.com/xkwxdyy/choices-l3\">Gitee仓库</a></p>\n<p>Author: Kangwei Xia <a href=\"mailto:kangweixia_xdyy@163.com\">E-mail</a></p>\n<h3 id=\"宏包说明\">宏包说明</h3>\n<p><code>choices</code>宏包是一个用于排版选项的宏包, 包含但不限于以下特点： - 可以排版任意数量的选项 - 可以方便切换标签风格<code>label-style</code> - 可以更改标签<code>label</code>与内容的相对位置 - 可以调整标签<code>label</code>的偏移 - 自动识别是否使用 <code>includegraphics</code> 命令并自行调整 <code>anchor</code> 的位置（仅 <code>choices*</code> 有此功能, 之所以会有 <code>choices*</code> 命令, 就是因为基于 <code>hlist</code> 环境的 <code>choices</code> 只有一个方位, 无法更改, 所以需要用另外的方法处理（ <code>choices*</code> 是用 <code>coffin</code> 进行处理））. <strong>此功能的实现需要将 <code>expl3</code> 宏包更新至最新（至少是2021-11-12后）, 否则可能无法使用且会报错.</strong></p>\n<p>在需要排版选项的情况中（比如试卷、问卷排版等）<code>choices</code>宏包可以发挥重要作用, 旨在让用户更多关注在内容本身, 契合LaTeX的内容与样式分离的思想.</p>\n<p><code>choices</code>宏包是基于<code>hlist</code>环境与LaTeX3开发的LaTeX宏包, 它提供了<code>choices(*)</code> 两个主命令与<code>coffinchoice</code>、<code>hlistchoice</code>和<code>quan</code>三个副命令. <code>choices</code>和<code>choices*</code>是利用了<code>xparse</code>宏包对<code>hlistchoice</code>与<code>coffinchoice</code>命令进行封装. 其中<code>choices</code>等效于<code>hlistchoice</code>, <code>choices*</code>等效于<code>coffinchoice</code>.</p>\n<p>通常情况下使用 <code>choices</code> 命令就够了, 但是用户如果有排版图片的需求, 可能需要将 <code>label</code> 置于内容的上方或下方, 而 <code>choices</code> 命令基于 <code>hlist</code> 环境编写, 所以<code>label</code> 只能置于内容的左侧, 这个时候只需要使用<code>choices*</code>, 会自动更改<code>anchor</code>为<code>south</code>, 如果需要修改自动的<code>anchor</code>为其它的方位可以使用<code>\\choicesetup&#123;autopic = north&#125;</code> .</p>\n<p>更多宏包细节与命令欢迎阅读宏包手册<code>choices_usrmanual.pdf</code>（用xelatex编译<code>choices_usrmanual.tex</code>即可）</p>\n<h3 id=\"如果使用过程中发现了issue或者有什么建议-欢迎提出\">如果使用过程中发现了issue或者有什么建议, 欢迎提出</h3>\n<ul>\n<li><a href=\"https://github.com/xkwxdyy/choices-l3/issues\">Github issues</a></li>\n<li><a href=\"https://gitee.com/xkwxdyy/choices-l3/issues\">Gitee issues</a></li>\n</ul>\n<hr />\n<h2 id=\"宏包设计和构想思路\">宏包设计和构想思路</h2>\n<p>宏包的产生背景我其实在<code>choices_usrmanual.pdf</code>中解释过，在这里简要地再提一下：</p>\n<ul>\n<li>对于选择题的选项排版\n<ul>\n<li>已有的选项排版命令受限于参数的个数，比如四个参数的命令必须要有四个选项</li>\n<li>对于多选题，问卷的选项排版，选项个数不确定，如果要从1-9个参数都自定义命令那非常麻烦，而且如果按照传统的自定义命令方式最多有9个必选参数，如果有更多的排版需求，那么这些方法已经失效</li>\n<li>已有的命令无法切换label的样式</li>\n</ul></li>\n</ul>\n<p>基于上述的背景，我一开始基于<code>hlist</code>环境整合了一些功能，用LaTeX3的<code>seq</code>模块来切割选项，解决了参数个数问题，产生了<code>\\choices</code>命令（本质是<code>\\hlistchoice</code>命令）。</p>\n<p>但是<code>\\choices</code>命令有一个小问题：label的位置非常局限，即使是上下偏移都无法通过<code>hlist</code>宏包本身来实现，而且还遇到一个问题：图片类型的选项排版。</p>\n<p>图片排版也是中学老师经常碰到的一种问题，我目前了解的情况来看，大部分都是通过表格来完成的，但是“使用表格”本身有一丢丢违背LaTeX的“内容与样式分离”的想法，因为我的目的还是为了排版选项，而不是表格。</p>\n<p>对于图片的排版，label通常情况下更多放置在图片的正上方或正下方。基于上述原因，我就需要开发另一种选项排版的命令<code>\\choices*</code>（本质是<code>\\coffinchoice</code>）可以方便地切换不同的anchor（借用了TikZ中的术语），满足不同需求。受耿楠教授的<a href=\"https://gitee.com/nwafu_nan/hanzibox-l3\"><code>hanzibox</code>宏包</a>启发，我决定使用LaTeX3的coffin来完成此命令的研发，最后在几天的调试下基本实现了想要的功能。</p>\n<h2 id=\"宏包代码优化\">宏包代码优化</h2>\n<p>李泽平老师当时看了我的代码和我说，一个命令的代码不应该超过一个屏幕，所以我需要对代码进行优化。</p>\n<p>其实我最开始设计的时候就是想有优化的：也就是一些算法可以单独抽离出来成为单独的函数，其实很多成熟的宏包都是这么做的，但是我没这么弄过，没有任何经验，最开始弄的时候直接出bug，然后想着“先实现再完美”（因为我一直以来都有点完美主义，导致了不少的拖延hhh），现在功能基本实现，就尝试优化一下代码。</p>\n<h3 id=\"键值优化\">键值优化</h3>\n<p>键值的有一定规范，比如使用<code>-</code>来分隔使得更容易阅读，比如<code>random-items</code>就是控制<code>items</code>的乱序。</p>\n","site":{"data":{}},"wordcount":1955,"more":"<h2 id=\"宏包介绍\">宏包介绍</h2>\n<h3 id=\"宏包基本情况\">宏包基本情况</h3>\n<p>Package: LaTeX package for flexibly LaTeXing choice items based on hlist and LaTeX3.</p>\n<p>Repository: <a href=\"https://github.com/xkwxdyy/choices-l3\">Github仓库</a></p>\n<p>Repository: <a href=\"https://gitee.com/xkwxdyy/choices-l3\">Gitee仓库</a></p>\n<p>Author: Kangwei Xia <a href=\"mailto:kangweixia_xdyy@163.com\">E-mail</a></p>\n<h3 id=\"宏包说明\">宏包说明</h3>\n<p><code>choices</code>宏包是一个用于排版选项的宏包, 包含但不限于以下特点： - 可以排版任意数量的选项 - 可以方便切换标签风格<code>label-style</code> - 可以更改标签<code>label</code>与内容的相对位置 - 可以调整标签<code>label</code>的偏移 - 自动识别是否使用 <code>includegraphics</code> 命令并自行调整 <code>anchor</code> 的位置（仅 <code>choices*</code> 有此功能, 之所以会有 <code>choices*</code> 命令, 就是因为基于 <code>hlist</code> 环境的 <code>choices</code> 只有一个方位, 无法更改, 所以需要用另外的方法处理（ <code>choices*</code> 是用 <code>coffin</code> 进行处理））. <strong>此功能的实现需要将 <code>expl3</code> 宏包更新至最新（至少是2021-11-12后）, 否则可能无法使用且会报错.</strong></p>\n<p>在需要排版选项的情况中（比如试卷、问卷排版等）<code>choices</code>宏包可以发挥重要作用, 旨在让用户更多关注在内容本身, 契合LaTeX的内容与样式分离的思想.</p>\n<p><code>choices</code>宏包是基于<code>hlist</code>环境与LaTeX3开发的LaTeX宏包, 它提供了<code>choices(*)</code> 两个主命令与<code>coffinchoice</code>、<code>hlistchoice</code>和<code>quan</code>三个副命令. <code>choices</code>和<code>choices*</code>是利用了<code>xparse</code>宏包对<code>hlistchoice</code>与<code>coffinchoice</code>命令进行封装. 其中<code>choices</code>等效于<code>hlistchoice</code>, <code>choices*</code>等效于<code>coffinchoice</code>.</p>\n<p>通常情况下使用 <code>choices</code> 命令就够了, 但是用户如果有排版图片的需求, 可能需要将 <code>label</code> 置于内容的上方或下方, 而 <code>choices</code> 命令基于 <code>hlist</code> 环境编写, 所以<code>label</code> 只能置于内容的左侧, 这个时候只需要使用<code>choices*</code>, 会自动更改<code>anchor</code>为<code>south</code>, 如果需要修改自动的<code>anchor</code>为其它的方位可以使用<code>\\choicesetup&#123;autopic = north&#125;</code> .</p>\n<p>更多宏包细节与命令欢迎阅读宏包手册<code>choices_usrmanual.pdf</code>（用xelatex编译<code>choices_usrmanual.tex</code>即可）</p>\n<h3 id=\"如果使用过程中发现了issue或者有什么建议-欢迎提出\">如果使用过程中发现了issue或者有什么建议, 欢迎提出</h3>\n<ul>\n<li><a href=\"https://github.com/xkwxdyy/choices-l3/issues\">Github issues</a></li>\n<li><a href=\"https://gitee.com/xkwxdyy/choices-l3/issues\">Gitee issues</a></li>\n</ul>\n<hr />\n<h2 id=\"宏包设计和构想思路\">宏包设计和构想思路</h2>\n<p>宏包的产生背景我其实在<code>choices_usrmanual.pdf</code>中解释过，在这里简要地再提一下：</p>\n<ul>\n<li>对于选择题的选项排版\n<ul>\n<li>已有的选项排版命令受限于参数的个数，比如四个参数的命令必须要有四个选项</li>\n<li>对于多选题，问卷的选项排版，选项个数不确定，如果要从1-9个参数都自定义命令那非常麻烦，而且如果按照传统的自定义命令方式最多有9个必选参数，如果有更多的排版需求，那么这些方法已经失效</li>\n<li>已有的命令无法切换label的样式</li>\n</ul></li>\n</ul>\n<p>基于上述的背景，我一开始基于<code>hlist</code>环境整合了一些功能，用LaTeX3的<code>seq</code>模块来切割选项，解决了参数个数问题，产生了<code>\\choices</code>命令（本质是<code>\\hlistchoice</code>命令）。</p>\n<p>但是<code>\\choices</code>命令有一个小问题：label的位置非常局限，即使是上下偏移都无法通过<code>hlist</code>宏包本身来实现，而且还遇到一个问题：图片类型的选项排版。</p>\n<p>图片排版也是中学老师经常碰到的一种问题，我目前了解的情况来看，大部分都是通过表格来完成的，但是“使用表格”本身有一丢丢违背LaTeX的“内容与样式分离”的想法，因为我的目的还是为了排版选项，而不是表格。</p>\n<p>对于图片的排版，label通常情况下更多放置在图片的正上方或正下方。基于上述原因，我就需要开发另一种选项排版的命令<code>\\choices*</code>（本质是<code>\\coffinchoice</code>）可以方便地切换不同的anchor（借用了TikZ中的术语），满足不同需求。受耿楠教授的<a href=\"https://gitee.com/nwafu_nan/hanzibox-l3\"><code>hanzibox</code>宏包</a>启发，我决定使用LaTeX3的coffin来完成此命令的研发，最后在几天的调试下基本实现了想要的功能。</p>\n<h2 id=\"宏包代码优化\">宏包代码优化</h2>\n<p>李泽平老师当时看了我的代码和我说，一个命令的代码不应该超过一个屏幕，所以我需要对代码进行优化。</p>\n<p>其实我最开始设计的时候就是想有优化的：也就是一些算法可以单独抽离出来成为单独的函数，其实很多成熟的宏包都是这么做的，但是我没这么弄过，没有任何经验，最开始弄的时候直接出bug，然后想着“先实现再完美”（因为我一直以来都有点完美主义，导致了不少的拖延hhh），现在功能基本实现，就尝试优化一下代码。</p>\n<h3 id=\"键值优化\">键值优化</h3>\n<p>键值的有一定规范，比如使用<code>-</code>来分隔使得更容易阅读，比如<code>random-items</code>就是控制<code>items</code>的乱序。</p>\n"},{"title":"实现chapter内多个enumerate环境连续编号并在新chapter重置","date":"2022-01-14T13:28:52.000Z","updated":"2022-01-15T03:33:00.000Z","excerpt":"实现了chapter内的enumerate环境可以连续编号并且enumi计数器在新的chapter会自动清零的效果","_content":"\n## 问题阐述\n\n昨天群内万宏伟老师提出了一个需求：想要enumerate具有以下功能：\n\n1. 一个chapter内的不同的enumerate环境可以连续编号\n2. 在新的chapter的开始，enumerate环境会重置计数器\n\n起因是他想一个chapter是一份试卷，每一份试卷都是从1开始编号，问题很容易理解\n\n群里有老师说要重设计数器，我个人并不想要这种做法，理由如下：\n\n- 重设计数器之后要怎么做？重新做一个list出来？\n- `enumitem`宏包对`enumerate`环境这么好的增幅效果，这么好的轮子就不能用了\n\n所以基本实现的想法是去修改`enumerate`环境的定义，具体实现如下：\n\n## 实现的思路分析\n\n### 功能1的实现\n\n连续编号这个功能早在`enumitem`宏包的`resume*`键（带星号的会继承`label`的样式，不带星号的只继承计数器的值，考虑到一半都会修改`label`，所以采用了带星的）就可以实现，但是喜欢偷懒的我不想要每次都要输入`resume*`，如果把`enumerate`改成自己本身自带`resume*`选项不就行了？\n\n但是直接`renew`的话，可是我们不知道enumerate本身咋定义的，难道还要去翻过来并且重新去弄list？那也太麻烦了，而且我们也不是改定义，只是想让\n\n```tex\n\\begin{enumerate}\n\n\\end{enumerate}\n```\n\n具有\n\n```tex\n\\begin{enumerate}[resume*]\n\n\\end{enumerate}\n```\n\n的效果，这咋搞？\n\n我们重新看我们的需求，其实我们并不是要修改`enumerate`本身的定义，而是要在它之上加点东西而已。\n\n这个时候，我想到了以前看乙醇哥的一篇博客《[统计一节中的列表项数量](https://syvshc.github.io/2021-11-10-compute-total-items/)》里面有一个做法我印象深刻：复制副本，简单来说就是\n\n1. 先把命令`\\foo`复制一个副本`\\fooo`出来，也就是把定义放到一个新的命令里去，怎么定义的我不关心，我只知道我把它已经存起来了，随时可以被调用\n\n2. 用`\\def`修改原命令\n\n   ```tex\n   \\def\\foo{\n     % something you want to add\n     \\fooo\n   }\n   ```\n\n   由于`\\fooo`和`\\foo`是等效的，所以就是我们在原来的基础上加了东西，这个做法有迭代的味道在里面，也有数学或物理里的“看作整体”想法在。\n\n但是这个地方我们是环境怎么办？那我们只需粗略但不严谨地知道，一般环境`foo`的定义其实是定义了两个宏`\\foo`和`\\endfoo`，那我分别储存这两个宏的副本就行。\n\n{% note warning %}\n\nPS： 虽然不属于本文的讨论范围，但是还是插一嘴，从上面的这个可以看出，其实传统方式定义`foo`环境的话其实定义了`\\foo`命令，但是如果我想`newcommand`定义`\\foo`的话就会报错冲突（不出意外是`already-defined`类型的），那如果我还是想要`\\foo`和`foo`环境共存怎么办？这个时候要用`xparse`宏包的`\\NewDocumentEnvironment`命令来定义环境了，这样就可以共存，详细请参看这篇文章：[LaTeX3 and document environments](https://www.texdev.net/2011/01/09/latex3-and-document-environments/)\n\n（所以说`xparse`宏包牛！这个宏包的一些定义命令的效果和方式真是颠覆我传统的想法，第一次看就惊呼牛皮）\n\n{% endnote %}\n\n加上一点点小细节就变成了下面的代码：\n\n```tex\n\\ExplSyntaxOn\n\\makeatletter\n% 储存副本代码\n\\let\\@enumerate\\enumerate\n\\let\\@endenumerate\\endenumerate\n% 重定义enumerate环境\n\\RenewDocumentEnvironment{enumerate}{ O{} !b }\n  {\n  \t% 因为chapter最开始的enumerate环境不需要resume\n  \t% 所以加一个LaTeX3的简单整数判断bool从句\n    \\int_compare:nNnTF { \\theenumi } = {0}\n      { \\@enumerate[#1] }\n      { \\@enumerate[resume*, #1] }\n      #2\n  }\n  {\n    \\@endenumerate\n  }\n\\makeatother\n\\ExplSyntaxOff\n```\n\nPS：`xparse`宏包的使用我在我的[LaTeX3个人学习经验](https://xkwxdyy.github.io/2022/01/08/LaTeX3-learning/)文章里也有呼吁大家去读文档学习，是我在见到`hlist`环境、TikZ、LaTeX3 后震惊的第四种代码（不经想到作者都是什么神仙怪物，怎么会发明出这么牛的命令）非常推荐大家学习\n\n功能1其实就已解决了，可以直接使用`enumerate`环境也获得`resume*`的效果而不用手动添加\n\n### 功能2的实现\n\n代码其实很简单\n\n```tex\n\\setcounter{enumi}{0}\n```\n\n\n\n然后我们的目的就转化为：如何在每个`\\chapter`命令的时候自动加载这个代码？\n\n也就是能不能把这个代码嵌入`\\chapter`命令里面？\n\n我们仿照功能1的思路就可以得到下面的代码：\n\n```tex\n\\let\\ch@pter\\chapter\n\\def\\chapter{\n  \\setcounter{enumi}{0}    % 注意这个要放在\\ch@pter的前面，放在后面会报错，我也不懂TeX，也不知道为啥\n  \\ch@pter\n}\n```\n\n{% note danger %}\n\n特别要注意的是`\\@chapter`这个命令在LaTeX的源代码里就已经被定义了，所以用其它的副本名字就行。\n\n（别问我怎么知道的... 我就恰巧不巧取了`\\@chapter`，一开始就很纳闷为什么bug了，在乙醇哥的指点下注意到了这个\n\n{% endnote %}\n\n还有一种方法就是用`etoolbox`宏包的hook命令`\\pretocmd`，和上面一样只能用pre放在前面，而不能用`\\apptocmd`放在后面，希望知道原因的大佬能留言告知下原因\n\n```tex\n% \\usepackage{etoolbox}\n\\pretocmd{\\chapter}{\\setcounter{enumi}{0}}{}{}\n```\n\n### 功能2的代码完善\n\n上面说到设置计数器的代码只能放在`\\ch@pter`的前面，经过乙醇哥的提醒，发现问题出在：`\\chapter`命令是需要接收参数的，如果像上面那样的方式不做处理直接把设置计数器的代码移到`\\ch@pter`后面的话，`\\chapter`就会自动识别后面的代码为参数，但是本身也不是纯文本的，所以会报错。\n\n还有一个需要注意的是，我们上面的做法没有考虑到`\\chapter*`，所以现在需要把这个加上。\n\n知道原因了就好解决了，既然会影响参数设定，那我就提前“把参数喂给`\\ch@pter`”，这样他就不会往后面“找吃的”了。\n\n用上一点点LaTeX3的cs函数和xparse的s指定（用来处理带*命令），我们便得到了下面的代码：\n\n（有一个重要的知识：`\\chapter[]{}`与`\\chapter*{}`，也就是带`*`命令没有可选参数，虽然源代码是定义了两个命令分别控制，但是为了帮助记忆和理解，就相当于这里的`*`作为了`\\chapter`的可选参数已经被“吃掉了”，就只剩下必选参数）\n\n```tex\n\\cs_set_eq:NN \\chapter:nn \\chapter    % 相当于我们之前的把\\chapter复制给\\ch@pter一样\n\\cs_new:Npn \\chapter_star:n #1\n  {\n    \\chapter:nn * {#1}\n  }\n\n\\RenewDocumentCommand{ \\chapter }{ s O{#3} m }   % 注意#2的默认值是#3，如果为空的话目录和页眉就没有标题了\n  {\n    \\IfBooleanTF {#1}\n      { \\chapter_star:n {#3} }\n      { \\chapter:nn [#2] {#3} }\n    \\setcounter{enumi}{0}\n  }\n```\n\n查一下`\\chapter`定义的源码知道，不能直接通过`\\apptocmd`来直接处理`\\chapter`，因为它不是显式定义的，而是对`\\@chapter`和`\\@schapter`命令的包装，所以如果`\\apptpcmd`到`\\chapter`的尾部的话，代码就会挡住“参数的入口”，反而被误当参数而吃掉了。但是`\\@chapter`和`\\@schapter`是显式定义的（也就是我们通常的`\\newcommand`或`\\def`定义的，对于参数怎么处理我都约定好了，apptocmd到这两个命令的话，就是我们所期待的效果，而且不会挡住“入口”，这样的话`\\chapter`接收到的参数就会根据定义来分配给`\\@chapter`或`\\@schapter`命令。\n\n之所以放在前面是可行的，是因为设置计数器部分的代码并没有“挡住进食口”，所以原来咋样就咋样。\n\n{% note warning %}\n\n注意，其实用最初的`pretocmd`或者`\\def`的方法已经能够实现效果，我之所以要“大费周章”地还要研究把计数器代码放在后面，是因为这本身就是学习的过程，我不是为了完成任务而去处理这段代码，而是希望在写这段代码的过程中也能学到东西，对LaTeX的理解能够更深一点。\n\n{% endnote %}\n\n## 一个完整的MWE\n\n```tex\n\\documentclass{book}\n\\usepackage{enumitem}\n\\usepackage{etoolbox}\n\\ExplSyntaxOn\n\\makeatletter\n\\let\\@enumerate\\enumerate\n\\let\\@endenumerate\\endenumerate\n\n\\RenewDocumentEnvironment{enumerate}{ O{} !b }\n  {\n    \\int_compare:nNnTF { \\theenumi } = {0}\n      { \\@enumerate[#1] }\n      { \\@enumerate[resume*, #1] }\n      #2\n  }\n  {\n    \\@endenumerate\n  }\n\n% 下面两种方法都行\n% 第一种是用etoolbox的pretocmd\n% \\pretocmd{\\chapter}{\\setcounter{enumi}{0}}{}{}\n\n% 第二种是copy一个副本出来重定义chapter\n\\let\\ch@pter\\chapter\n\\cs_set_eq:NN \\chapter:nn \\chapter\n\\cs_new:Npn \\chapter_star:n #1\n  {\n    \\chapter:nn * {#1}\n  }\n% \\def\\chapter{\n%   \\setcounter{enumi}{0}\n%   \\ch@pter\n% }\n\n\\RenewDocumentCommand{ \\chapter }{ s O{#3} m }   % 注意#2的默认值是#3，如果为空的话目录和页眉就没有标题了\n  {\n    \\IfBooleanTF {#1}\n      { \\chapter_star:n {#3} }\n      { \\chapter:nn [#2] {#3} }\n    \\setcounter{enumi}{0}\n  }\n\\makeatother\n\\ExplSyntaxOff\n\n\n\\begin{document}\n\n\\tableofcontents\n\n\\chapter{1}\n\n\\begin{enumerate}[label = \\roman*.]\n  \\item 1\n  \\item 2\n\\end{enumerate}\n\n\\begin{enumerate}\n  \\item 3\n  \\item 4\n\\end{enumerate}\n\n\n\\chapter{2}\n\n\\begin{enumerate}\n  \\item 1\n  \\item 2\n\\end{enumerate}\n\n\\begin{enumerate}\n  \\item 3\n  \\item 4\n\\end{enumerate}\n\n\\end{document}\n```\n\n{% gi 2 2 %}\n\n![](https://raw.githubusercontent.com/xkwxdyy/image/main/postimage/image-hosting/enumerate-continume-numbering-within-chapter-MWE1.jpg)\n\n![](https://raw.githubusercontent.com/xkwxdyy/image/main/postimage/image-hosting/enumerate-continume-numbering-within-chapter-MWE2.jpg)\n\n{% endgi %}\n\n## 相关链接\n\n本文多处是在乙醇哥的帮助下完善的，特此感谢！\n\n欢迎读者关注他的博客：[无锤乙醇](https://syvshc.github.io/)和Github：[syvshc](https://github.com/syvshc)\n\n","source":"_posts/enumerate-continume-numbering-within-chapter.md","raw":"---\n\ntitle: 实现chapter内多个enumerate环境连续编号并在新chapter重置\ndate: 2022-01-14 21:28:52\nupdated: 2022-01-15 11:33\ntags: [LaTeX, 问题解决, enumerate]\ncategory: \n- [LaTeX]\n- [LaTeX问题解决]\nexcerpt: 实现了chapter内的enumerate环境可以连续编号并且enumi计数器在新的chapter会自动清零的效果\n---\n\n## 问题阐述\n\n昨天群内万宏伟老师提出了一个需求：想要enumerate具有以下功能：\n\n1. 一个chapter内的不同的enumerate环境可以连续编号\n2. 在新的chapter的开始，enumerate环境会重置计数器\n\n起因是他想一个chapter是一份试卷，每一份试卷都是从1开始编号，问题很容易理解\n\n群里有老师说要重设计数器，我个人并不想要这种做法，理由如下：\n\n- 重设计数器之后要怎么做？重新做一个list出来？\n- `enumitem`宏包对`enumerate`环境这么好的增幅效果，这么好的轮子就不能用了\n\n所以基本实现的想法是去修改`enumerate`环境的定义，具体实现如下：\n\n## 实现的思路分析\n\n### 功能1的实现\n\n连续编号这个功能早在`enumitem`宏包的`resume*`键（带星号的会继承`label`的样式，不带星号的只继承计数器的值，考虑到一半都会修改`label`，所以采用了带星的）就可以实现，但是喜欢偷懒的我不想要每次都要输入`resume*`，如果把`enumerate`改成自己本身自带`resume*`选项不就行了？\n\n但是直接`renew`的话，可是我们不知道enumerate本身咋定义的，难道还要去翻过来并且重新去弄list？那也太麻烦了，而且我们也不是改定义，只是想让\n\n```tex\n\\begin{enumerate}\n\n\\end{enumerate}\n```\n\n具有\n\n```tex\n\\begin{enumerate}[resume*]\n\n\\end{enumerate}\n```\n\n的效果，这咋搞？\n\n我们重新看我们的需求，其实我们并不是要修改`enumerate`本身的定义，而是要在它之上加点东西而已。\n\n这个时候，我想到了以前看乙醇哥的一篇博客《[统计一节中的列表项数量](https://syvshc.github.io/2021-11-10-compute-total-items/)》里面有一个做法我印象深刻：复制副本，简单来说就是\n\n1. 先把命令`\\foo`复制一个副本`\\fooo`出来，也就是把定义放到一个新的命令里去，怎么定义的我不关心，我只知道我把它已经存起来了，随时可以被调用\n\n2. 用`\\def`修改原命令\n\n   ```tex\n   \\def\\foo{\n     % something you want to add\n     \\fooo\n   }\n   ```\n\n   由于`\\fooo`和`\\foo`是等效的，所以就是我们在原来的基础上加了东西，这个做法有迭代的味道在里面，也有数学或物理里的“看作整体”想法在。\n\n但是这个地方我们是环境怎么办？那我们只需粗略但不严谨地知道，一般环境`foo`的定义其实是定义了两个宏`\\foo`和`\\endfoo`，那我分别储存这两个宏的副本就行。\n\n{% note warning %}\n\nPS： 虽然不属于本文的讨论范围，但是还是插一嘴，从上面的这个可以看出，其实传统方式定义`foo`环境的话其实定义了`\\foo`命令，但是如果我想`newcommand`定义`\\foo`的话就会报错冲突（不出意外是`already-defined`类型的），那如果我还是想要`\\foo`和`foo`环境共存怎么办？这个时候要用`xparse`宏包的`\\NewDocumentEnvironment`命令来定义环境了，这样就可以共存，详细请参看这篇文章：[LaTeX3 and document environments](https://www.texdev.net/2011/01/09/latex3-and-document-environments/)\n\n（所以说`xparse`宏包牛！这个宏包的一些定义命令的效果和方式真是颠覆我传统的想法，第一次看就惊呼牛皮）\n\n{% endnote %}\n\n加上一点点小细节就变成了下面的代码：\n\n```tex\n\\ExplSyntaxOn\n\\makeatletter\n% 储存副本代码\n\\let\\@enumerate\\enumerate\n\\let\\@endenumerate\\endenumerate\n% 重定义enumerate环境\n\\RenewDocumentEnvironment{enumerate}{ O{} !b }\n  {\n  \t% 因为chapter最开始的enumerate环境不需要resume\n  \t% 所以加一个LaTeX3的简单整数判断bool从句\n    \\int_compare:nNnTF { \\theenumi } = {0}\n      { \\@enumerate[#1] }\n      { \\@enumerate[resume*, #1] }\n      #2\n  }\n  {\n    \\@endenumerate\n  }\n\\makeatother\n\\ExplSyntaxOff\n```\n\nPS：`xparse`宏包的使用我在我的[LaTeX3个人学习经验](https://xkwxdyy.github.io/2022/01/08/LaTeX3-learning/)文章里也有呼吁大家去读文档学习，是我在见到`hlist`环境、TikZ、LaTeX3 后震惊的第四种代码（不经想到作者都是什么神仙怪物，怎么会发明出这么牛的命令）非常推荐大家学习\n\n功能1其实就已解决了，可以直接使用`enumerate`环境也获得`resume*`的效果而不用手动添加\n\n### 功能2的实现\n\n代码其实很简单\n\n```tex\n\\setcounter{enumi}{0}\n```\n\n\n\n然后我们的目的就转化为：如何在每个`\\chapter`命令的时候自动加载这个代码？\n\n也就是能不能把这个代码嵌入`\\chapter`命令里面？\n\n我们仿照功能1的思路就可以得到下面的代码：\n\n```tex\n\\let\\ch@pter\\chapter\n\\def\\chapter{\n  \\setcounter{enumi}{0}    % 注意这个要放在\\ch@pter的前面，放在后面会报错，我也不懂TeX，也不知道为啥\n  \\ch@pter\n}\n```\n\n{% note danger %}\n\n特别要注意的是`\\@chapter`这个命令在LaTeX的源代码里就已经被定义了，所以用其它的副本名字就行。\n\n（别问我怎么知道的... 我就恰巧不巧取了`\\@chapter`，一开始就很纳闷为什么bug了，在乙醇哥的指点下注意到了这个\n\n{% endnote %}\n\n还有一种方法就是用`etoolbox`宏包的hook命令`\\pretocmd`，和上面一样只能用pre放在前面，而不能用`\\apptocmd`放在后面，希望知道原因的大佬能留言告知下原因\n\n```tex\n% \\usepackage{etoolbox}\n\\pretocmd{\\chapter}{\\setcounter{enumi}{0}}{}{}\n```\n\n### 功能2的代码完善\n\n上面说到设置计数器的代码只能放在`\\ch@pter`的前面，经过乙醇哥的提醒，发现问题出在：`\\chapter`命令是需要接收参数的，如果像上面那样的方式不做处理直接把设置计数器的代码移到`\\ch@pter`后面的话，`\\chapter`就会自动识别后面的代码为参数，但是本身也不是纯文本的，所以会报错。\n\n还有一个需要注意的是，我们上面的做法没有考虑到`\\chapter*`，所以现在需要把这个加上。\n\n知道原因了就好解决了，既然会影响参数设定，那我就提前“把参数喂给`\\ch@pter`”，这样他就不会往后面“找吃的”了。\n\n用上一点点LaTeX3的cs函数和xparse的s指定（用来处理带*命令），我们便得到了下面的代码：\n\n（有一个重要的知识：`\\chapter[]{}`与`\\chapter*{}`，也就是带`*`命令没有可选参数，虽然源代码是定义了两个命令分别控制，但是为了帮助记忆和理解，就相当于这里的`*`作为了`\\chapter`的可选参数已经被“吃掉了”，就只剩下必选参数）\n\n```tex\n\\cs_set_eq:NN \\chapter:nn \\chapter    % 相当于我们之前的把\\chapter复制给\\ch@pter一样\n\\cs_new:Npn \\chapter_star:n #1\n  {\n    \\chapter:nn * {#1}\n  }\n\n\\RenewDocumentCommand{ \\chapter }{ s O{#3} m }   % 注意#2的默认值是#3，如果为空的话目录和页眉就没有标题了\n  {\n    \\IfBooleanTF {#1}\n      { \\chapter_star:n {#3} }\n      { \\chapter:nn [#2] {#3} }\n    \\setcounter{enumi}{0}\n  }\n```\n\n查一下`\\chapter`定义的源码知道，不能直接通过`\\apptocmd`来直接处理`\\chapter`，因为它不是显式定义的，而是对`\\@chapter`和`\\@schapter`命令的包装，所以如果`\\apptpcmd`到`\\chapter`的尾部的话，代码就会挡住“参数的入口”，反而被误当参数而吃掉了。但是`\\@chapter`和`\\@schapter`是显式定义的（也就是我们通常的`\\newcommand`或`\\def`定义的，对于参数怎么处理我都约定好了，apptocmd到这两个命令的话，就是我们所期待的效果，而且不会挡住“入口”，这样的话`\\chapter`接收到的参数就会根据定义来分配给`\\@chapter`或`\\@schapter`命令。\n\n之所以放在前面是可行的，是因为设置计数器部分的代码并没有“挡住进食口”，所以原来咋样就咋样。\n\n{% note warning %}\n\n注意，其实用最初的`pretocmd`或者`\\def`的方法已经能够实现效果，我之所以要“大费周章”地还要研究把计数器代码放在后面，是因为这本身就是学习的过程，我不是为了完成任务而去处理这段代码，而是希望在写这段代码的过程中也能学到东西，对LaTeX的理解能够更深一点。\n\n{% endnote %}\n\n## 一个完整的MWE\n\n```tex\n\\documentclass{book}\n\\usepackage{enumitem}\n\\usepackage{etoolbox}\n\\ExplSyntaxOn\n\\makeatletter\n\\let\\@enumerate\\enumerate\n\\let\\@endenumerate\\endenumerate\n\n\\RenewDocumentEnvironment{enumerate}{ O{} !b }\n  {\n    \\int_compare:nNnTF { \\theenumi } = {0}\n      { \\@enumerate[#1] }\n      { \\@enumerate[resume*, #1] }\n      #2\n  }\n  {\n    \\@endenumerate\n  }\n\n% 下面两种方法都行\n% 第一种是用etoolbox的pretocmd\n% \\pretocmd{\\chapter}{\\setcounter{enumi}{0}}{}{}\n\n% 第二种是copy一个副本出来重定义chapter\n\\let\\ch@pter\\chapter\n\\cs_set_eq:NN \\chapter:nn \\chapter\n\\cs_new:Npn \\chapter_star:n #1\n  {\n    \\chapter:nn * {#1}\n  }\n% \\def\\chapter{\n%   \\setcounter{enumi}{0}\n%   \\ch@pter\n% }\n\n\\RenewDocumentCommand{ \\chapter }{ s O{#3} m }   % 注意#2的默认值是#3，如果为空的话目录和页眉就没有标题了\n  {\n    \\IfBooleanTF {#1}\n      { \\chapter_star:n {#3} }\n      { \\chapter:nn [#2] {#3} }\n    \\setcounter{enumi}{0}\n  }\n\\makeatother\n\\ExplSyntaxOff\n\n\n\\begin{document}\n\n\\tableofcontents\n\n\\chapter{1}\n\n\\begin{enumerate}[label = \\roman*.]\n  \\item 1\n  \\item 2\n\\end{enumerate}\n\n\\begin{enumerate}\n  \\item 3\n  \\item 4\n\\end{enumerate}\n\n\n\\chapter{2}\n\n\\begin{enumerate}\n  \\item 1\n  \\item 2\n\\end{enumerate}\n\n\\begin{enumerate}\n  \\item 3\n  \\item 4\n\\end{enumerate}\n\n\\end{document}\n```\n\n{% gi 2 2 %}\n\n![](https://raw.githubusercontent.com/xkwxdyy/image/main/postimage/image-hosting/enumerate-continume-numbering-within-chapter-MWE1.jpg)\n\n![](https://raw.githubusercontent.com/xkwxdyy/image/main/postimage/image-hosting/enumerate-continume-numbering-within-chapter-MWE2.jpg)\n\n{% endgi %}\n\n## 相关链接\n\n本文多处是在乙醇哥的帮助下完善的，特此感谢！\n\n欢迎读者关注他的博客：[无锤乙醇](https://syvshc.github.io/)和Github：[syvshc](https://github.com/syvshc)\n\n","slug":"enumerate-continume-numbering-within-chapter","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cl0d4v0fu0007g491a5xa9ehq","content":"<h2 id=\"问题阐述\">问题阐述</h2>\n<p>昨天群内万宏伟老师提出了一个需求：想要enumerate具有以下功能：</p>\n<ol type=\"1\">\n<li>一个chapter内的不同的enumerate环境可以连续编号</li>\n<li>在新的chapter的开始，enumerate环境会重置计数器</li>\n</ol>\n<p>起因是他想一个chapter是一份试卷，每一份试卷都是从1开始编号，问题很容易理解</p>\n<p>群里有老师说要重设计数器，我个人并不想要这种做法，理由如下：</p>\n<ul>\n<li>重设计数器之后要怎么做？重新做一个list出来？</li>\n<li><code>enumitem</code>宏包对<code>enumerate</code>环境这么好的增幅效果，这么好的轮子就不能用了</li>\n</ul>\n<p>所以基本实现的想法是去修改<code>enumerate</code>环境的定义，具体实现如下：</p>\n<h2 id=\"实现的思路分析\">实现的思路分析</h2>\n<h3 id=\"功能1的实现\">功能1的实现</h3>\n<p>连续编号这个功能早在<code>enumitem</code>宏包的<code>resume*</code>键（带星号的会继承<code>label</code>的样式，不带星号的只继承计数器的值，考虑到一半都会修改<code>label</code>，所以采用了带星的）就可以实现，但是喜欢偷懒的我不想要每次都要输入<code>resume*</code>，如果把<code>enumerate</code>改成自己本身自带<code>resume*</code>选项不就行了？</p>\n<p>但是直接<code>renew</code>的话，可是我们不知道enumerate本身咋定义的，难道还要去翻过来并且重新去弄list？那也太麻烦了，而且我们也不是改定义，只是想让</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs tex\"><span class=\"hljs-keyword\">\\begin</span>&#123;enumerate&#125;<br><br><span class=\"hljs-keyword\">\\end</span>&#123;enumerate&#125;<br></code></pre></td></tr></table></figure>\n<p>具有</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tex\"><span class=\"hljs-keyword\">\\begin</span>&#123;enumerate&#125;[resume*]<br><br><span class=\"hljs-keyword\">\\end</span>&#123;enumerate&#125;<br></code></pre></td></tr></table></figure>\n<p>的效果，这咋搞？</p>\n<p>我们重新看我们的需求，其实我们并不是要修改<code>enumerate</code>本身的定义，而是要在它之上加点东西而已。</p>\n<p>这个时候，我想到了以前看乙醇哥的一篇博客《<a href=\"https://syvshc.github.io/2021-11-10-compute-total-items/\">统计一节中的列表项数量</a>》里面有一个做法我印象深刻：复制副本，简单来说就是</p>\n<ol type=\"1\">\n<li><p>先把命令<code>\\foo</code>复制一个副本<code>\\fooo</code>出来，也就是把定义放到一个新的命令里去，怎么定义的我不关心，我只知道我把它已经存起来了，随时可以被调用</p></li>\n<li><p>用<code>\\def</code>修改原命令</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tex\"><span class=\"hljs-keyword\">\\def</span><span class=\"hljs-keyword\">\\foo</span>&#123;<br>  <span class=\"hljs-comment\">% something you want to add</span><br>  <span class=\"hljs-keyword\">\\fooo</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<p>由于<code>\\fooo</code>和<code>\\foo</code>是等效的，所以就是我们在原来的基础上加了东西，这个做法有迭代的味道在里面，也有数学或物理里的“看作整体”想法在。</p></li>\n</ol>\n<p>但是这个地方我们是环境怎么办？那我们只需粗略但不严谨地知道，一般环境<code>foo</code>的定义其实是定义了两个宏<code>\\foo</code>和<code>\\endfoo</code>，那我分别储存这两个宏的副本就行。</p>\n<div class=\"note note-warning\">\n            <p>PS： 虽然不属于本文的讨论范围，但是还是插一嘴，从上面的这个可以看出，其实传统方式定义<code>foo</code>环境的话其实定义了<code>\\foo</code>命令，但是如果我想<code>newcommand</code>定义<code>\\foo</code>的话就会报错冲突（不出意外是<code>already-defined</code>类型的），那如果我还是想要<code>\\foo</code>和<code>foo</code>环境共存怎么办？这个时候要用<code>xparse</code>宏包的<code>\\NewDocumentEnvironment</code>命令来定义环境了，这样就可以共存，详细请参看这篇文章：<a href=\"https://www.texdev.net/2011/01/09/latex3-and-document-environments/\">LaTeX3 and document environments</a></p><p>（所以说<code>xparse</code>宏包牛！这个宏包的一些定义命令的效果和方式真是颠覆我传统的想法，第一次看就惊呼牛皮）</p>\n          </div>\n<p>加上一点点小细节就变成了下面的代码：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tex\"><span class=\"hljs-keyword\">\\ExplSyntaxOn</span><br><span class=\"hljs-keyword\">\\makeatletter</span><br><span class=\"hljs-comment\">% 储存副本代码</span><br><span class=\"hljs-keyword\">\\let</span><span class=\"hljs-keyword\">\\@enumerate</span><span class=\"hljs-keyword\">\\enumerate</span><br><span class=\"hljs-keyword\">\\let</span><span class=\"hljs-keyword\">\\@endenumerate</span><span class=\"hljs-keyword\">\\endenumerate</span><br><span class=\"hljs-comment\">% 重定义enumerate环境</span><br><span class=\"hljs-keyword\">\\RenewDocumentEnvironment</span>&#123;enumerate&#125;&#123; O&#123;&#125; !b &#125;<br>  &#123;<br>  \t<span class=\"hljs-comment\">% 因为chapter最开始的enumerate环境不需要resume</span><br>  \t<span class=\"hljs-comment\">% 所以加一个LaTeX3的简单整数判断bool从句</span><br>    <span class=\"hljs-keyword\">\\int_compare:nNnTF</span> &#123; <span class=\"hljs-keyword\">\\theenumi</span> &#125; = &#123;0&#125;<br>      &#123; <span class=\"hljs-keyword\">\\@enumerate</span>[<span class=\"hljs-params\">#1</span>] &#125;<br>      &#123; <span class=\"hljs-keyword\">\\@enumerate</span>[resume*, <span class=\"hljs-params\">#1</span>] &#125;<br>      <span class=\"hljs-params\">#2</span><br>  &#125;<br>  &#123;<br>    <span class=\"hljs-keyword\">\\@endenumerate</span><br>  &#125;<br><span class=\"hljs-keyword\">\\makeatother</span><br><span class=\"hljs-keyword\">\\ExplSyntaxOff</span><br></code></pre></td></tr></table></figure>\n<p>PS：<code>xparse</code>宏包的使用我在我的<a href=\"https://xkwxdyy.github.io/2022/01/08/LaTeX3-learning/\">LaTeX3个人学习经验</a>文章里也有呼吁大家去读文档学习，是我在见到<code>hlist</code>环境、TikZ、LaTeX3 后震惊的第四种代码（不经想到作者都是什么神仙怪物，怎么会发明出这么牛的命令）非常推荐大家学习</p>\n<p>功能1其实就已解决了，可以直接使用<code>enumerate</code>环境也获得<code>resume*</code>的效果而不用手动添加</p>\n<h3 id=\"功能2的实现\">功能2的实现</h3>\n<p>代码其实很简单</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tex\"><span class=\"hljs-keyword\">\\setcounter</span>&#123;enumi&#125;&#123;0&#125;<br></code></pre></td></tr></table></figure>\n<p>然后我们的目的就转化为：如何在每个<code>\\chapter</code>命令的时候自动加载这个代码？</p>\n<p>也就是能不能把这个代码嵌入<code>\\chapter</code>命令里面？</p>\n<p>我们仿照功能1的思路就可以得到下面的代码：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tex\"><span class=\"hljs-keyword\">\\let</span><span class=\"hljs-keyword\">\\ch@pter</span><span class=\"hljs-keyword\">\\chapter</span><br><span class=\"hljs-keyword\">\\def</span><span class=\"hljs-keyword\">\\chapter</span>&#123;<br>  <span class=\"hljs-keyword\">\\setcounter</span>&#123;enumi&#125;&#123;0&#125;    <span class=\"hljs-comment\">% 注意这个要放在\\ch@pter的前面，放在后面会报错，我也不懂TeX，也不知道为啥</span><br>  <span class=\"hljs-keyword\">\\ch@pter</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<div class=\"note note-danger\">\n            <p>特别要注意的是<code>\\@chapter</code>这个命令在LaTeX的源代码里就已经被定义了，所以用其它的副本名字就行。</p><p>（别问我怎么知道的... 我就恰巧不巧取了<code>\\@chapter</code>，一开始就很纳闷为什么bug了，在乙醇哥的指点下注意到了这个</p>\n          </div>\n<p>还有一种方法就是用<code>etoolbox</code>宏包的hook命令<code>\\pretocmd</code>，和上面一样只能用pre放在前面，而不能用<code>\\apptocmd</code>放在后面，希望知道原因的大佬能留言告知下原因</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tex\"><span class=\"hljs-comment\">% \\usepackage&#123;etoolbox&#125;</span><br><span class=\"hljs-keyword\">\\pretocmd</span>&#123;<span class=\"hljs-keyword\">\\chapter</span>&#125;&#123;<span class=\"hljs-keyword\">\\setcounter</span>&#123;enumi&#125;&#123;0&#125;&#125;&#123;&#125;&#123;&#125;<br></code></pre></td></tr></table></figure>\n<h3 id=\"功能2的代码完善\">功能2的代码完善</h3>\n<p>上面说到设置计数器的代码只能放在<code>\\ch@pter</code>的前面，经过乙醇哥的提醒，发现问题出在：<code>\\chapter</code>命令是需要接收参数的，如果像上面那样的方式不做处理直接把设置计数器的代码移到<code>\\ch@pter</code>后面的话，<code>\\chapter</code>就会自动识别后面的代码为参数，但是本身也不是纯文本的，所以会报错。</p>\n<p>还有一个需要注意的是，我们上面的做法没有考虑到<code>\\chapter*</code>，所以现在需要把这个加上。</p>\n<p>知道原因了就好解决了，既然会影响参数设定，那我就提前“把参数喂给<code>\\ch@pter</code>”，这样他就不会往后面“找吃的”了。</p>\n<p>用上一点点LaTeX3的cs函数和xparse的s指定（用来处理带*命令），我们便得到了下面的代码：</p>\n<p>（有一个重要的知识：<code>\\chapter[]&#123;&#125;</code>与<code>\\chapter*&#123;&#125;</code>，也就是带<code>*</code>命令没有可选参数，虽然源代码是定义了两个命令分别控制，但是为了帮助记忆和理解，就相当于这里的<code>*</code>作为了<code>\\chapter</code>的可选参数已经被“吃掉了”，就只剩下必选参数）</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tex\"><span class=\"hljs-keyword\">\\cs_set_eq:NN</span> <span class=\"hljs-keyword\">\\chapter</span>:nn <span class=\"hljs-keyword\">\\chapter</span>    <span class=\"hljs-comment\">% 相当于我们之前的把\\chapter复制给\\ch@pter一样</span><br><span class=\"hljs-keyword\">\\cs_new:Npn</span> <span class=\"hljs-keyword\">\\chapter_star:n</span> <span class=\"hljs-params\">#1</span><br>  &#123;<br>    <span class=\"hljs-keyword\">\\chapter</span>:nn * &#123;<span class=\"hljs-params\">#1</span>&#125;<br>  &#125;<br><br><span class=\"hljs-keyword\">\\RenewDocumentCommand</span>&#123; <span class=\"hljs-keyword\">\\chapter</span> &#125;&#123; s O&#123;<span class=\"hljs-params\">#3</span>&#125; m &#125;   <span class=\"hljs-comment\">% 注意#2的默认值是#3，如果为空的话目录和页眉就没有标题了</span><br>  &#123;<br>    <span class=\"hljs-keyword\">\\IfBooleanTF</span> &#123;<span class=\"hljs-params\">#1</span>&#125;<br>      &#123; <span class=\"hljs-keyword\">\\chapter_star:n</span> &#123;<span class=\"hljs-params\">#3</span>&#125; &#125;<br>      &#123; <span class=\"hljs-keyword\">\\chapter</span>:nn [<span class=\"hljs-params\">#2</span>] &#123;<span class=\"hljs-params\">#3</span>&#125; &#125;<br>    <span class=\"hljs-keyword\">\\setcounter</span>&#123;enumi&#125;&#123;0&#125;<br>  &#125;<br></code></pre></td></tr></table></figure>\n<p>查一下<code>\\chapter</code>定义的源码知道，不能直接通过<code>\\apptocmd</code>来直接处理<code>\\chapter</code>，因为它不是显式定义的，而是对<code>\\@chapter</code>和<code>\\@schapter</code>命令的包装，所以如果<code>\\apptpcmd</code>到<code>\\chapter</code>的尾部的话，代码就会挡住“参数的入口”，反而被误当参数而吃掉了。但是<code>\\@chapter</code>和<code>\\@schapter</code>是显式定义的（也就是我们通常的<code>\\newcommand</code>或<code>\\def</code>定义的，对于参数怎么处理我都约定好了，apptocmd到这两个命令的话，就是我们所期待的效果，而且不会挡住“入口”，这样的话<code>\\chapter</code>接收到的参数就会根据定义来分配给<code>\\@chapter</code>或<code>\\@schapter</code>命令。</p>\n<p>之所以放在前面是可行的，是因为设置计数器部分的代码并没有“挡住进食口”，所以原来咋样就咋样。</p>\n<div class=\"note note-warning\">\n            <p>注意，其实用最初的<code>pretocmd</code>或者<code>\\def</code>的方法已经能够实现效果，我之所以要“大费周章”地还要研究把计数器代码放在后面，是因为这本身就是学习的过程，我不是为了完成任务而去处理这段代码，而是希望在写这段代码的过程中也能学到东西，对LaTeX的理解能够更深一点。</p>\n          </div>\n<h2 id=\"一个完整的mwe\">一个完整的MWE</h2>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tex\"><span class=\"hljs-keyword\">\\documentclass</span>&#123;book&#125;<br><span class=\"hljs-keyword\">\\usepackage</span>&#123;enumitem&#125;<br><span class=\"hljs-keyword\">\\usepackage</span>&#123;etoolbox&#125;<br><span class=\"hljs-keyword\">\\ExplSyntaxOn</span><br><span class=\"hljs-keyword\">\\makeatletter</span><br><span class=\"hljs-keyword\">\\let</span><span class=\"hljs-keyword\">\\@enumerate</span><span class=\"hljs-keyword\">\\enumerate</span><br><span class=\"hljs-keyword\">\\let</span><span class=\"hljs-keyword\">\\@endenumerate</span><span class=\"hljs-keyword\">\\endenumerate</span><br><br><span class=\"hljs-keyword\">\\RenewDocumentEnvironment</span>&#123;enumerate&#125;&#123; O&#123;&#125; !b &#125;<br>  &#123;<br>    <span class=\"hljs-keyword\">\\int_compare:nNnTF</span> &#123; <span class=\"hljs-keyword\">\\theenumi</span> &#125; = &#123;0&#125;<br>      &#123; <span class=\"hljs-keyword\">\\@enumerate</span>[<span class=\"hljs-params\">#1</span>] &#125;<br>      &#123; <span class=\"hljs-keyword\">\\@enumerate</span>[resume*, <span class=\"hljs-params\">#1</span>] &#125;<br>      <span class=\"hljs-params\">#2</span><br>  &#125;<br>  &#123;<br>    <span class=\"hljs-keyword\">\\@endenumerate</span><br>  &#125;<br><br><span class=\"hljs-comment\">% 下面两种方法都行</span><br><span class=\"hljs-comment\">% 第一种是用etoolbox的pretocmd</span><br><span class=\"hljs-comment\">% \\pretocmd&#123;\\chapter&#125;&#123;\\setcounter&#123;enumi&#125;&#123;0&#125;&#125;&#123;&#125;&#123;&#125;</span><br><br><span class=\"hljs-comment\">% 第二种是copy一个副本出来重定义chapter</span><br><span class=\"hljs-keyword\">\\let</span><span class=\"hljs-keyword\">\\ch@pter</span><span class=\"hljs-keyword\">\\chapter</span><br><span class=\"hljs-keyword\">\\cs_set_eq:NN</span> <span class=\"hljs-keyword\">\\chapter</span>:nn <span class=\"hljs-keyword\">\\chapter</span><br><span class=\"hljs-keyword\">\\cs_new:Npn</span> <span class=\"hljs-keyword\">\\chapter_star:n</span> <span class=\"hljs-params\">#1</span><br>  &#123;<br>    <span class=\"hljs-keyword\">\\chapter</span>:nn * &#123;<span class=\"hljs-params\">#1</span>&#125;<br>  &#125;<br><span class=\"hljs-comment\">% \\def\\chapter&#123;</span><br><span class=\"hljs-comment\">%   \\setcounter&#123;enumi&#125;&#123;0&#125;</span><br><span class=\"hljs-comment\">%   \\ch@pter</span><br><span class=\"hljs-comment\">% &#125;</span><br><br><span class=\"hljs-keyword\">\\RenewDocumentCommand</span>&#123; <span class=\"hljs-keyword\">\\chapter</span> &#125;&#123; s O&#123;<span class=\"hljs-params\">#3</span>&#125; m &#125;   <span class=\"hljs-comment\">% 注意#2的默认值是#3，如果为空的话目录和页眉就没有标题了</span><br>  &#123;<br>    <span class=\"hljs-keyword\">\\IfBooleanTF</span> &#123;<span class=\"hljs-params\">#1</span>&#125;<br>      &#123; <span class=\"hljs-keyword\">\\chapter_star:n</span> &#123;<span class=\"hljs-params\">#3</span>&#125; &#125;<br>      &#123; <span class=\"hljs-keyword\">\\chapter</span>:nn [<span class=\"hljs-params\">#2</span>] &#123;<span class=\"hljs-params\">#3</span>&#125; &#125;<br>    <span class=\"hljs-keyword\">\\setcounter</span>&#123;enumi&#125;&#123;0&#125;<br>  &#125;<br><span class=\"hljs-keyword\">\\makeatother</span><br><span class=\"hljs-keyword\">\\ExplSyntaxOff</span><br><br><br><span class=\"hljs-keyword\">\\begin</span>&#123;document&#125;<br><br><span class=\"hljs-keyword\">\\tableofcontents</span><br><br><span class=\"hljs-keyword\">\\chapter</span>&#123;1&#125;<br><br><span class=\"hljs-keyword\">\\begin</span>&#123;enumerate&#125;[label = <span class=\"hljs-keyword\">\\roman</span>*.]<br>  <span class=\"hljs-keyword\">\\item</span> 1<br>  <span class=\"hljs-keyword\">\\item</span> 2<br><span class=\"hljs-keyword\">\\end</span>&#123;enumerate&#125;<br><br><span class=\"hljs-keyword\">\\begin</span>&#123;enumerate&#125;<br>  <span class=\"hljs-keyword\">\\item</span> 3<br>  <span class=\"hljs-keyword\">\\item</span> 4<br><span class=\"hljs-keyword\">\\end</span>&#123;enumerate&#125;<br><br><br><span class=\"hljs-keyword\">\\chapter</span>&#123;2&#125;<br><br><span class=\"hljs-keyword\">\\begin</span>&#123;enumerate&#125;<br>  <span class=\"hljs-keyword\">\\item</span> 1<br>  <span class=\"hljs-keyword\">\\item</span> 2<br><span class=\"hljs-keyword\">\\end</span>&#123;enumerate&#125;<br><br><span class=\"hljs-keyword\">\\begin</span>&#123;enumerate&#125;<br>  <span class=\"hljs-keyword\">\\item</span> 3<br>  <span class=\"hljs-keyword\">\\item</span> 4<br><span class=\"hljs-keyword\">\\end</span>&#123;enumerate&#125;<br><br><span class=\"hljs-keyword\">\\end</span>&#123;document&#125;<br></code></pre></td></tr></table></figure>\n<div class=\"group-image-container\"><div class=\"group-image-row\"><div class=\"group-image-wrap\"><img src=\"https://raw.githubusercontent.com/xkwxdyy/image/main/postimage/image-hosting/enumerate-continume-numbering-within-chapter-MWE1.jpg\" /></div><div class=\"group-image-wrap\"><img src=\"https://raw.githubusercontent.com/xkwxdyy/image/main/postimage/image-hosting/enumerate-continume-numbering-within-chapter-MWE2.jpg\" /></div></div></div>\n<h2 id=\"相关链接\">相关链接</h2>\n<p>本文多处是在乙醇哥的帮助下完善的，特此感谢！</p>\n<p>欢迎读者关注他的博客：<a href=\"https://syvshc.github.io/\">无锤乙醇</a>和Github：<a href=\"https://github.com/syvshc\">syvshc</a></p>\n","site":{"data":{}},"wordcount":5529,"more":"<h2 id=\"问题阐述\">问题阐述</h2>\n<p>昨天群内万宏伟老师提出了一个需求：想要enumerate具有以下功能：</p>\n<ol type=\"1\">\n<li>一个chapter内的不同的enumerate环境可以连续编号</li>\n<li>在新的chapter的开始，enumerate环境会重置计数器</li>\n</ol>\n<p>起因是他想一个chapter是一份试卷，每一份试卷都是从1开始编号，问题很容易理解</p>\n<p>群里有老师说要重设计数器，我个人并不想要这种做法，理由如下：</p>\n<ul>\n<li>重设计数器之后要怎么做？重新做一个list出来？</li>\n<li><code>enumitem</code>宏包对<code>enumerate</code>环境这么好的增幅效果，这么好的轮子就不能用了</li>\n</ul>\n<p>所以基本实现的想法是去修改<code>enumerate</code>环境的定义，具体实现如下：</p>\n<h2 id=\"实现的思路分析\">实现的思路分析</h2>\n<h3 id=\"功能1的实现\">功能1的实现</h3>\n<p>连续编号这个功能早在<code>enumitem</code>宏包的<code>resume*</code>键（带星号的会继承<code>label</code>的样式，不带星号的只继承计数器的值，考虑到一半都会修改<code>label</code>，所以采用了带星的）就可以实现，但是喜欢偷懒的我不想要每次都要输入<code>resume*</code>，如果把<code>enumerate</code>改成自己本身自带<code>resume*</code>选项不就行了？</p>\n<p>但是直接<code>renew</code>的话，可是我们不知道enumerate本身咋定义的，难道还要去翻过来并且重新去弄list？那也太麻烦了，而且我们也不是改定义，只是想让</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tex\"><span class=\"hljs-keyword\">\\begin</span>&#123;enumerate&#125;<br><br><span class=\"hljs-keyword\">\\end</span>&#123;enumerate&#125;<br></code></pre></td></tr></table></figure>\n<p>具有</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tex\"><span class=\"hljs-keyword\">\\begin</span>&#123;enumerate&#125;[resume*]<br><br><span class=\"hljs-keyword\">\\end</span>&#123;enumerate&#125;<br></code></pre></td></tr></table></figure>\n<p>的效果，这咋搞？</p>\n<p>我们重新看我们的需求，其实我们并不是要修改<code>enumerate</code>本身的定义，而是要在它之上加点东西而已。</p>\n<p>这个时候，我想到了以前看乙醇哥的一篇博客《<a href=\"https://syvshc.github.io/2021-11-10-compute-total-items/\">统计一节中的列表项数量</a>》里面有一个做法我印象深刻：复制副本，简单来说就是</p>\n<ol type=\"1\">\n<li><p>先把命令<code>\\foo</code>复制一个副本<code>\\fooo</code>出来，也就是把定义放到一个新的命令里去，怎么定义的我不关心，我只知道我把它已经存起来了，随时可以被调用</p></li>\n<li><p>用<code>\\def</code>修改原命令</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tex\"><span class=\"hljs-keyword\">\\def</span><span class=\"hljs-keyword\">\\foo</span>&#123;<br>  <span class=\"hljs-comment\">% something you want to add</span><br>  <span class=\"hljs-keyword\">\\fooo</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<p>由于<code>\\fooo</code>和<code>\\foo</code>是等效的，所以就是我们在原来的基础上加了东西，这个做法有迭代的味道在里面，也有数学或物理里的“看作整体”想法在。</p></li>\n</ol>\n<p>但是这个地方我们是环境怎么办？那我们只需粗略但不严谨地知道，一般环境<code>foo</code>的定义其实是定义了两个宏<code>\\foo</code>和<code>\\endfoo</code>，那我分别储存这两个宏的副本就行。</p>\n<div class=\"note note-warning\">\n            <p>PS： 虽然不属于本文的讨论范围，但是还是插一嘴，从上面的这个可以看出，其实传统方式定义<code>foo</code>环境的话其实定义了<code>\\foo</code>命令，但是如果我想<code>newcommand</code>定义<code>\\foo</code>的话就会报错冲突（不出意外是<code>already-defined</code>类型的），那如果我还是想要<code>\\foo</code>和<code>foo</code>环境共存怎么办？这个时候要用<code>xparse</code>宏包的<code>\\NewDocumentEnvironment</code>命令来定义环境了，这样就可以共存，详细请参看这篇文章：<a href=\"https://www.texdev.net/2011/01/09/latex3-and-document-environments/\">LaTeX3 and document environments</a></p><p>（所以说<code>xparse</code>宏包牛！这个宏包的一些定义命令的效果和方式真是颠覆我传统的想法，第一次看就惊呼牛皮）</p>\n          </div>\n<p>加上一点点小细节就变成了下面的代码：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tex\"><span class=\"hljs-keyword\">\\ExplSyntaxOn</span><br><span class=\"hljs-keyword\">\\makeatletter</span><br><span class=\"hljs-comment\">% 储存副本代码</span><br><span class=\"hljs-keyword\">\\let</span><span class=\"hljs-keyword\">\\@enumerate</span><span class=\"hljs-keyword\">\\enumerate</span><br><span class=\"hljs-keyword\">\\let</span><span class=\"hljs-keyword\">\\@endenumerate</span><span class=\"hljs-keyword\">\\endenumerate</span><br><span class=\"hljs-comment\">% 重定义enumerate环境</span><br><span class=\"hljs-keyword\">\\RenewDocumentEnvironment</span>&#123;enumerate&#125;&#123; O&#123;&#125; !b &#125;<br>  &#123;<br>  \t<span class=\"hljs-comment\">% 因为chapter最开始的enumerate环境不需要resume</span><br>  \t<span class=\"hljs-comment\">% 所以加一个LaTeX3的简单整数判断bool从句</span><br>    <span class=\"hljs-keyword\">\\int_compare:nNnTF</span> &#123; <span class=\"hljs-keyword\">\\theenumi</span> &#125; = &#123;0&#125;<br>      &#123; <span class=\"hljs-keyword\">\\@enumerate</span>[<span class=\"hljs-params\">#1</span>] &#125;<br>      &#123; <span class=\"hljs-keyword\">\\@enumerate</span>[resume*, <span class=\"hljs-params\">#1</span>] &#125;<br>      <span class=\"hljs-params\">#2</span><br>  &#125;<br>  &#123;<br>    <span class=\"hljs-keyword\">\\@endenumerate</span><br>  &#125;<br><span class=\"hljs-keyword\">\\makeatother</span><br><span class=\"hljs-keyword\">\\ExplSyntaxOff</span><br></code></pre></td></tr></table></figure>\n<p>PS：<code>xparse</code>宏包的使用我在我的<a href=\"https://xkwxdyy.github.io/2022/01/08/LaTeX3-learning/\">LaTeX3个人学习经验</a>文章里也有呼吁大家去读文档学习，是我在见到<code>hlist</code>环境、TikZ、LaTeX3 后震惊的第四种代码（不经想到作者都是什么神仙怪物，怎么会发明出这么牛的命令）非常推荐大家学习</p>\n<p>功能1其实就已解决了，可以直接使用<code>enumerate</code>环境也获得<code>resume*</code>的效果而不用手动添加</p>\n<h3 id=\"功能2的实现\">功能2的实现</h3>\n<p>代码其实很简单</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tex\"><span class=\"hljs-keyword\">\\setcounter</span>&#123;enumi&#125;&#123;0&#125;<br></code></pre></td></tr></table></figure>\n<p>然后我们的目的就转化为：如何在每个<code>\\chapter</code>命令的时候自动加载这个代码？</p>\n<p>也就是能不能把这个代码嵌入<code>\\chapter</code>命令里面？</p>\n<p>我们仿照功能1的思路就可以得到下面的代码：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tex\"><span class=\"hljs-keyword\">\\let</span><span class=\"hljs-keyword\">\\ch@pter</span><span class=\"hljs-keyword\">\\chapter</span><br><span class=\"hljs-keyword\">\\def</span><span class=\"hljs-keyword\">\\chapter</span>&#123;<br>  <span class=\"hljs-keyword\">\\setcounter</span>&#123;enumi&#125;&#123;0&#125;    <span class=\"hljs-comment\">% 注意这个要放在\\ch@pter的前面，放在后面会报错，我也不懂TeX，也不知道为啥</span><br>  <span class=\"hljs-keyword\">\\ch@pter</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<div class=\"note note-danger\">\n            <p>特别要注意的是<code>\\@chapter</code>这个命令在LaTeX的源代码里就已经被定义了，所以用其它的副本名字就行。</p><p>（别问我怎么知道的... 我就恰巧不巧取了<code>\\@chapter</code>，一开始就很纳闷为什么bug了，在乙醇哥的指点下注意到了这个</p>\n          </div>\n<p>还有一种方法就是用<code>etoolbox</code>宏包的hook命令<code>\\pretocmd</code>，和上面一样只能用pre放在前面，而不能用<code>\\apptocmd</code>放在后面，希望知道原因的大佬能留言告知下原因</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tex\"><span class=\"hljs-comment\">% \\usepackage&#123;etoolbox&#125;</span><br><span class=\"hljs-keyword\">\\pretocmd</span>&#123;<span class=\"hljs-keyword\">\\chapter</span>&#125;&#123;<span class=\"hljs-keyword\">\\setcounter</span>&#123;enumi&#125;&#123;0&#125;&#125;&#123;&#125;&#123;&#125;<br></code></pre></td></tr></table></figure>\n<h3 id=\"功能2的代码完善\">功能2的代码完善</h3>\n<p>上面说到设置计数器的代码只能放在<code>\\ch@pter</code>的前面，经过乙醇哥的提醒，发现问题出在：<code>\\chapter</code>命令是需要接收参数的，如果像上面那样的方式不做处理直接把设置计数器的代码移到<code>\\ch@pter</code>后面的话，<code>\\chapter</code>就会自动识别后面的代码为参数，但是本身也不是纯文本的，所以会报错。</p>\n<p>还有一个需要注意的是，我们上面的做法没有考虑到<code>\\chapter*</code>，所以现在需要把这个加上。</p>\n<p>知道原因了就好解决了，既然会影响参数设定，那我就提前“把参数喂给<code>\\ch@pter</code>”，这样他就不会往后面“找吃的”了。</p>\n<p>用上一点点LaTeX3的cs函数和xparse的s指定（用来处理带*命令），我们便得到了下面的代码：</p>\n<p>（有一个重要的知识：<code>\\chapter[]&#123;&#125;</code>与<code>\\chapter*&#123;&#125;</code>，也就是带<code>*</code>命令没有可选参数，虽然源代码是定义了两个命令分别控制，但是为了帮助记忆和理解，就相当于这里的<code>*</code>作为了<code>\\chapter</code>的可选参数已经被“吃掉了”，就只剩下必选参数）</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tex\"><span class=\"hljs-keyword\">\\cs_set_eq:NN</span> <span class=\"hljs-keyword\">\\chapter</span>:nn <span class=\"hljs-keyword\">\\chapter</span>    <span class=\"hljs-comment\">% 相当于我们之前的把\\chapter复制给\\ch@pter一样</span><br><span class=\"hljs-keyword\">\\cs_new:Npn</span> <span class=\"hljs-keyword\">\\chapter_star:n</span> <span class=\"hljs-params\">#1</span><br>  &#123;<br>    <span class=\"hljs-keyword\">\\chapter</span>:nn * &#123;<span class=\"hljs-params\">#1</span>&#125;<br>  &#125;<br><br><span class=\"hljs-keyword\">\\RenewDocumentCommand</span>&#123; <span class=\"hljs-keyword\">\\chapter</span> &#125;&#123; s O&#123;<span class=\"hljs-params\">#3</span>&#125; m &#125;   <span class=\"hljs-comment\">% 注意#2的默认值是#3，如果为空的话目录和页眉就没有标题了</span><br>  &#123;<br>    <span class=\"hljs-keyword\">\\IfBooleanTF</span> &#123;<span class=\"hljs-params\">#1</span>&#125;<br>      &#123; <span class=\"hljs-keyword\">\\chapter_star:n</span> &#123;<span class=\"hljs-params\">#3</span>&#125; &#125;<br>      &#123; <span class=\"hljs-keyword\">\\chapter</span>:nn [<span class=\"hljs-params\">#2</span>] &#123;<span class=\"hljs-params\">#3</span>&#125; &#125;<br>    <span class=\"hljs-keyword\">\\setcounter</span>&#123;enumi&#125;&#123;0&#125;<br>  &#125;<br></code></pre></td></tr></table></figure>\n<p>查一下<code>\\chapter</code>定义的源码知道，不能直接通过<code>\\apptocmd</code>来直接处理<code>\\chapter</code>，因为它不是显式定义的，而是对<code>\\@chapter</code>和<code>\\@schapter</code>命令的包装，所以如果<code>\\apptpcmd</code>到<code>\\chapter</code>的尾部的话，代码就会挡住“参数的入口”，反而被误当参数而吃掉了。但是<code>\\@chapter</code>和<code>\\@schapter</code>是显式定义的（也就是我们通常的<code>\\newcommand</code>或<code>\\def</code>定义的，对于参数怎么处理我都约定好了，apptocmd到这两个命令的话，就是我们所期待的效果，而且不会挡住“入口”，这样的话<code>\\chapter</code>接收到的参数就会根据定义来分配给<code>\\@chapter</code>或<code>\\@schapter</code>命令。</p>\n<p>之所以放在前面是可行的，是因为设置计数器部分的代码并没有“挡住进食口”，所以原来咋样就咋样。</p>\n<div class=\"note note-warning\">\n            <p>注意，其实用最初的<code>pretocmd</code>或者<code>\\def</code>的方法已经能够实现效果，我之所以要“大费周章”地还要研究把计数器代码放在后面，是因为这本身就是学习的过程，我不是为了完成任务而去处理这段代码，而是希望在写这段代码的过程中也能学到东西，对LaTeX的理解能够更深一点。</p>\n          </div>\n<h2 id=\"一个完整的mwe\">一个完整的MWE</h2>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tex\"><span class=\"hljs-keyword\">\\documentclass</span>&#123;book&#125;<br><span class=\"hljs-keyword\">\\usepackage</span>&#123;enumitem&#125;<br><span class=\"hljs-keyword\">\\usepackage</span>&#123;etoolbox&#125;<br><span class=\"hljs-keyword\">\\ExplSyntaxOn</span><br><span class=\"hljs-keyword\">\\makeatletter</span><br><span class=\"hljs-keyword\">\\let</span><span class=\"hljs-keyword\">\\@enumerate</span><span class=\"hljs-keyword\">\\enumerate</span><br><span class=\"hljs-keyword\">\\let</span><span class=\"hljs-keyword\">\\@endenumerate</span><span class=\"hljs-keyword\">\\endenumerate</span><br><br><span class=\"hljs-keyword\">\\RenewDocumentEnvironment</span>&#123;enumerate&#125;&#123; O&#123;&#125; !b &#125;<br>  &#123;<br>    <span class=\"hljs-keyword\">\\int_compare:nNnTF</span> &#123; <span class=\"hljs-keyword\">\\theenumi</span> &#125; = &#123;0&#125;<br>      &#123; <span class=\"hljs-keyword\">\\@enumerate</span>[<span class=\"hljs-params\">#1</span>] &#125;<br>      &#123; <span class=\"hljs-keyword\">\\@enumerate</span>[resume*, <span class=\"hljs-params\">#1</span>] &#125;<br>      <span class=\"hljs-params\">#2</span><br>  &#125;<br>  &#123;<br>    <span class=\"hljs-keyword\">\\@endenumerate</span><br>  &#125;<br><br><span class=\"hljs-comment\">% 下面两种方法都行</span><br><span class=\"hljs-comment\">% 第一种是用etoolbox的pretocmd</span><br><span class=\"hljs-comment\">% \\pretocmd&#123;\\chapter&#125;&#123;\\setcounter&#123;enumi&#125;&#123;0&#125;&#125;&#123;&#125;&#123;&#125;</span><br><br><span class=\"hljs-comment\">% 第二种是copy一个副本出来重定义chapter</span><br><span class=\"hljs-keyword\">\\let</span><span class=\"hljs-keyword\">\\ch@pter</span><span class=\"hljs-keyword\">\\chapter</span><br><span class=\"hljs-keyword\">\\cs_set_eq:NN</span> <span class=\"hljs-keyword\">\\chapter</span>:nn <span class=\"hljs-keyword\">\\chapter</span><br><span class=\"hljs-keyword\">\\cs_new:Npn</span> <span class=\"hljs-keyword\">\\chapter_star:n</span> <span class=\"hljs-params\">#1</span><br>  &#123;<br>    <span class=\"hljs-keyword\">\\chapter</span>:nn * &#123;<span class=\"hljs-params\">#1</span>&#125;<br>  &#125;<br><span class=\"hljs-comment\">% \\def\\chapter&#123;</span><br><span class=\"hljs-comment\">%   \\setcounter&#123;enumi&#125;&#123;0&#125;</span><br><span class=\"hljs-comment\">%   \\ch@pter</span><br><span class=\"hljs-comment\">% &#125;</span><br><br><span class=\"hljs-keyword\">\\RenewDocumentCommand</span>&#123; <span class=\"hljs-keyword\">\\chapter</span> &#125;&#123; s O&#123;<span class=\"hljs-params\">#3</span>&#125; m &#125;   <span class=\"hljs-comment\">% 注意#2的默认值是#3，如果为空的话目录和页眉就没有标题了</span><br>  &#123;<br>    <span class=\"hljs-keyword\">\\IfBooleanTF</span> &#123;<span class=\"hljs-params\">#1</span>&#125;<br>      &#123; <span class=\"hljs-keyword\">\\chapter_star:n</span> &#123;<span class=\"hljs-params\">#3</span>&#125; &#125;<br>      &#123; <span class=\"hljs-keyword\">\\chapter</span>:nn [<span class=\"hljs-params\">#2</span>] &#123;<span class=\"hljs-params\">#3</span>&#125; &#125;<br>    <span class=\"hljs-keyword\">\\setcounter</span>&#123;enumi&#125;&#123;0&#125;<br>  &#125;<br><span class=\"hljs-keyword\">\\makeatother</span><br><span class=\"hljs-keyword\">\\ExplSyntaxOff</span><br><br><br><span class=\"hljs-keyword\">\\begin</span>&#123;document&#125;<br><br><span class=\"hljs-keyword\">\\tableofcontents</span><br><br><span class=\"hljs-keyword\">\\chapter</span>&#123;1&#125;<br><br><span class=\"hljs-keyword\">\\begin</span>&#123;enumerate&#125;[label = <span class=\"hljs-keyword\">\\roman</span>*.]<br>  <span class=\"hljs-keyword\">\\item</span> 1<br>  <span class=\"hljs-keyword\">\\item</span> 2<br><span class=\"hljs-keyword\">\\end</span>&#123;enumerate&#125;<br><br><span class=\"hljs-keyword\">\\begin</span>&#123;enumerate&#125;<br>  <span class=\"hljs-keyword\">\\item</span> 3<br>  <span class=\"hljs-keyword\">\\item</span> 4<br><span class=\"hljs-keyword\">\\end</span>&#123;enumerate&#125;<br><br><br><span class=\"hljs-keyword\">\\chapter</span>&#123;2&#125;<br><br><span class=\"hljs-keyword\">\\begin</span>&#123;enumerate&#125;<br>  <span class=\"hljs-keyword\">\\item</span> 1<br>  <span class=\"hljs-keyword\">\\item</span> 2<br><span class=\"hljs-keyword\">\\end</span>&#123;enumerate&#125;<br><br><span class=\"hljs-keyword\">\\begin</span>&#123;enumerate&#125;<br>  <span class=\"hljs-keyword\">\\item</span> 3<br>  <span class=\"hljs-keyword\">\\item</span> 4<br><span class=\"hljs-keyword\">\\end</span>&#123;enumerate&#125;<br><br><span class=\"hljs-keyword\">\\end</span>&#123;document&#125;<br></code></pre></td></tr></table></figure>\n<div class=\"group-image-container\"><div class=\"group-image-row\"><div class=\"group-image-wrap\"><img src=\"https://raw.githubusercontent.com/xkwxdyy/image/main/postimage/image-hosting/enumerate-continume-numbering-within-chapter-MWE1.jpg\" /></div><div class=\"group-image-wrap\"><img src=\"https://raw.githubusercontent.com/xkwxdyy/image/main/postimage/image-hosting/enumerate-continume-numbering-within-chapter-MWE2.jpg\" /></div></div></div>\n<h2 id=\"相关链接\">相关链接</h2>\n<p>本文多处是在乙醇哥的帮助下完善的，特此感谢！</p>\n<p>欢迎读者关注他的博客：<a href=\"https://syvshc.github.io/\">无锤乙醇</a>和Github：<a href=\"https://github.com/syvshc\">syvshc</a></p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2022-01-06T02:53:14.346Z","updated":"2022-01-06T02:53:14.346Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0d4v0fv000bg4916p8ac7nm","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\">Quick Start</h2>\n<h3 id=\"create-a-new-post\">Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\">Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\">Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\">Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"wordcount":367,"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\">Quick Start</h2>\n<h3 id=\"create-a-new-post\">Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\">Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\">Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\">Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"Hexo与Fluid常用设置汇总","date":"2022-01-08T02:39:58.000Z","updated":"2022-01-09T05:50:00.000Z","math":true,"excerpt":"从官网指南上选取的部分设置，方便个人需要的时候查找","_content":"\n### 使用数学公式\n\n[在 Hexo 的 Fluid 主题中使用 LaTeX 公式](http://dongjiyinhe.com/posts/21980/)\n\n$x^2$\n\n$$\\lim_{n \\to \\infty} x^n = 0$$\n\n### 图床\n\n[PicGo](https://picgo.github.io/PicGo-Doc/zh/guide/)\n\n### 组图\n\n如果想把多张图片按一定布局组合显示，你可以在 markdown 中按如下格式：\n\n```markdown\n{% gi total n1-n2-... %}\n  ![](url)\n  ![](url)\n  ![](url)\n  ![](url)\n  ![](url)\n{% endgi %}\n```\n\ntotal：图片总数量，对应中间包含的图片 url 数量\nn1-n2-...：每行的图片数量，可以省略，默认单行最多 3 张图，求和必须相等于 total，否则按默认样式\n\n### Tag 插件\n\n#### [#](https://hexo.fluid-dev.com/docs/guide/#便签)便签\n\n在 markdown 中加入如下的代码来使用便签：\n\n```markdown\n{% note success %}\n文字 或者 `markdown` 均可\n{% endnote %}\n\n# 注意：上面第一行和第三行要单独成行\n```\n\n或者使用 HTML 形式：\n\n```html\n<p class=\"note note-primary\">标签</p>\n```\n\n可选便签：\n\n{% note primary %}\n\nprimary\n\n{% endnote %}\n\n{% note  secondary %}\n\nsecondary\n\n{% endnote %}\n\n{% note  success %}\n\nsuccess\n\n{% endnote %}\n\n{% note  danger %}\n\ndanger\n\n{% endnote %}\n\n{% note  warning %}\n\nwarning\n\n{% endnote %}\n\n{% note  info %}\n\ninfo\n\n{% endnote %}\n\n{% note  light %}\n\nlight\n\n{% endnote %}\n\n\n\n#### [#](https://hexo.fluid-dev.com/docs/guide/#行内标签)行内标签\n\n在 markdown 中加入如下的代码来使用 Label：\n\n```markdown\n{% label primary @text %}\n```\n\n或者使用 HTML 形式：\n\n```html\n<span class=\"label label-primary\">Label</span>\n```\n\n可选 Label：\n\n{% label primary @primary %}\n\n{% label default @default %}\n\n{% label info @info %}\n\n{% label success @success %}\n\n{% label warning @warning %}\n\n{% label danger @danger %}\n\n{% note warning %}\n\n若使用\n\n```markdown\n{% label primary @text %}\n```\n\n那么其中的text 不能以 @ 开头\n\n{% endnote %}\n\n#### [#](https://hexo.fluid-dev.com/docs/guide/#勾选框)勾选框\n\n在 markdown 中加入如下的代码来使用 Checkbox：\n\n```markdown\n{% cb text, checked?, incline? %}\n```\n\ntext：显示的文字\nchecked：默认是否已勾选，默认 false\nincline: 是否内联（可以理解为后面的文字是否换行），默认 false\n\n示例：\n\n{% cb 普通示例 %}\n\n{% cb 默认选中, true %}\n\n{% cb 内联示例, false, true %} 后面文字不换行\n\n{% cb false %} 也可以只传入一个参数，文字写在后边（这样不支持外联）\n\n\n\n#### [#](https://hexo.fluid-dev.com/docs/guide/#按钮)按钮\n\n你可以在 markdown 中加入如下的代码来使用 Button：\n\n```markdown\n{% btn url, text, title %}\n```\n\n或者使用 HTML 形式：\n\n```html\n<a class=\"btn\" href=\"url\" title=\"title\">text</a>\n```\n\nurl：跳转链接\ntext：显示的文字\ntitle：鼠标悬停时显示的文字（可选）\n\n[text](javascript:;)\n\n### 社交页图标\n\n在**主题配置**中设置：\n\n```yaml\nabout:\n  icons:\n    - { class: 'iconfont icon-github-fill', link: 'https://github.com', tip: 'GitHub' }\n    - { class: 'iconfont icon-douban-fill', link: 'https://douban.com', tip: '豆瓣' }\n    - { class: 'iconfont icon-wechat-fill', qrcode: '/img/favicon.png' }\n```\n\n- `class`: 图标的 css class，主题内置图标详见[这里](https://hexo.fluid-dev.com/docs/icon/)\n- `link`: 跳转链接\n- `tip`: 鼠标悬浮在图标上显示的提示文字\n- `qrcode`: 二维码图片，当使用此字段后，点击不再跳转，而是悬浮二维码\n\n### 其它一些小细节\n\n#### 关于苹果的Mac搭建博客中需要注意的\n\n- `npm install -g hexo-cli`安装如果不成功，要使用管理员权限，输入`sudo -s`回车输密码，然后再安装\n\n#### 如何链接邮箱\n\n```markdown\n# 注意要加一个mailto:\n[E-mail](mailto: kangweixia_xdyy@163.com)\n```\n\n## 参考\n\n- [Fluid配置指南](https://hexo.fluid-dev.com/docs/guide/)\n\n- [Front-matter](https://hexo.io/zh-cn/docs/front-matter)\n- 博客的搭建步骤主要参考[乙醇写的文章](https://syvshc.github.io/2021-03-03-build-github-io/)\n\n","source":"_posts/hexo-learning.md","raw":"---\ntitle: Hexo与Fluid常用设置汇总\ndate: 2022-01-08 10:39:58\nupdated: 2022-01-09 13:50\nmath: true\ntags: [Hexo, Fluid]\nexcerpt: 从官网指南上选取的部分设置，方便个人需要的时候查找\n---\n\n### 使用数学公式\n\n[在 Hexo 的 Fluid 主题中使用 LaTeX 公式](http://dongjiyinhe.com/posts/21980/)\n\n$x^2$\n\n$$\\lim_{n \\to \\infty} x^n = 0$$\n\n### 图床\n\n[PicGo](https://picgo.github.io/PicGo-Doc/zh/guide/)\n\n### 组图\n\n如果想把多张图片按一定布局组合显示，你可以在 markdown 中按如下格式：\n\n```markdown\n{% gi total n1-n2-... %}\n  ![](url)\n  ![](url)\n  ![](url)\n  ![](url)\n  ![](url)\n{% endgi %}\n```\n\ntotal：图片总数量，对应中间包含的图片 url 数量\nn1-n2-...：每行的图片数量，可以省略，默认单行最多 3 张图，求和必须相等于 total，否则按默认样式\n\n### Tag 插件\n\n#### [#](https://hexo.fluid-dev.com/docs/guide/#便签)便签\n\n在 markdown 中加入如下的代码来使用便签：\n\n```markdown\n{% note success %}\n文字 或者 `markdown` 均可\n{% endnote %}\n\n# 注意：上面第一行和第三行要单独成行\n```\n\n或者使用 HTML 形式：\n\n```html\n<p class=\"note note-primary\">标签</p>\n```\n\n可选便签：\n\n{% note primary %}\n\nprimary\n\n{% endnote %}\n\n{% note  secondary %}\n\nsecondary\n\n{% endnote %}\n\n{% note  success %}\n\nsuccess\n\n{% endnote %}\n\n{% note  danger %}\n\ndanger\n\n{% endnote %}\n\n{% note  warning %}\n\nwarning\n\n{% endnote %}\n\n{% note  info %}\n\ninfo\n\n{% endnote %}\n\n{% note  light %}\n\nlight\n\n{% endnote %}\n\n\n\n#### [#](https://hexo.fluid-dev.com/docs/guide/#行内标签)行内标签\n\n在 markdown 中加入如下的代码来使用 Label：\n\n```markdown\n{% label primary @text %}\n```\n\n或者使用 HTML 形式：\n\n```html\n<span class=\"label label-primary\">Label</span>\n```\n\n可选 Label：\n\n{% label primary @primary %}\n\n{% label default @default %}\n\n{% label info @info %}\n\n{% label success @success %}\n\n{% label warning @warning %}\n\n{% label danger @danger %}\n\n{% note warning %}\n\n若使用\n\n```markdown\n{% label primary @text %}\n```\n\n那么其中的text 不能以 @ 开头\n\n{% endnote %}\n\n#### [#](https://hexo.fluid-dev.com/docs/guide/#勾选框)勾选框\n\n在 markdown 中加入如下的代码来使用 Checkbox：\n\n```markdown\n{% cb text, checked?, incline? %}\n```\n\ntext：显示的文字\nchecked：默认是否已勾选，默认 false\nincline: 是否内联（可以理解为后面的文字是否换行），默认 false\n\n示例：\n\n{% cb 普通示例 %}\n\n{% cb 默认选中, true %}\n\n{% cb 内联示例, false, true %} 后面文字不换行\n\n{% cb false %} 也可以只传入一个参数，文字写在后边（这样不支持外联）\n\n\n\n#### [#](https://hexo.fluid-dev.com/docs/guide/#按钮)按钮\n\n你可以在 markdown 中加入如下的代码来使用 Button：\n\n```markdown\n{% btn url, text, title %}\n```\n\n或者使用 HTML 形式：\n\n```html\n<a class=\"btn\" href=\"url\" title=\"title\">text</a>\n```\n\nurl：跳转链接\ntext：显示的文字\ntitle：鼠标悬停时显示的文字（可选）\n\n[text](javascript:;)\n\n### 社交页图标\n\n在**主题配置**中设置：\n\n```yaml\nabout:\n  icons:\n    - { class: 'iconfont icon-github-fill', link: 'https://github.com', tip: 'GitHub' }\n    - { class: 'iconfont icon-douban-fill', link: 'https://douban.com', tip: '豆瓣' }\n    - { class: 'iconfont icon-wechat-fill', qrcode: '/img/favicon.png' }\n```\n\n- `class`: 图标的 css class，主题内置图标详见[这里](https://hexo.fluid-dev.com/docs/icon/)\n- `link`: 跳转链接\n- `tip`: 鼠标悬浮在图标上显示的提示文字\n- `qrcode`: 二维码图片，当使用此字段后，点击不再跳转，而是悬浮二维码\n\n### 其它一些小细节\n\n#### 关于苹果的Mac搭建博客中需要注意的\n\n- `npm install -g hexo-cli`安装如果不成功，要使用管理员权限，输入`sudo -s`回车输密码，然后再安装\n\n#### 如何链接邮箱\n\n```markdown\n# 注意要加一个mailto:\n[E-mail](mailto: kangweixia_xdyy@163.com)\n```\n\n## 参考\n\n- [Fluid配置指南](https://hexo.fluid-dev.com/docs/guide/)\n\n- [Front-matter](https://hexo.io/zh-cn/docs/front-matter)\n- 博客的搭建步骤主要参考[乙醇写的文章](https://syvshc.github.io/2021-03-03-build-github-io/)\n\n","slug":"hexo-learning","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cl0d4v0fw000cg491f71lga06","content":"<h3 id=\"使用数学公式\">使用数学公式</h3>\n<p><a href=\"http://dongjiyinhe.com/posts/21980/\">在 Hexo 的 Fluid 主题中使用 LaTeX 公式</a></p>\n<p><span class=\"math inline\">\\(x^2\\)</span></p>\n<p><span class=\"math display\">\\[\\lim_{n \\to \\infty} x^n = 0\\]</span></p>\n<h3 id=\"图床\">图床</h3>\n<p><a href=\"https://picgo.github.io/PicGo-Doc/zh/guide/\">PicGo</a></p>\n<h3 id=\"组图\">组图</h3>\n<p>如果想把多张图片按一定布局组合显示，你可以在 markdown 中按如下格式：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs markdown\">&#123;% gi total n1-n2-... %&#125;<br>  ![](url)<br>  ![](url)<br>  ![](url)<br>  ![](url)<br>  ![](url)<br>&#123;% endgi %&#125;<br></code></pre></td></tr></table></figure>\n<p>total：图片总数量，对应中间包含的图片 url 数量 n1-n2-...：每行的图片数量，可以省略，默认单行最多 3 张图，求和必须相等于 total，否则按默认样式</p>\n<h3 id=\"tag-插件\">Tag 插件</h3>\n<h4 id=\"便签\"><a href=\"https://hexo.fluid-dev.com/docs/guide/#便签\">#</a>便签</h4>\n<p>在 markdown 中加入如下的代码来使用便签：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\">&#123;% note success %&#125;<br>文字 或者 <span class=\"hljs-code\">`markdown`</span> 均可<br>&#123;% endnote %&#125;<br><br><span class=\"hljs-section\"># 注意：上面第一行和第三行要单独成行</span><br></code></pre></td></tr></table></figure>\n<p>或者使用 HTML 形式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;note note-primary&quot;</span>&gt;</span>标签<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>可选便签：</p>\n<div class=\"note note-primary\">\n            <p>primary</p>\n          </div>\n<div class=\"note note-secondary\">\n            <p>secondary</p>\n          </div>\n<div class=\"note note-success\">\n            <p>success</p>\n          </div>\n<div class=\"note note-danger\">\n            <p>danger</p>\n          </div>\n<div class=\"note note-warning\">\n            <p>warning</p>\n          </div>\n<div class=\"note note-info\">\n            <p>info</p>\n          </div>\n<div class=\"note note-light\">\n            <p>light</p>\n          </div>\n<h4 id=\"行内标签\"><a href=\"https://hexo.fluid-dev.com/docs/guide/#行内标签\">#</a>行内标签</h4>\n<p>在 markdown 中加入如下的代码来使用 Label：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\">&#123;% label primary @text %&#125;<br></code></pre></td></tr></table></figure>\n<p>或者使用 HTML 形式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;label label-primary&quot;</span>&gt;</span>Label<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>可选 Label：</p>\n<span class=\"label label-primary\">primary</span>\n<span class=\"label label-default\">default</span>\n<span class=\"label label-info\">info</span>\n<span class=\"label label-success\">success</span>\n<span class=\"label label-warning\">warning</span>\n<span class=\"label label-danger\">danger</span>\n<div class=\"note note-warning\">\n            <p>若使用</p><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\">&#123;% label primary @text %&#125;<br></code></pre></td></tr></table></figure><p>那么其中的text 不能以 @ 开头</p>\n          </div>\n<h4 id=\"勾选框\"><a href=\"https://hexo.fluid-dev.com/docs/guide/#勾选框\">#</a>勾选框</h4>\n<p>在 markdown 中加入如下的代码来使用 Checkbox：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\">&#123;% cb text, checked?, incline? %&#125;<br></code></pre></td></tr></table></figure>\n<p>text：显示的文字 checked：默认是否已勾选，默认 false incline: 是否内联（可以理解为后面的文字是否换行），默认 false</p>\n<p>示例：</p>\n<div>\n            <input type=\"checkbox\" disabled >普通示例\n          </div>\n<div>\n            <input type=\"checkbox\" disabled checked=\"checked\">默认选中\n          </div>\n\n            <input type=\"checkbox\" disabled >内联示例\n          \n<p>后面文字不换行</p>\n<input type=\"checkbox\" disabled >\n<p>也可以只传入一个参数，文字写在后边（这样不支持外联）</p>\n<h4 id=\"按钮\"><a href=\"https://hexo.fluid-dev.com/docs/guide/#按钮\">#</a>按钮</h4>\n<p>你可以在 markdown 中加入如下的代码来使用 Button：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\">&#123;% btn url, text, title %&#125;<br></code></pre></td></tr></table></figure>\n<p>或者使用 HTML 形式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;btn&quot;</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;url&quot;</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;title&quot;</span>&gt;</span>text<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>url：跳转链接 text：显示的文字 title：鼠标悬停时显示的文字（可选）</p>\n<p><a href=\"javascript:;\">text</a></p>\n<h3 id=\"社交页图标\">社交页图标</h3>\n<p>在<strong>主题配置</strong>中设置：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">about:</span><br>  <span class=\"hljs-attr\">icons:</span><br>    <span class=\"hljs-bullet\">-</span> &#123; <span class=\"hljs-attr\">class:</span> <span class=\"hljs-string\">&#x27;iconfont icon-github-fill&#x27;</span>, <span class=\"hljs-attr\">link:</span> <span class=\"hljs-string\">&#x27;https://github.com&#x27;</span>, <span class=\"hljs-attr\">tip:</span> <span class=\"hljs-string\">&#x27;GitHub&#x27;</span> &#125;<br>    <span class=\"hljs-bullet\">-</span> &#123; <span class=\"hljs-attr\">class:</span> <span class=\"hljs-string\">&#x27;iconfont icon-douban-fill&#x27;</span>, <span class=\"hljs-attr\">link:</span> <span class=\"hljs-string\">&#x27;https://douban.com&#x27;</span>, <span class=\"hljs-attr\">tip:</span> <span class=\"hljs-string\">&#x27;豆瓣&#x27;</span> &#125;<br>    <span class=\"hljs-bullet\">-</span> &#123; <span class=\"hljs-attr\">class:</span> <span class=\"hljs-string\">&#x27;iconfont icon-wechat-fill&#x27;</span>, <span class=\"hljs-attr\">qrcode:</span> <span class=\"hljs-string\">&#x27;/img/favicon.png&#x27;</span> &#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><code>class</code>: 图标的 css class，主题内置图标详见<a href=\"https://hexo.fluid-dev.com/docs/icon/\">这里</a></li>\n<li><code>link</code>: 跳转链接</li>\n<li><code>tip</code>: 鼠标悬浮在图标上显示的提示文字</li>\n<li><code>qrcode</code>: 二维码图片，当使用此字段后，点击不再跳转，而是悬浮二维码</li>\n</ul>\n<h3 id=\"其它一些小细节\">其它一些小细节</h3>\n<h4 id=\"关于苹果的mac搭建博客中需要注意的\">关于苹果的Mac搭建博客中需要注意的</h4>\n<ul>\n<li><code>npm install -g hexo-cli</code>安装如果不成功，要使用管理员权限，输入<code>sudo -s</code>回车输密码，然后再安装</li>\n</ul>\n<h4 id=\"如何链接邮箱\">如何链接邮箱</h4>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\"><span class=\"hljs-section\"># 注意要加一个mailto:</span><br>[<span class=\"hljs-string\">E-mail</span>](<span class=\"hljs-link\">mailto: kangweixia_xdyy@163.com</span>)<br></code></pre></td></tr></table></figure>\n<h2 id=\"参考\">参考</h2>\n<ul>\n<li><p><a href=\"https://hexo.fluid-dev.com/docs/guide/\">Fluid配置指南</a></p></li>\n<li><p><a href=\"https://hexo.io/zh-cn/docs/front-matter\">Front-matter</a></p></li>\n<li><p>博客的搭建步骤主要参考<a href=\"https://syvshc.github.io/2021-03-03-build-github-io/\">乙醇写的文章</a></p></li>\n</ul>\n","site":{"data":{}},"wordcount":1768,"more":"<h3 id=\"使用数学公式\">使用数学公式</h3>\n<p><a href=\"http://dongjiyinhe.com/posts/21980/\">在 Hexo 的 Fluid 主题中使用 LaTeX 公式</a></p>\n<p><span class=\"math inline\">\\(x^2\\)</span></p>\n<p><span class=\"math display\">\\[\\lim_{n \\to \\infty} x^n = 0\\]</span></p>\n<h3 id=\"图床\">图床</h3>\n<p><a href=\"https://picgo.github.io/PicGo-Doc/zh/guide/\">PicGo</a></p>\n<h3 id=\"组图\">组图</h3>\n<p>如果想把多张图片按一定布局组合显示，你可以在 markdown 中按如下格式：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\">&#123;% gi total n1-n2-... %&#125;<br>  ![](url)<br>  ![](url)<br>  ![](url)<br>  ![](url)<br>  ![](url)<br>&#123;% endgi %&#125;<br></code></pre></td></tr></table></figure>\n<p>total：图片总数量，对应中间包含的图片 url 数量 n1-n2-...：每行的图片数量，可以省略，默认单行最多 3 张图，求和必须相等于 total，否则按默认样式</p>\n<h3 id=\"tag-插件\">Tag 插件</h3>\n<h4 id=\"便签\"><a href=\"https://hexo.fluid-dev.com/docs/guide/#便签\">#</a>便签</h4>\n<p>在 markdown 中加入如下的代码来使用便签：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\">&#123;% note success %&#125;<br>文字 或者 <span class=\"hljs-code\">`markdown`</span> 均可<br>&#123;% endnote %&#125;<br><br><span class=\"hljs-section\"># 注意：上面第一行和第三行要单独成行</span><br></code></pre></td></tr></table></figure>\n<p>或者使用 HTML 形式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;note note-primary&quot;</span>&gt;</span>标签<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>可选便签：</p>\n<div class=\"note note-primary\">\n            <p>primary</p>\n          </div>\n<div class=\"note note-secondary\">\n            <p>secondary</p>\n          </div>\n<div class=\"note note-success\">\n            <p>success</p>\n          </div>\n<div class=\"note note-danger\">\n            <p>danger</p>\n          </div>\n<div class=\"note note-warning\">\n            <p>warning</p>\n          </div>\n<div class=\"note note-info\">\n            <p>info</p>\n          </div>\n<div class=\"note note-light\">\n            <p>light</p>\n          </div>\n<h4 id=\"行内标签\"><a href=\"https://hexo.fluid-dev.com/docs/guide/#行内标签\">#</a>行内标签</h4>\n<p>在 markdown 中加入如下的代码来使用 Label：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\">&#123;% label primary @text %&#125;<br></code></pre></td></tr></table></figure>\n<p>或者使用 HTML 形式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;label label-primary&quot;</span>&gt;</span>Label<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>可选 Label：</p>\n<span class=\"label label-primary\">primary</span>\n<span class=\"label label-default\">default</span>\n<span class=\"label label-info\">info</span>\n<span class=\"label label-success\">success</span>\n<span class=\"label label-warning\">warning</span>\n<span class=\"label label-danger\">danger</span>\n<div class=\"note note-warning\">\n            <p>若使用</p><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\">&#123;% label primary @text %&#125;<br></code></pre></td></tr></table></figure><p>那么其中的text 不能以 @ 开头</p>\n          </div>\n<h4 id=\"勾选框\"><a href=\"https://hexo.fluid-dev.com/docs/guide/#勾选框\">#</a>勾选框</h4>\n<p>在 markdown 中加入如下的代码来使用 Checkbox：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\">&#123;% cb text, checked?, incline? %&#125;<br></code></pre></td></tr></table></figure>\n<p>text：显示的文字 checked：默认是否已勾选，默认 false incline: 是否内联（可以理解为后面的文字是否换行），默认 false</p>\n<p>示例：</p>\n<div>\n            <input type=\"checkbox\" disabled >普通示例\n          </div>\n<div>\n            <input type=\"checkbox\" disabled checked=\"checked\">默认选中\n          </div>\n\n            <input type=\"checkbox\" disabled >内联示例\n          \n<p>后面文字不换行</p>\n<input type=\"checkbox\" disabled >\n<p>也可以只传入一个参数，文字写在后边（这样不支持外联）</p>\n<h4 id=\"按钮\"><a href=\"https://hexo.fluid-dev.com/docs/guide/#按钮\">#</a>按钮</h4>\n<p>你可以在 markdown 中加入如下的代码来使用 Button：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\">&#123;% btn url, text, title %&#125;<br></code></pre></td></tr></table></figure>\n<p>或者使用 HTML 形式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;btn&quot;</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;url&quot;</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;title&quot;</span>&gt;</span>text<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>url：跳转链接 text：显示的文字 title：鼠标悬停时显示的文字（可选）</p>\n<p><a href=\"javascript:;\">text</a></p>\n<h3 id=\"社交页图标\">社交页图标</h3>\n<p>在<strong>主题配置</strong>中设置：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">about:</span><br>  <span class=\"hljs-attr\">icons:</span><br>    <span class=\"hljs-bullet\">-</span> &#123; <span class=\"hljs-attr\">class:</span> <span class=\"hljs-string\">&#x27;iconfont icon-github-fill&#x27;</span>, <span class=\"hljs-attr\">link:</span> <span class=\"hljs-string\">&#x27;https://github.com&#x27;</span>, <span class=\"hljs-attr\">tip:</span> <span class=\"hljs-string\">&#x27;GitHub&#x27;</span> &#125;<br>    <span class=\"hljs-bullet\">-</span> &#123; <span class=\"hljs-attr\">class:</span> <span class=\"hljs-string\">&#x27;iconfont icon-douban-fill&#x27;</span>, <span class=\"hljs-attr\">link:</span> <span class=\"hljs-string\">&#x27;https://douban.com&#x27;</span>, <span class=\"hljs-attr\">tip:</span> <span class=\"hljs-string\">&#x27;豆瓣&#x27;</span> &#125;<br>    <span class=\"hljs-bullet\">-</span> &#123; <span class=\"hljs-attr\">class:</span> <span class=\"hljs-string\">&#x27;iconfont icon-wechat-fill&#x27;</span>, <span class=\"hljs-attr\">qrcode:</span> <span class=\"hljs-string\">&#x27;/img/favicon.png&#x27;</span> &#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><code>class</code>: 图标的 css class，主题内置图标详见<a href=\"https://hexo.fluid-dev.com/docs/icon/\">这里</a></li>\n<li><code>link</code>: 跳转链接</li>\n<li><code>tip</code>: 鼠标悬浮在图标上显示的提示文字</li>\n<li><code>qrcode</code>: 二维码图片，当使用此字段后，点击不再跳转，而是悬浮二维码</li>\n</ul>\n<h3 id=\"其它一些小细节\">其它一些小细节</h3>\n<h4 id=\"关于苹果的mac搭建博客中需要注意的\">关于苹果的Mac搭建博客中需要注意的</h4>\n<ul>\n<li><code>npm install -g hexo-cli</code>安装如果不成功，要使用管理员权限，输入<code>sudo -s</code>回车输密码，然后再安装</li>\n</ul>\n<h4 id=\"如何链接邮箱\">如何链接邮箱</h4>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\"><span class=\"hljs-section\"># 注意要加一个mailto:</span><br>[<span class=\"hljs-string\">E-mail</span>](<span class=\"hljs-link\">mailto: kangweixia_xdyy@163.com</span>)<br></code></pre></td></tr></table></figure>\n<h2 id=\"参考\">参考</h2>\n<ul>\n<li><p><a href=\"https://hexo.fluid-dev.com/docs/guide/\">Fluid配置指南</a></p></li>\n<li><p><a href=\"https://hexo.io/zh-cn/docs/front-matter\">Front-matter</a></p></li>\n<li><p>博客的搭建步骤主要参考<a href=\"https://syvshc.github.io/2021-03-03-build-github-io/\">乙醇写的文章</a></p></li>\n</ul>\n"},{"title":"Markdown 语法学习","date":"2022-01-07T16:00:00.000Z","excerpt":"记录Markdown的常见语法","_content":"\n## 参考\n\n- 语法基础篇：<https://kiyanyang.github.io/posts/78e09c9c/>\n\n","source":"_posts/markdown-learning.md","raw":"---\ntitle: Markdown 语法学习\ntags: [markdown]\ndate: 2022-01-08\nexcerpt: 记录Markdown的常见语法\n\n---\n\n## 参考\n\n- 语法基础篇：<https://kiyanyang.github.io/posts/78e09c9c/>\n\n","slug":"markdown-learning","published":1,"updated":"2022-01-07T16:00:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0d4v0fw000gg491avl5b931","content":"<h2 id=\"参考\">参考</h2>\n<ul>\n<li>语法基础篇：<a href=\"https://kiyanyang.github.io/posts/78e09c9c/\" class=\"uri\">https://kiyanyang.github.io/posts/78e09c9c/</a></li>\n</ul>\n","site":{"data":{}},"wordcount":51,"more":"<h2 id=\"参考\">参考</h2>\n<ul>\n<li>语法基础篇：<a href=\"https://kiyanyang.github.io/posts/78e09c9c/\" class=\"uri\">https://kiyanyang.github.io/posts/78e09c9c/</a></li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl0d4v0fr0001g49128eqhg0i","category_id":"cl0d4v0ft0003g491674f8ejc","_id":"cl0d4v0fw000dg4912sfd7lsp"},{"post_id":"cl0d4v0fs0002g4916vk01ieq","category_id":"cl0d4v0fv0008g4916rz86ee5","_id":"cl0d4v0fw000ig491g4ti1554"},{"post_id":"cl0d4v0fu0005g491a0mi19oi","category_id":"cl0d4v0fw000eg491eh1h6lp8","_id":"cl0d4v0fx000mg4918rye4kpn"},{"post_id":"cl0d4v0fu0006g491fbu8164s","category_id":"cl0d4v0fw000jg491epj8491w","_id":"cl0d4v0fx000wg49183j6fnex"},{"post_id":"cl0d4v0fu0006g491fbu8164s","category_id":"cl0d4v0fx000pg491auxq2gye","_id":"cl0d4v0fy000yg491equjdd1g"},{"post_id":"cl0d4v0fu0007g491a5xa9ehq","category_id":"cl0d4v0fx000ng4912st4au8a","_id":"cl0d4v0fy0010g491e8fl1myj"},{"post_id":"cl0d4v0fu0007g491a5xa9ehq","category_id":"cl0d4v0fx000rg4917nf34o6l","_id":"cl0d4v0fy0011g491duub3czm"}],"PostTag":[{"post_id":"cl0d4v0fr0001g49128eqhg0i","tag_id":"cl0d4v0ft0004g4913awp9pxx","_id":"cl0d4v0fv000ag491act6bjdt"},{"post_id":"cl0d4v0fs0002g4916vk01ieq","tag_id":"cl0d4v0fv0009g49104hg0kiy","_id":"cl0d4v0fw000hg491aci94ewe"},{"post_id":"cl0d4v0fu0005g491a0mi19oi","tag_id":"cl0d4v0fw000fg4913shognib","_id":"cl0d4v0fx000lg4917qp940wl"},{"post_id":"cl0d4v0fu0006g491fbu8164s","tag_id":"cl0d4v0fx000kg49178v1fjjw","_id":"cl0d4v0fx000tg4913w7mgbe4"},{"post_id":"cl0d4v0fu0006g491fbu8164s","tag_id":"cl0d4v0fx000og4915mhf6py3","_id":"cl0d4v0fx000ug4911iq13me5"},{"post_id":"cl0d4v0fu0006g491fbu8164s","tag_id":"cl0d4v0fx000qg49192z1687w","_id":"cl0d4v0fx000xg49113i20aq3"},{"post_id":"cl0d4v0fu0007g491a5xa9ehq","tag_id":"cl0d4v0fx000sg4916dkt1zzk","_id":"cl0d4v0fy0013g4911ejaatjr"},{"post_id":"cl0d4v0fu0007g491a5xa9ehq","tag_id":"cl0d4v0fx000vg491epd14e2e","_id":"cl0d4v0fy0014g491aa6zds8f"},{"post_id":"cl0d4v0fu0007g491a5xa9ehq","tag_id":"cl0d4v0fy000zg49141ykgt1s","_id":"cl0d4v0fy0016g491eejyb1bo"},{"post_id":"cl0d4v0fw000cg491f71lga06","tag_id":"cl0d4v0fy0012g4917fc45l91","_id":"cl0d4v0fy0018g4911a6tblij"},{"post_id":"cl0d4v0fw000cg491f71lga06","tag_id":"cl0d4v0fy0015g491h1dybidy","_id":"cl0d4v0fy0019g4919gujbfqj"},{"post_id":"cl0d4v0fw000gg491avl5b931","tag_id":"cl0d4v0fy0017g49189wn2yse","_id":"cl0d4v0fy001ag4916yvc26t4"}],"Tag":[{"name":"LaTeX杂谈","_id":"cl0d4v0ft0004g4913awp9pxx"},{"name":"LaTeX3杂谈","_id":"cl0d4v0fv0009g49104hg0kiy"},{"name":"杂谈","_id":"cl0d4v0fw000fg4913shognib"},{"name":"LaTeX3","_id":"cl0d4v0fx000kg49178v1fjjw"},{"name":"实例分析","_id":"cl0d4v0fx000og4915mhf6py3"},{"name":"宏包","_id":"cl0d4v0fx000qg49192z1687w"},{"name":"LaTeX","_id":"cl0d4v0fx000sg4916dkt1zzk"},{"name":"问题解决","_id":"cl0d4v0fx000vg491epd14e2e"},{"name":"enumerate","_id":"cl0d4v0fy000zg49141ykgt1s"},{"name":"Hexo","_id":"cl0d4v0fy0012g4917fc45l91"},{"name":"Fluid","_id":"cl0d4v0fy0015g491h1dybidy"},{"name":"markdown","_id":"cl0d4v0fy0017g49189wn2yse"}]}}